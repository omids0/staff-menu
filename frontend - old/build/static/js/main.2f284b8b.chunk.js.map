{"version":3,"sources":["components/reduxfiles/actions/foodAction.js","components/admin/NavbarAdmin.js","components/admin/AddFoodToMenu.js","components/Loading.js","components/reduxfiles/actions/userAction.js","components/SomeThingWentWrong.js","components/admin/Adduser.js","components/reduxfiles/actions/customersAction.js","components/admin/Customers.js","components/admin/EditFood.js","components/admin/Edituser.js","components/admin/Foods.js","components/reduxfiles/actions/basketActions.js","components/reduxfiles/actions/ordersActions.js","components/admin/Orders.js","components/admin/Users.js","components/AdminPage.js","components/BasketPage.js","components/customer/CreateCustomer.js","components/customer/EditCustomer.js","components/CustomersPage.js","components/homepage/FoodList.js","components/homepage/Foodtbody.js","components/EditOrder.js","components/Homepage.js","components/LoginPage.js","images/logo1.jpg","components/Navbar.js","components/OrderSending.js","components/OrdersPage.js","components/PageNotFound.js","components/SignupPage.js","components/Userorders.js","App.js","reportWebVitals.js","components/reduxfiles/store.js","components/reduxfiles/reducers/foodReducers.js","components/reduxfiles/reducers/basketReducer.js","components/reduxfiles/reducers/usersReducer.js","components/reduxfiles/reducers/customersReducer.js","components/reduxfiles/reducers/ordersReducers.js","index.js"],"names":["getAllFoodsAction","dispatch","a","type","axios","get","response","payload","data","message","NavbarAdmin","className","to","AddFoodToMenu","useState","name","setname","category","setcategory","price","setprice","description","setdescription","useDispatch","saveToMenu","e","food","preventDefault","post","window","location","href","addFoodToMenuAction","alert","placeholder","value","onChange","target","onClick","Loading","class","role","getAllUsersAction","SomeThingWentWrong","Adduser","useEffect","getUsersState","useSelector","state","getAllUsersReducer","loading","error","users","username","setusername","password","setpassword","cpassword","setcpassword","access","setaccess","phoneNum","setphoneNum","length","user","addUserAction","isActive","addNewCustomerAction","customer","findCustomerByIdAction","customerId","getAllCustomersAction","Customers","setsearch","getAllCustomerState","getAllCustomersReducer","loadingcustomers","errorLoadingCustomers","allcustomers","Table","striped","bordered","hover","responsive","map","i","customerName","customerAddress","_id","EditFood","match","foodstate","getAllFoodsReducer","foods","params","id","console","log","editFoodAction","findFood","find","Edituser","userId","editUserState","editUserReducer","currentuser","setisActive","checked","updateUserAction","deleteUserAction","Foods","allfoodsstate","removedFoodState","removeFoodReducer","loadingRemove","failed","removeFood","reload","removeFoodAction","addToBasketAction","qty","getState","basketItem","Number","fee","basketItems","addToBasketReducer","localStorage","setItem","JSON","stringify","removeFromBasketAction","emptyBasketAction","sentOrderAction","order","Orders","getAllOrdersState","getAllOrdersReducer","allOrders","serviceType","tableNum","customerTel","item","totalPrice","orderDescriptions","isDeliverd","ordersent","Users","AdminPage","BasketPage","basketstate","findcustomerstate","findCustomerByIdReducer","searchedCustomer","userloged","loginUserReducer","userLoged","service","setservice","settableNum","tableDesc","settableDesc","newCustomer","setnewCustomer","oldCustomer","setoldCustomer","setcustomerId","setcustomerName","setcustomerTel","setcustomerAddress","totalBasketPrice","reduce","c","x","newCustomerId","customerid","removeItem","addNewOrderAction","CreateCustomer","EditCustomer","editCustomerAction","CustomersPage","FoodList","setqty","Array","keys","Foodtbody","search","catg","filter","toLowerCase","includes","EditOrder","orderid","orderBasket","setorderBasket","setcatg","orderfoundstate","findOrderReducer","orderfound","orderloading","ordererror","editOrderAction","Homepage","LoginPage","loginUserState","loginUserAction","Navbar","Dropdown","Toggle","variant","bg","expand","size","Menu","src","logo","alt","OrderSending","getAllSendingOrdersState","getAllSendingOrdersReducer","sendingOrders","OrdersPage","PageNotFound","SignupPage","Userorders","userorderstate","userOrdersReducer","userorder","App","basename","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","finalReducers","combineReducers","addFoodToMenuReducer","action","success","editFoodReducer","loadingEdit","alreadyAdded","addUserReducer","updateUserReducer","loadingUpdate","deleteUserReducer","addNewCustomerReducer","removeCustomerReducer","editCustomerReducer","addNewOrderReducer","orderLoading","editOrderReducer","sentOrderReducer","initialState","getItem","parse","composeEnhancer","composeWithDevTools","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"2OAaaA,EAAoB,yDAAM,WAAMC,GAAN,eAAAC,EAAA,6DACnCD,EAAS,CAACE,KAAM,0BADmB,kBAGRC,IAAMC,IAAI,0BAHF,OAGzBC,EAHyB,OAI/BL,EAAS,CAACE,KAAM,wBAAyBI,QAASD,EAASE,OAJ5B,gDAM/BP,EAAS,CAACE,KAAM,uBAAwBI,QAAS,KAAME,UANxB,yDAAN,uD,OCVlB,SAASC,IACpB,OACI,qBAAKC,UAAU,mBAAf,SACI,sBAAKA,UAAU,8BAAf,UACQ,cAAC,IAAD,CAAMA,UAAU,YAAYC,GAAG,eAA/B,wDACA,cAAC,IAAD,CAAMD,UAAU,YAAYC,GAAG,eAA/B,4CACA,cAAC,IAAD,CAAMD,UAAU,YAAYC,GAAG,gBAA/B,wDACA,cAAC,IAAD,CAAMD,UAAU,YAAYC,GAAG,mBAA/B,6DCJL,SAASC,IACpB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,mBAAS,SAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAsCN,mBAAS,IAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KACMrB,EAAWsB,cAEjB,SAASC,EAAWC,GAChB,IAAMC,EAAO,CACTX,OACAE,WACAE,QACAE,eAEJI,EAAEE,iBAECZ,GAAQE,GAAYE,GAASE,GAC5BpB,EFrBuB,SAACyB,GAAD,8CAAU,WAAMzB,GAAN,SAAAC,EAAA,6DACzCD,EAAS,CAACE,KAAM,6BADyB,kBAGdC,IAAMwB,KAAK,2BAA4B,CAACF,SAH1B,cAIrCzB,EAAS,CAACE,KAAM,6BAChB0B,OAAOC,SAASC,KAAO,eALc,gDAOrC9B,EAAS,CAACE,KAAM,0BAA2BI,QAAS,KAAME,UAPrB,yDAAV,sDEqBduB,CAAoBN,IAC7BV,EAAQ,IACRE,EAAY,SACZE,EAAS,IACTE,EAAe,KAEfW,MAAM,gKAId,OACI,sBAAKtB,UAAU,iBAAf,UACI,cAACD,EAAD,IACA,oBAAIC,UAAU,eAAd,gJACA,uBAAMA,UAAU,gBAAhB,UACI,uBAAOR,KAAK,OAAO+B,YAAY,qBAAMvB,UAAU,sBAAsBwB,MAAOpB,EAAMqB,SAAU,SAACX,GAAD,OAAOT,EAAQS,EAAEY,OAAOF,UACpH,yBAAQxB,UAAU,sBAAsBuB,YAAY,oDAAYC,MAAOlB,EAAUmB,SAAU,SAACX,GAAD,OAAOP,EAAYO,EAAEY,OAAOF,QAAvH,UACI,wBAAQA,MAAM,QAAd,wFACA,wBAAQA,MAAM,WAAd,gCACA,wBAAQA,MAAM,cAAd,4CACA,wBAAQA,MAAM,QAAd,wDACA,wBAAQA,MAAM,YAAd,sDAEJ,uBAAOhC,KAAK,SAAS+B,YAAY,2BAAOvB,UAAU,sBAAsBwB,MAAOhB,EAAOiB,SAAU,SAACX,GAAD,OAAOL,EAASK,EAAEY,OAAOF,UACzH,0BAAUD,YAAY,6CAAUvB,UAAU,sBAAsBwB,MAAOd,EAAae,SAAU,SAACX,GAAD,OAAOH,EAAeG,EAAEY,OAAOF,UAC7H,wBAAQxB,UAAU,eAAe2B,QAAS,SAACb,GAAD,OAAOD,EAAWC,IAA5D,kDC9CD,SAASc,IACpB,OACI,8BACI,qBAAKC,MAAM,iBAAiBC,KAAK,SAAjC,SACI,sBAAMD,MAAM,gBCJrB,IAWME,EAAoB,yDAAM,WAAMzC,GAAN,eAAAC,EAAA,6DACjCD,EAAS,CAAEE,KAAM,0BADgB,kBAGJC,IAAMC,IAAI,0BAHN,OAGrBC,EAHqB,OAI3BL,EAAS,CAAEE,KAAM,wBAAyBI,QAASD,EAASE,OAJjC,gDAM3BP,EAAS,CAAEE,KAAM,uBAAwBI,QAAS,KAAME,UAN7B,yDAAN,uDCXlB,SAASkC,IACpB,OACI,8BACI,4HCEG,SAASC,IAClB,IAAM3C,EAAWsB,cAEjBsB,qBAAU,WACJ5C,EAASyC,OACZ,IAEH,IAAMI,EAAgBC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,sBACzCC,EAA0BJ,EAA1BI,QAASC,EAAiBL,EAAjBK,MAAOC,EAAUN,EAAVM,MAExB,EAAgCtC,mBAAS,IAAzC,mBAAOuC,EAAP,KAAiBC,EAAjB,KACA,EAAgCxC,mBAAS,IAAzC,mBAAOyC,EAAP,KAAiBC,EAAjB,KACA,EAAkC1C,mBAAS,IAA3C,mBAAO2C,EAAP,KAAkBC,EAAlB,KACA,EAA4B5C,mBAAS,UAArC,mBAAO6C,EAAP,KAAeC,EAAf,KACA,EAAgC9C,mBAAS,IAAzC,mBAAO+C,EAAP,KAAiBC,EAAjB,KAuBA,OArBAjB,qBAAU,WACAO,EAAMW,OAAS,GACbT,EAAYF,EAAMW,OAAS,SAEpC,CAACX,EAAOF,EAASjD,IAkBd,sBAAKU,UAAU,iBAAf,UACM,cAACD,EAAD,IACA,oBAAIC,UAAU,eAAd,+KAEMuC,EAAU,cAACX,EAAD,IAAcY,EAAQ,cAACR,EAAD,IAC1B,sBAAKhC,UAAU,gBAAf,UACM,wBAAOA,UAAU,aAAjB,qEAEM,uBAAOR,KAAK,OAAOQ,UAAU,sBAAsBuB,YAAY,0DAAaC,MAAOkB,OAEzF,wBAAO1C,UAAU,aAAjB,yDAEM,uBAAOR,KAAK,WAAWQ,UAAU,sBAAsBuB,YAAY,8CAAWC,MAAOoB,EAAUnB,SAAU,SAACX,GAAD,OAAO+B,EAAY/B,EAAEY,OAAOF,aAE3I,wBAAOxB,UAAU,aAAjB,wFAEM,uBAAOR,KAAK,WAAWQ,UAAU,sBAAsBuB,YAAY,6EAAiBC,MAAOsB,EAAWrB,SAAU,SAACX,GAAD,OAAOiC,EAAajC,EAAEY,OAAOF,aAEnJ,wBAAOxB,UAAU,aAAjB,qEAEM,yBAAQuB,YAAY,uCAASvB,UAAU,sBAAsBwB,MAAOwB,EAAQvB,SAAU,SAACX,GAAD,OAAOmC,EAAUnC,EAAEY,OAAOF,QAAhH,UACM,wBAAQA,MAAM,QAAd,kFACA,wBAAQA,MAAM,UAAd,8DACA,wBAAQA,MAAM,SAAd,4CAGZ,wBAAOxB,UAAU,aAAjB,oGAEM,uBAAOR,KAAK,MAAM+B,YAAY,yFAAmBvB,UAAU,sBAAsBwB,MAAO0B,EAAUzB,SAAU,SAACX,GAAD,OAAOqC,EAAYrC,EAAEY,OAAOF,aAE9I,wBAAQxB,UAAU,eAAe2B,QA9C/D,WACUiB,IAAaE,GAAaJ,GAAyB,KAAbE,GAAmBM,EAQvD5D,EFpCW,SAAC+D,GAAD,8CAAU,WAAM/D,GAAN,SAAAC,EAAA,6DACjCD,EAAS,CAAEE,KAAM,qBADgB,kBAGJC,IAAMwB,KAAK,qBAAsB,CAAEoC,SAH/B,cAI3B/D,EAAS,CAAEE,KAAM,qBACjB0B,OAAOC,SAASC,KAAO,gBALI,gDAO3B9B,EAAS,CAAEE,KAAM,kBAAmBI,QAAS,KAAME,UAPxB,yDAAV,sDEoCFwD,CAPI,CACPZ,WACAE,WACAI,SACAE,WACAK,UAAU,KAIhBjC,MAAM,uMAmCY,kD,YCzEvBkC,EAAuB,SAACC,GAAD,8CAAc,WAAMnE,GAAN,SAAAC,EAAA,6DAC5CD,EAAS,CAAEE,KAAM,6BAD2B,kBAGfC,IAAMwB,KAAK,gCAAiC,CAAEwC,aAH/B,cAItCnE,EAAS,CAAEE,KAAM,6BAJqB,gDAMtCF,EAAS,CAAEE,KAAM,0BAA2BI,QAAS,KAAME,UANrB,yDAAd,uDAUvB4D,EAAyB,SAACC,GAAD,8CAAgB,WAAMrE,GAAN,eAAAC,EAAA,6DAChDD,EAAS,CAAEE,KAAM,gCAD+B,kBAGnBC,IAAMwB,KAAK,kCAAmC,CAAE0C,eAH7B,OAGpChE,EAHoC,OAI1CL,EAAS,CAAEE,KAAM,8BAA+BI,QAASD,EAASE,OAJxB,gDAM1CP,EAAS,CAAEE,KAAM,6BAA8BI,QAAS,KAAME,UANpB,yDAAhB,uDAUzB8D,EAAwB,yDAAM,WAAMtE,GAAN,eAAAC,EAAA,6DACrCD,EAAS,CAAEE,KAAM,8BADoB,kBAGRC,IAAMC,IAAI,kCAHF,OAGzBC,EAHyB,OAI/BL,EAAS,CAAEE,KAAM,4BAA6BI,QAASD,EAASE,OAJjC,gDAM/BP,EAAS,CAAEE,KAAM,2BAA4BI,QAAS,KAAME,UAN7B,yDAAN,uDCbtB,SAAS+D,IACpB,IAAMvE,EAAWsB,cACjB,EAA4BT,mBAAS,IAArC,mBAAe2D,GAAf,WAEA5B,qBAAU,WACJ5C,EAASsE,OACZ,IAEH,IAAMG,EAAsB3B,aAAY,SAAAC,GAAK,OAAIA,EAAM2B,0BAC/CC,EAA0DF,EAA1DE,iBAAkBC,EAAwCH,EAAxCG,sBAAuBC,EAAiBJ,EAAjBI,aAEjD,OACI,sBAAKnE,UAAU,iBAAf,UACI,cAACD,EAAD,IACA,oBAAIC,UAAU,eAAd,uHAEA,sBAAKA,UAAU,wBAAf,UACA,wBAAOA,UAAU,qBAAjB,2EAEM,uBAAOA,UAAU,kBAAkBR,KAAK,OAAO+B,YAAY,iCAAQE,SAAU,SAACX,GAAD,OAAOgD,EAAUhD,EAAEY,OAAOF,aAE7G,yBAAQxB,UAAU,kBAAkB2B,QAAS,kBAAMT,OAAOC,SAASC,KAAO,yBAA1E,UAAmG,mBAAGS,MAAM,mCAA5G,oFAEN,sBAAK7B,UAAU,aAAf,UACOiE,GAAoB,cAACrC,EAAD,IACpBsC,GAAyB,cAAClC,EAAD,IACzBmC,GAAgBA,EAAaf,OAAS,GACjC,eAACgB,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAxC,UACM,gCACM,+BACM,mCACA,mFACA,mFACA,yFACA,0GAGZ,gCAEYL,EAAaM,KAAI,SAAChB,EAAUiB,GAAX,OACX,+BACM,6BAAKA,EAAI,IACT,6BAAKjB,EAASE,aACd,6BAAKF,EAASkB,eACd,6BAAKlB,EAASmB,kBACd,6BACM,cAAC,IAAD,CAAM3E,GAAE,8BAAyBwD,EAASoB,KAA1C,SACM,mBAAGhD,MAAM,2CChDtD,SAASiD,EAAT,GAA8B,IAAVC,EAAS,EAATA,MAC/B,EAAwB5E,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,mBAAS,SAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAsCN,mBAAS,IAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KACMrB,EAAWsB,cACXoE,EAAY5C,aAAY,SAAAC,GAAK,OAAIA,EAAM4C,sBACrC1C,EAA0ByC,EAA1BzC,QAASC,EAAiBwC,EAAjBxC,MAAO0C,EAAUF,EAAVE,MAmBxB,SAASrE,EAAWC,GAChB,IAAMC,EAAO,CACT8D,IAAIE,EAAMI,OAAOC,GACjBhF,OACAE,WACAE,QACAE,eAEJI,EAAEE,iBAEEZ,GAAQE,GAAYE,GAASE,GAC7B2E,QAAQC,IAAIvE,GACZzB,ETZkB,SAACyB,GAAD,8CAAU,WAAMzB,GAAN,SAAAC,EAAA,6DACpCD,EAAS,CAACE,KAAM,sBADoB,kBAGTC,IAAMwB,KAAK,sBAAsB,CAACF,SAHzB,cAIhCzB,EAAS,CAACE,KAAM,sBAChB0B,OAAOC,SAASC,KAAO,gBALS,gDAOhC9B,EAAS,CAACE,KAAM,mBAAoBI,QAAS,KAAME,UAPnB,yDAAV,sDSYTyF,CAAexE,IACxBV,EAAQ,IACRE,EAAY,SACZE,EAAS,IACTE,EAAe,KAEfW,MAAM,gKAGd,OAtCAY,qBAAU,WACN5C,EAASD,OACV,IAEH6C,qBAAU,WACN,IAAMsD,EAAWN,EAAMO,MAAK,SAAA1E,GAAI,OAAIA,EAAK8D,MAAQE,EAAMI,OAAOC,MAC1DI,GACAH,QAAQC,IAAIE,GACZnF,EAAQmF,EAASpF,MACjBG,EAAYiF,EAASlF,UACrBG,EAAS+E,EAAShF,OAClBG,EAAe6E,EAAS9E,cAExBpB,EAASD,OAEd,CAAC6F,EAAO5F,IAwBP,sBAAKU,UAAU,iBAAf,UACI,cAACD,EAAD,IACA,oBAAIC,UAAU,eAAd,gJAEIuC,EAAU,cAACX,EAAD,IAAcY,EAAQ,cAACR,EAAD,IAC5B,uBAAMhC,UAAU,gBAAhB,UACI,uBAAOR,KAAK,OAAO+B,YAAY,qBAAMvB,UAAU,sBAAsBwB,MAAOpB,EAAMqB,SAAU,SAACX,GAAD,OAAOT,EAAQS,EAAEY,OAAOF,UACpH,yBAAQxB,UAAU,sBAAsBuB,YAAY,oDAAYC,MAAOlB,EAAUmB,SAAU,SAACX,GAAD,OAAOP,EAAYO,EAAEY,OAAOF,QAAvH,UACI,wBAAQA,MAAM,QAAd,wFACA,wBAAQA,MAAM,WAAd,gCACA,wBAAQA,MAAM,cAAd,4CACA,wBAAQA,MAAM,QAAd,wDACA,wBAAQA,MAAM,YAAd,sDAEJ,uBAAOhC,KAAK,SAAS+B,YAAY,2BAAOvB,UAAU,sBAAsBwB,MAAOhB,EAAOiB,SAAU,SAACX,GAAD,OAAOL,EAASK,EAAEY,OAAOF,UACzH,0BAAUD,YAAY,6CAAUvB,UAAU,sBAAsBwB,MAAOd,EAAae,SAAU,SAACX,GAAD,OAAOH,EAAeG,EAAEY,OAAOF,UAC7H,wBAAQxB,UAAU,eAAe2B,QAAS,SAACb,GAAD,OAAOD,EAAWC,IAA5D,kDCjET,SAAS4E,EAAT,GAA8B,IACjCN,EADgC,EAATL,MACZI,OAAOC,GAClB9F,EAAWsB,cAEjBsB,qBAAU,WNYc,IAACyD,EMXnBrG,GNWmBqG,EMXKP,ENWN,uCAAY,WAAM9F,GAAN,eAAAC,EAAA,6DACpCD,EAAS,CAAEE,KAAM,sBADmB,kBAGPC,IAAMwB,KAAK,sBAAuB,CAAE0E,WAH7B,OAGxBhG,EAHwB,OAI9BL,EAAS,CAAEE,KAAM,oBAAqBI,QAASD,EAASE,OAJ1B,gDAM9BP,EAAS,CAAEE,KAAM,mBAAoBI,QAAS,KAAME,UANtB,yDAAZ,0DMVrB,IAEH,IAAM8F,EAAgBxD,aAAY,SAAAC,GAAK,OAAIA,EAAMwD,mBACzCtD,EAAgCqD,EAAhCrD,QAASC,EAAuBoD,EAAvBpD,MAAOsD,EAAgBF,EAAhBE,YAExB,EAAgC3F,mBAAS,IAAzC,mBAAOuC,EAAP,KAAiBC,EAAjB,KACA,EAAgCxC,mBAAS,IAAzC,mBAAOyC,EAAP,KAAiBC,EAAjB,KACA,EAAkC1C,mBAAS,IAA3C,mBAAO2C,EAAP,KAAkBC,EAAlB,KACA,EAA4B5C,mBAAS,UAArC,mBAAO6C,EAAP,KAAeC,EAAf,KACA,EAAgC9C,mBAAS,IAAzC,mBAAO+C,EAAP,KAAiBC,EAAjB,KACA,EAAgChD,mBAAS,IAAzC,mBAAOoD,EAAP,KAAiBwC,EAAjB,KAmCA,OAbA7D,qBAAU,WACA4D,IACET,QAAQC,IAAIQ,EAAYvC,UAExBZ,EAAYmD,EAAYpD,UACxBC,EAAYmD,EAAYpD,UACxBG,EAAYiD,EAAYlD,UACxBK,EAAU6C,EAAY9C,QACtBG,EAAY2C,EAAY5C,UACxB6C,EAAYD,EAAYvC,aAEjC,CAACuC,EAAavD,EAASjD,IAGpB,sBAAKU,UAAU,iBAAf,UACM,cAACD,EAAD,IACA,oBAAIC,UAAU,eAAd,4LAEMuC,EAAU,cAACX,EAAD,IAAcY,EAAQ,cAACR,EAAD,IAC1B,sBAAKhC,UAAU,gBAAf,UACM,wBAAOA,UAAU,aAAjB,qEAEM,uBAAOR,KAAK,OAAOQ,UAAU,sBAAsBuB,YAAY,0DAAaC,MAAOkB,OAEzF,wBAAO1C,UAAU,aAAjB,yDAEM,uBAAOR,KAAK,WAAWQ,UAAU,sBAAsBuB,YAAY,8CAAWC,MAAOoB,EAAUnB,SAAU,SAACX,GAAD,OAAO+B,EAAY/B,EAAEY,OAAOF,aAE3I,wBAAOxB,UAAU,aAAjB,wFAEM,uBAAOR,KAAK,WAAWQ,UAAU,sBAAsBuB,YAAY,6EAAiBC,MAAOsB,EAAWrB,SAAU,SAACX,GAAD,OAAOiC,EAAajC,EAAEY,OAAOF,aAEnJ,wBAAOxB,UAAU,aAAjB,qEAEM,yBAAQuB,YAAY,uCAASvB,UAAU,sBAAsBwB,MAAOwB,EAAQvB,SAAU,SAACX,GAAD,OAAOmC,EAAUnC,EAAEY,OAAOF,QAAhH,UACM,wBAAQA,MAAM,QAAd,kFACA,wBAAQA,MAAM,UAAd,8DACA,wBAAQA,MAAM,SAAd,4CAGZ,wBAAOxB,UAAU,aAAjB,oGAEM,uBAAOR,KAAK,MAAM+B,YAAY,yFAAmBvB,UAAU,sBAAsBwB,MAAO0B,EAAUzB,SAAU,SAACX,GAAD,OAAOqC,EAAYrC,EAAEY,OAAOF,aAE9I,wBAAOxB,UAAU,aAAjB,uFAEM,uBAAOR,KAAK,WAAWwG,QAASzC,EAAU9B,SAAU,SAACX,GAAD,OAAOiF,GAAaxC,SAE9E,sBAAKvD,UAAU,iBAAf,UACM,wBAAQA,UAAU,WAAW2B,QArEjE,WACM,GAAIiB,IAAaE,GAAaJ,GAAyB,KAAbE,GAAmBM,EAAU,CACjE,IAAMG,EAAO,CACPwB,IAAKiB,EAAYjB,IACjBnC,WACAE,WACAI,SACAE,WACAK,YAENjE,ENFc,SAAC+D,GAAD,8CAAU,WAAM/D,GAAN,SAAAC,EAAA,6DACpCD,EAAS,CAAEE,KAAM,6BADmB,kBAGPC,IAAMwB,KAAK,wBAAyB,CAAEoC,SAH/B,cAI9B/D,EAAS,CAAEE,KAAM,6BACjB0B,OAAOC,SAASC,KAAO,gBALO,gDAO9B9B,EAAS,CAAEE,KAAM,0BAA2BI,QAAS,KAAME,UAP7B,yDAAV,sDMELmG,CAAiB5C,SAE1B/B,MAAM,uMAyDkB,4CACA,wBAAQtB,UAAU,aAAa2B,QAtDnE,WACMrC,ENEoB,SAAC8F,GAAD,8CAAQ,WAAM9F,GAAN,SAAAC,EAAA,6DAClCD,EAAS,CAAEE,KAAM,wBADiB,kBAGLC,IAAMwB,KAAK,wBAAyB,CAAEmE,OAHjC,cAI5B9F,EAAS,CAAEE,KAAM,wBACjB0B,OAAOC,SAASC,KAAO,gBALK,gDAO5B9B,EAAS,CAAEE,KAAM,qBAAsBI,QAAS,KAAME,UAP1B,yDAAR,sDMFXoG,CAAiBJ,EAAYjB,OAqDR,wECrF3B,SAASsB,IACpB,IAAM7G,EAAWsB,cACXwF,EAAgBhE,aAAY,SAAAC,GAAK,OAAIA,EAAM4C,sBACzC1C,EAA0B6D,EAA1B7D,QAASC,EAAiB4D,EAAjB5D,MAAO0C,EAAUkB,EAAVlB,MAElBmB,EAAmBjE,aAAY,SAAAC,GAAK,OAAIA,EAAMiE,qBAC5CC,EAA0BF,EAA1BE,cAAeC,EAAWH,EAAXG,OAMvB,SAASC,EAAWrB,GAChB9F,EXAwB,SAAC8F,GAAD,8CAAQ,WAAM9F,GAAN,SAAAC,EAAA,6DACpCD,EAAS,CAACE,KAAM,wBADoB,kBAGTC,IAAMwB,KAAK,wBAAyB,CAACmE,OAH5B,cAIhC9F,EAAS,CAACE,KAAM,wBAChB0B,OAAOC,SAASuF,SALgB,gDAOhCpH,EAAS,CAACE,KAAM,qBAAsBI,QAAS,KAAME,UAPrB,yDAAR,sDWAf6G,CAAiBvB,IAM9B,OAXAlD,qBAAU,WACN5C,EAASD,OACV,IAUC,sBAAKW,UAAU,iBAAf,UACI,cAACD,EAAD,IACA,oBAAIC,UAAU,eAAd,2GACA,cAAC,IAAD,CAAMA,UAAU,oBAAoBC,GAAG,yBAAvC,SACI,yBAAQD,UAAU,oBAAlB,UAAsC,mBAAG6B,MAAM,4BAA/C,6EAEJ,sBAAK7B,UAAU,aAAf,UACKuG,GAAiB,cAAC3E,EAAD,IACjB4E,GAAU,cAACxE,EAAD,IAEPO,EAAU,cAACX,EAAD,IAAcY,EAAQ,cAACR,EAAD,IAC5B,eAACoC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAxC,UACI,gCACI,+BACI,mCACA,oDACA,mFACA,0DACA,4EACA,qEAGR,gCAEQU,EAAMT,KAAI,SAAC1D,EAAM2D,GAAP,OACN,+BACI,6BAAKA,EAAI,IACT,6BAAK3D,EAAKX,OACV,6BACsB,aAAlBW,EAAKT,SACD,qBAA0B,gBAAlBS,EAAKT,SACT,iCAA4B,cAAlBS,EAAKT,SACX,wCAAY,+CAE5B,6BAAKS,EAAKP,QACV,6BAAKO,EAAKL,cACV,+BACI,wBAAQV,UAAU,WAAW2B,QAAS,kBAzChEyD,EAyC+ErE,EAAK8D,SAxClG3D,OAAOC,SAASC,KAAhB,4BAA4CgE,IADhD,IAAkBA,GAyC0B,kDACA,wBAAQpF,UAAU,aAAa2B,QAAS,kBAAM8E,EAAW1F,EAAK8D,MAA9D,oDCpEzC,IAAM+B,EAAoB,SAAC7F,EAAM8F,GAAP,OAAe,SAACvH,EAAUwH,GACrD,IAAIC,EAAa,CACXlC,IAAK9D,EAAK8D,IACVzE,KAAMW,EAAKX,KACXI,MAAOO,EAAKP,MACZqG,IAAKG,OAAOH,GACZvG,SAAUS,EAAKT,SACfI,YAAaK,EAAKL,YAClBuG,IAAKlG,EAAKP,MAAQqG,GAGlBvH,EADFyH,EAAWF,IAAM,EACN,CAAErH,KAAM,qBAAsBI,QAASmB,GAEvC,CAAEvB,KAAM,gBAAiBI,QAASmH,IAEjD,IAAMG,EAAcJ,IAAWK,mBAAmBD,YAClDE,aAAaC,QAAQ,SAAUC,KAAKC,UAAUL,MAGvCM,EAAyB,SAACzG,GAAD,OAAU,SAACzB,EAAUwH,GACrDxH,EAAS,CAAEE,KAAM,qBAAsBI,QAASmB,IAChD,IAAMmG,EAAcJ,IAAWK,mBAAmBD,YAClDE,aAAaC,QAAQ,SAAUC,KAAKC,UAAUL,MAGvCO,EAAoB,kBAAM,SAACnI,EAAUwH,GAC5CxH,EAAS,CAACE,KAAM,iBAChB,IAAM0H,EAAcJ,IAAWK,mBAAmBD,YAClDE,aAAaC,QAAQ,SAAUC,KAAKC,UAAUL,MCOvCQ,EAAkB,SAACC,GAAD,8CAAW,WAAMrI,GAAN,SAAAC,EAAA,6DACpCD,EAAS,CAACE,KAAM,uBADoB,kBAGPC,IAAMwB,KAAK,wBAAyB,CAAC0G,UAH9B,cAI9BrI,EAAS,CAACE,KAAM,uBAChB0B,OAAOC,SAASuF,SALc,gDAO9BpH,EAAS,CAACE,KAAM,oBAAqBI,QAAS,KAAME,UAPtB,yDAAX,uDCzBhB,SAAS8H,IACpB,IAAMC,EAAoBzF,aAAY,SAAAC,GAAK,OAAIA,EAAMyF,uBAC7CvF,EAA8BsF,EAA9BtF,QAASC,EAAqBqF,EAArBrF,MAAOuF,EAAcF,EAAdE,UAElBzI,EAAWsB,cAcjB,OAZAsB,qBAAU,WACJ5C,EDiDwB,uCAAM,WAAMA,GAAN,eAAAC,EAAA,6DAClCD,EAAS,CAACE,KAAM,2BADkB,kBAGLC,IAAMC,IAAI,4BAHL,OAGtBC,EAHsB,OAI5BL,EAAS,CAACE,KAAM,yBAA0BI,QAASD,EAASE,OAJhC,gDAM5BP,EAAS,CAACE,KAAM,wBAAyBI,QAAS,KAAME,UAN5B,yDAAN,yDChD5B,IAWE,sBAAKE,UAAU,iBAAf,UACA,cAACD,EAAD,IACA,oBAAIC,UAAU,eAAd,uHACU,sBAAKA,UAAU,uBAAf,UACOuC,GAAW,cAACX,EAAD,IACXY,GAAS,cAACR,EAAD,IACT+F,GACW,eAAC3D,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAxC,UACM,gCACM,+BACM,mCACA,mFACA,mFACA,2GACA,mFACA,uEACA,2GACA,oGAGZ,gCAEUuD,EAAUtD,KAAI,SAACkD,EAAOjD,GAAR,OACN,+BACM,6BAAKA,EAAI,IACT,6BAC4B,UAAtBiD,EAAMK,YAA0B,oDACJ,QAAtBL,EAAMK,YAAwB,8EAAoB,gFAE9D,6BAAKL,EAAMM,SAAWN,EAAMM,SAAW,MACvC,6BACM,gCACM,kCAAKN,EAAMlE,SAAS,GAAGkB,gBACvB,kCAAKgD,EAAMlE,SAAS,GAAGyE,eACvB,kCAAKP,EAAMlE,SAAS,GAAGmB,wBAGnC,6BAEY+C,EAAMT,YAAYzC,KAAI,SAAC0D,EAAMzD,GAAP,OAChB,gCACM,6BAAKyD,EAAK/H,OACV,sCAAO+H,EAAKtB,IAAZ,cAAqBsB,EAAK3H,MAA1B,cAAqC2H,EAAKlB,OAC1C,+BAKxB,6BAAKU,EAAMS,aACX,6BAAKT,EAAMU,oBACX,+BACOV,EAAMW,WAAa,wBAAQtI,UAAU,WAAlB,mFAAwD,wBAAQ2B,QAAS,kBA5DjK,SAAmByD,GACb,IAAMuC,EAAQ,CACR9C,IAAKO,EACLkD,YAAY,GAElBjD,QAAQC,IAAIqC,GACZrI,EAASoI,EAAgBC,IAsDwIY,CAAUZ,EAAM9C,MAAM7E,UAAU,iBAAvD,kGAC1E2H,EAAMW,YAAc,cAAC,IAAD,CAAMtI,UAAU,MAAMC,GAAE,0BAAqB0H,EAAM9C,KAAnD,SAA0D,mBAAGhD,MAAM,oBAAoBF,QAAS,kBAAMrC,EAASmI,8BCxE9L,SAASe,IACpB,IAAMlJ,EAAWsB,cAEjBsB,qBAAU,WACN5C,EAASyC,OACV,IAEH,IAAMI,EAAgBC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,sBACzCC,EAA0BJ,EAA1BI,QAASC,EAAiBL,EAAjBK,MAAOC,EAAUN,EAAVM,MAExB,OACI,sBAAKzC,UAAU,iBAAf,UACI,cAACD,EAAD,IACA,oBAAIC,UAAU,eAAd,uHACA,cAAC,IAAD,CAAMA,UAAU,oBAAoBC,GAAG,uBAAvC,SACI,yBAAQD,UAAU,oBAAlB,UAAsC,mBAAG6B,MAAM,4BAA/C,gEAEJ,qBAAK7B,UAAU,aAAf,SACKuC,EAAU,cAACX,EAAD,IAAcY,EAAQ,cAACR,EAAD,IACzB,eAACoC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAxC,UACI,gCACI,+BACI,mCACA,yFACA,6EACA,6GACA,wHACA,qEAGR,gCAEQ/B,EAAMgC,KAAI,SAACpB,EAAMqB,GAAP,OACN,+BACI,6BAAKA,EAAI,IACT,6BAAKrB,EAAKX,WACV,6BAAKW,EAAKT,WACV,6BAAKS,EAAKL,SACV,6BAAKK,EAAKH,WACV,+BAAKG,EAAKE,SACN,yDACA,4EAEA,cAAC,IAAD,CAAMtD,GAAE,4BAAuBoD,EAAKwB,KAApC,SACI,mBAAGhD,MAAM,2CCjD9C,SAAS4G,IAMpB,OAJAvG,qBAAU,WACNhB,OAAOC,SAASC,KAAO,iBACzB,IAGE,sBAAKpB,UAAU,iBAAf,UACI,cAACD,EAAD,IACA,oBAAIC,UAAU,eAAd,+ECLG,SAAS0I,IACpB,IAAMC,EAAcvG,aAAY,SAAAC,GAAK,OAAIA,EAAM8E,mBAAmBD,eAE5D0B,EAAoBxG,aAAY,SAAAC,GAAK,OAAIA,EAAMwG,2BAC7CtG,EAAqCqG,EAArCrG,QAASC,EAA4BoG,EAA5BpG,MAAOsG,EAAqBF,EAArBE,iBAElB/E,EAAsB3B,aAAY,SAAAC,GAAK,OAAIA,EAAM2B,0BACNG,GAAiBJ,EAA1DE,iBAA0DF,EAAxCG,sBAAwCH,EAAjBI,cAE3C4E,EAAY3G,aAAY,SAAAC,GAAK,OAAIA,EAAM2G,iBAAiBC,aAExD3J,EAAWsB,cAEjB,EAA8BT,mBAAS,SAAvC,mBAAO+I,EAAP,KAAgBC,EAAhB,KACA,EAAgChJ,mBAAS,IAAzC,mBAAO8H,EAAP,KAAiBmB,EAAjB,KACA,EAAkCjJ,mBAAS,IAA3C,mBAAOkJ,EAAP,KAAkBC,EAAlB,KACA,EAAsCnJ,oBAAS,GAA/C,mBAAOoJ,EAAP,KAAoBC,EAApB,KACA,EAAsCrJ,oBAAS,GAA/C,mBAAOsJ,EAAP,KAAoBC,EAApB,KACA,EAAwCvJ,oBAAS,GAAjD,mBAEA,GAFA,UAEoCA,mBAAS,KAA7C,mBAAOwD,EAAP,KAAmBgG,EAAnB,KACA,EAAwCxJ,mBAAS,IAAjD,mBAAOwE,EAAP,KAAqBiF,EAArB,KACA,EAAsCzJ,mBAAS,IAA/C,oBAAO+H,GAAP,MAAoB2B,GAApB,MACA,GAA8C1J,mBAAS,IAAvD,qBAAOyE,GAAP,MAAwBkF,GAAxB,MAEMC,GAAmBpB,EAAYqB,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,EAAEjD,MAAK,GAyEjE,OA5DA/E,qBAAU,WACF4G,IACAc,EAAgBd,EAAiBnE,cACjCkF,GAAef,EAAiBZ,aAChC4B,GAAmBhB,EAAiBlE,oBAEzC,CAACkE,IAEJ5G,qBAAU,WACN5C,EAASsE,OACV,IAmDC,sBAAK5D,UAAU,iBAAf,UACI,oBAAIA,UAAU,gBAAd,qEACA,sBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,sBAAf,UACK2I,EAAYlE,KAAI,SAAA0D,GAAI,OACjB,sBAAKnI,UAAU,qBAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,6BAAKmI,EAAK/H,OACV,wBAAQJ,UAAU,qBAAqB2B,QAAS,kBAAMrC,EAASkI,EAAuBW,KAAtF,kBAEJ,sBAAKnI,UAAU,oBAAf,UACI,8BAAImI,EAAK3H,MAAT,MAAmB2H,EAAKtB,IAAxB,MAAgCsB,EAAKlB,OACrC,gCACI,wBAAQjH,UAAU,uBAAuB2B,QAAS,kBAAMrC,EAASsH,EAAkBuB,EAAMA,EAAKtB,IAAM,KAApG,eACCsB,EAAKtB,IACN,wBAAQ7G,UAAU,wBAAwB2B,QAAS,kBAAMrC,EAASsH,EAAkBuB,EAAMA,EAAKtB,IAAM,KAArG,2BAKf8B,EAAYvF,QAAU,GAAK,mBAAGpD,UAAU,eAAb,sFAGhC,gCACI,qBAAKA,UAAU,2BAAf,SACI,yBAAQA,UAAU,+BAA+BwB,MAAO0H,EAASzH,SAAU,SAACX,GAAD,OAAOqI,EAAWrI,EAAEY,OAAOF,QAAtG,UACI,wBAAQA,MAAM,QAAd,+DACA,wBAAQA,MAAM,MAAd,yFACA,wBAAQA,MAAM,UAAd,8FAGR,sBAAKxB,UAAU,iCAAf,UACiB,UAAZkJ,GACG,sBAAKlJ,UAAU,eAAf,UACI,uBAAOA,UAAU,qBAAqBR,KAAK,OAAO+B,YAAY,oDAAYC,MAAOyG,EAAUxG,SAAU,SAACX,GAAD,OAAOsI,EAAYtI,EAAEY,OAAOF,UACjI,0BAAUxB,UAAU,qBAAqBuB,YAAY,sEAAeC,MAAO6H,EAAW5H,SAAU,SAACX,GAAD,OAAOwI,EAAaxI,EAAEY,OAAOF,aAIrH,QAAZ0H,GACI,qBAAKlJ,UAAU,aAAf,SACI,0BAAUA,UAAU,mBAAmBuB,YAAY,sEAAeC,MAAO6H,EAAW5H,SAAU,SAACX,GAAD,OAAOwI,EAAaxI,EAAEY,OAAOF,YAKvH,YAAZ0H,GACI,gCACI,6HACA,gCACI,wBAAQvH,QAAS,WAAQ+H,GAAgBD,GAAcD,GAAe,IAAUxJ,UAAU,WAA1F,gCACA,wBAAQ2B,QAvH5C,WACI,IAAMwI,EAAgBhG,EAAaf,OAAS,IAC5CoG,GAAgBD,GAChBG,GAAe,GACfC,EAAcQ,IAmHiDnK,UAAU,aAAzC,mCAEJ,sBAAKA,UAAU,cAAf,UAEQyJ,GACI,sBAAKzJ,UAAU,qBAAf,UACI,uBAAOA,UAAU,6BAA6BR,KAAK,OAAO+B,YAAY,sEAAeC,MAAOmC,EAAYlC,SAAU,SAACX,GAAD,OAAO6I,EAAc7I,EAAEY,OAAOF,UAChJ,mBAAGK,MAAM,sBAAsBF,QAlI/E,WACIrC,EAASoE,EAAuBC,OAmIgBpB,EAAU,cAACX,EAAD,IAAcY,EAAQ,cAACR,EAAD,IAC5B,sBAAKhC,UAAU,4BAAf,UACI,uBAAOA,UAAU,6BAA6BR,KAAK,OAAO+B,YAAY,oDAAYC,MAAOmD,EAAclD,SAAU,SAACX,GAAD,OAAO8I,EAAgB9I,EAAEY,OAAOF,UACjJ,uBAAOxB,UAAU,6BAA6BR,KAAK,OAAO+B,YAAY,yFAAmBC,MAAO0G,GAAazG,SAAU,SAACX,GAAD,OAAO+I,GAAe/I,EAAEY,OAAOF,UACtJ,0BAAUxB,UAAU,6BAA6BuB,YAAY,0DAAaC,MAAOoD,GAAiBnD,SAAU,SAACX,GAAD,OAAOgJ,GAAmBhJ,EAAEY,OAAOF,UAC/I,0BAAUxB,UAAU,6BAA6BuB,YAAY,sEAAeC,MAAO6H,EAAW5H,SAAU,SAACX,GAAD,OAAOwI,EAAaxI,EAAEY,OAAOF,gBAQzJ+H,GACI,sBAAKvJ,UAAU,qBAAf,UACI,uBAAOA,UAAU,6BAA6BR,KAAK,OAAO+B,YAAY,sEAAeC,MAAOmC,IAC5F,uBAAO3D,UAAU,6BAA6BR,KAAK,OAAO+B,YAAY,oDAAYC,MAAOmD,EAAclD,SAAU,SAACX,GAAD,OAAO8I,EAAgB9I,EAAEY,OAAOF,UACjJ,uBAAOxB,UAAU,6BAA6BR,KAAK,OAAO+B,YAAY,yFAAmBC,MAAO0G,GAAazG,SAAU,SAACX,GAAD,OAAO+I,GAAe/I,EAAEY,OAAOF,UACtJ,0BAAUxB,UAAU,6BAA6BuB,YAAY,0DAAaC,MAAOoD,GAAiBnD,SAAU,SAACX,GAAD,OAAOgJ,GAAmBhJ,EAAEY,OAAOF,UAC/I,mBAAGK,MAAM,4BAA4BF,QAhIrF,WAEQgC,GACAgB,GACAuD,IACAtD,IAOAtF,EAASkE,EANQ,CACbG,aACAgB,eACAuD,eACAtD,sBAGAjB,EAAWP,OAAS,IACpBwG,EAAgB,IAChBC,GAAe,IACfC,GAAmB,MAGvBxI,MAAM,wMA8GkC,0BAAUtB,UAAU,6BAA6BuB,YAAY,sEAAeC,MAAO6H,EAAW5H,SAAU,SAACX,GAAD,OAAOwI,EAAaxI,EAAEY,OAAOF,sBASrK,sBAAKxB,UAAU,wBAAf,UACI,gCACI,yHACA,8BAAI+J,GAAJ,uCAEJ,wBAAQ/J,UAAU,wBAAwB2B,QAxH9D,WACI,GAAGgH,EAAYvF,OAAS,GAAK2F,EAAW,CACpC,IAAMpB,EAAQ,CACVtE,KAAM0F,EAAUlE,IAChBpB,SAAU,CACN2G,WAAYzG,EACZgB,aAAcA,EACduD,YAAaA,GACbtD,gBAAiBA,IAErBwD,WAAY2B,GACZ7C,YAAayB,EACbX,YAAakB,EACbjB,SAAUA,EACVI,kBAAmBgB,GAEvBhE,QAAQC,IAAIqC,GACZrI,EJhGqB,SAACqI,GAAD,8CAAW,WAAMrI,GAAN,SAAAC,EAAA,6DACtCD,EAAS,CAACE,KAAM,0BADsB,kBAGTC,IAAMwB,KAAK,0BAA0B,CAAC0G,UAH7B,cAIhCrI,EAAS,CAACE,KAAM,0BAChB0B,OAAOC,SAASC,KAAO,IACvBgG,aAAaiD,WAAW,UANQ,kDAQhC/K,EAAS,CAACE,KAAM,uBAAwBI,QAAS,KAAME,UARvB,0DAAX,sDIgGZwK,CAAkB3C,SAClBoB,EAEFJ,EAAYvF,QAAU,GAC7B9B,MAAM,oJAFNA,MAAM,kGAqGM,4CCrMT,SAASiJ,IAClB,IAAMxG,EAAsB3B,aAAY,SAAAC,GAAK,OAAIA,EAAM2B,0BACNG,GAAiBJ,EAA1DE,iBAA0DF,EAAxCG,sBAAwCH,EAAjBI,cAE3C7E,EAAWsB,cAEjBsB,qBAAU,WACJ5C,EAASsE,OACZ,IAEH,MAAoCzD,mBAAS,IAA7C,mBAAOwD,EAAP,KAAmBgG,EAAnB,KACA,EAAwCxJ,mBAAS,IAAjD,mBAAOwE,EAAP,KAAqBiF,EAArB,KACA,EAAsCzJ,mBAAS,IAA/C,mBAAO+H,EAAP,KAAoB2B,EAApB,KACA,EAA8C1J,mBAAS,IAAvD,mBAAOyE,EAAP,KAAwBkF,EAAxB,KAiCA,OA/BA5H,qBAAU,WACAiC,GACEwF,EAAcxF,EAAaf,OAAS,OAE7C,CAACe,EAAc7E,IA4BZ,sBAAKU,UAAU,iBAAf,UACM,oBAAIA,UAAU,eAAd,wFACA,sBAAKA,UAAU,qBAAf,UACM,wBAAOA,UAAU,aAAjB,iFAEM,uBAAOA,UAAU,sBAAsBR,KAAK,OAAO+B,YAAY,sEAAeC,MAAOmC,OAE3F,wBAAO3D,UAAU,aAAjB,+DAEM,uBAAOA,UAAU,sBAAsBR,KAAK,OAAO+B,YAAY,sEAAeC,MAAOmD,EAAclD,SAAU,SAACX,GAAD,OAAO8I,EAAgB9I,EAAEY,OAAOF,aAEnJ,wBAAOxB,UAAU,aAAjB,qEAEM,uBAAOA,UAAU,sBAAsBR,KAAK,OAAO+B,YAAY,sEAAeC,MAAO0G,EAAazG,SAAU,SAACX,GAAD,OAAO+I,EAAe/I,EAAEY,OAAOF,aAEjJ,wBAAOxB,UAAU,aAAjB,qEAEM,0BAAUA,UAAU,sBAAsBR,KAAK,OAAO+B,YAAY,0DAAaC,MAAOoD,EAAiBnD,SAAU,SAACX,GAAD,OAAOgJ,EAAmBhJ,EAAEY,OAAOF,aAE1J,8BACM,wBAAQxB,UAAU,WAAW2B,QA9CrD,WAEYgC,GACAgB,GACAuD,GACAtD,GAOAtF,EAASkE,EANQ,CACXG,aACAgB,eACAuD,cACAtD,qBAGFjB,EAAWP,OAAS,IAClBwG,EAAgB,IAChBC,EAAe,IACfC,EAAmB,KAEzBxI,MAAM,4FACNJ,OAAOC,SAASC,KAAO,mBAEvBE,MAAM,sMAyBM,oDCnEf,SAASkJ,EAAT,GAAkC,IAAVzF,EAAS,EAATA,MAC3BhB,EAAsB3B,aAAY,SAAAC,GAAK,OAAIA,EAAM2B,0BACNG,GAAiBJ,EAA1DE,iBAA0DF,EAAxCG,sBAAwCH,EAAjBI,cAE3C7E,EAAWsB,cAEjBsB,qBAAU,WACJ5C,EAASsE,OACZ,IAEH,MAAoCzD,mBAAS,IAA7C,mBAAOwD,EAAP,KAAmBgG,EAAnB,KACA,EAAwCxJ,mBAAS,IAAjD,mBAAOwE,EAAP,KAAqBiF,EAArB,KACA,EAAsCzJ,mBAAS,IAA/C,mBAAO+H,EAAP,KAAoB2B,EAApB,KACA,EAA8C1J,mBAAS,IAAvD,mBAAOyE,EAAP,KAAwBkF,EAAxB,KAmCA,OAjCA5H,qBAAU,WACJ,GAAIiC,EAAc,CACZ,IAAMV,EAAWU,EAAasB,MAAK,SAAAhC,GAAQ,OAAIA,EAASoB,MAAQE,EAAMI,OAAOC,MAC7EuE,EAAclG,EAASE,YACvBiG,EAAgBnG,EAASkB,cACzBkF,EAAepG,EAASyE,aACxB4B,EAAmBrG,EAASmB,oBAErC,CAACT,EAAc7E,IA0BZ,sBAAKU,UAAU,iBAAf,UACM,oBAAIA,UAAU,eAAd,iFACA,sBAAKA,UAAU,qBAAf,UACM,wBAAOA,UAAU,aAAjB,iFAEM,uBAAOA,UAAU,sBAAsBR,KAAK,OAAO+B,YAAY,sEAAeC,MAAOmC,OAE3F,wBAAO3D,UAAU,aAAjB,+DAEM,uBAAOA,UAAU,sBAAsBR,KAAK,OAAO+B,YAAY,sEAAeC,MAAOmD,EAAclD,SAAU,SAACX,GAAD,OAAO8I,EAAgB9I,EAAEY,OAAOF,aAEnJ,wBAAOxB,UAAU,aAAjB,qEAEM,uBAAOA,UAAU,sBAAsBR,KAAK,OAAO+B,YAAY,sEAAeC,MAAO0G,EAAazG,SAAU,SAACX,GAAD,OAAO+I,EAAe/I,EAAEY,OAAOF,aAEjJ,wBAAOxB,UAAU,aAAjB,qEAEM,0BAAUA,UAAU,sBAAsBR,KAAK,OAAO+B,YAAY,0DAAaC,MAAOoD,EAAiBnD,SAAU,SAACX,GAAD,OAAOgJ,EAAmBhJ,EAAEY,OAAOF,aAE1J,gCACM,wBAAQxB,UAAU,WAAW2B,QAxCrD,WACM,GACMgC,GACAgB,GACAuD,GACAtD,EAAiB,CACjB,IAAMnB,EAAW,CACXoB,IAAKE,EAAMI,OAAOC,GAClBzB,aACAgB,eACAuD,cACAtD,mBAENtF,EZHgB,SAACmE,GAAD,8CAAc,WAAMnE,GAAN,SAAAC,EAAA,6DAC1CD,EAAS,CAAEE,KAAM,0BADyB,kBAGbC,IAAMwB,KAAK,8BAA+B,CAACwC,aAH9B,cAIpCnE,EAAS,CAAEE,KAAM,0BACjB0B,OAAOC,SAASC,KAAO,iBALa,gDAOpC9B,EAAS,CAAEE,KAAM,uBAAwBI,QAAS,KAAME,UAPpB,yDAAd,sDYGP2K,CAAmBhH,SAE5BnC,MAAM,sMAyBM,4CACA,wBAAQtB,UAAU,aAAa2B,QA7CvD,WZG8B,IAACyD,EYFzB9F,GZEyB8F,EYFKL,EAAMI,OAAOC,GZEnB,uCAAQ,WAAM9F,GAAN,SAAAC,EAAA,6DACtCD,EAAS,CAAEE,KAAM,4BADqB,kBAGTC,IAAMwB,KAAK,gCAAiC,CAAEmE,OAHrC,cAIhC9F,EAAS,CAAEE,KAAM,4BACjB0B,OAAOC,SAASC,KAAO,iBALS,gDAOhC9B,EAAS,CAAEE,KAAM,yBAA0BI,QAAS,KAAME,UAP1B,yDAAR,yDY0CN,yCClEf,SAAS4K,IAClB,IAAMpL,EAAWsB,cACjB,EAA4BT,mBAAS,IAArC,mBAAe2D,GAAf,WAEA5B,qBAAU,WACJ5C,EAASsE,OACZ,IAEH,IAAMG,EAAsB3B,aAAY,SAAAC,GAAK,OAAIA,EAAM2B,0BAC/CC,EAA0DF,EAA1DE,iBAAkBC,EAAwCH,EAAxCG,sBAAuBC,EAAiBJ,EAAjBI,aAEjD,OACM,sBAAKnE,UAAU,iBAAf,UACM,sBAAKA,UAAU,wBAAf,UACM,wBAAOA,UAAU,qBAAjB,2EAEM,uBAAOA,UAAU,kBAAkBR,KAAK,OAAO+B,YAAY,iCAAQE,SAAU,SAACX,GAAD,OAAOgD,EAAUhD,EAAEY,OAAOF,aAE7G,yBAAQxB,UAAU,kBAAkB2B,QAAS,kBAAMT,OAAOC,SAASC,KAAO,yBAA1E,UAAmG,mBAAGS,MAAM,mCAA5G,oFAEN,sBAAK7B,UAAU,aAAf,UACOiE,GAAoB,cAACrC,EAAD,IACpBsC,GAAyB,cAAClC,EAAD,IACzBmC,GAAgBA,EAAaf,OAAS,GACjC,eAACgB,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAxC,UACM,gCACM,+BACM,mCACA,mFACA,mFACA,yFACA,0GAGZ,gCAEYL,EAAaM,KAAI,SAAChB,EAAUiB,GAAX,OACX,+BACM,6BAAKA,EAAI,IACT,6BAAKjB,EAASE,aACd,6BAAKF,EAASkB,eACd,6BAAKlB,EAASmB,kBACd,6BACM,cAAC,IAAD,CAAM3E,GAAE,8BAAyBwD,EAASoB,KAA1C,SACM,mBAAGhD,MAAM,2C,oBChDlE,SAAS8I,EAAT,GAAgC,IAAZ5J,EAAW,EAAXA,KAAM2D,EAAK,EAALA,EACpC,EAAsBvE,mBAAS,KAA/B,mBAAO0G,EAAP,KAAY+D,EAAZ,KACMtL,EAAWsB,cAOjB,OACK,+BACK,6BAAK8D,EAAI,IACT,6BAAK3D,EAAKX,OACV,6BACuB,UAAlBW,EAAKT,SAAuB,6EACL,aAAlBS,EAAKT,SAA0B,qBACR,gBAAlBS,EAAKT,SAA6B,iCACX,UAAlBS,EAAKT,SAAuB,6CAAY,0CAE5D,6BAAKS,EAAKP,QACV,6BACK,wBAAQgB,MAAOqF,EAAKpF,SAAU,SAACX,GAAD,OAAO8J,EAAO9J,EAAEY,OAAOF,QAArD,SAEU,YAAIqJ,MAAM,IAAIC,QAAQrG,KAAI,SAAC0D,EAAMzD,GAAP,OAAa,iCAAiBA,EAAI,GAARA,UAInE,6BAAK3D,EAAKP,MAAQqG,IAClB,6BACK,wBAAQ7G,UAAU,WAAW2B,QAzB5C,WACKrC,EAASsH,EAAkB7F,EAAM8F,IACjC+D,EAAO,MAuBG,uDC7BL,SAASG,EAAT,GAA6C,IAAxB7F,EAAuB,EAAvBA,MAAO8F,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,KAC7C,OACM,8BACM,eAAC7G,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAxC,UACM,gCACM,+BACM,mCACA,oDACA,mFACA,0DACA,gEACA,yFACA,2EAGZ,gCAEYU,EAAMgG,QAAO,SAAAnK,GAAI,OACXiK,GAAmB,QAATC,EACJlK,EAAKX,KAAK+K,cAAcC,SAASJ,EAAOG,eAC/B,QAATF,EACMlK,EAAKX,KAAK+K,cAAcC,SAASJ,EAAOG,gBAAkBpK,EAAKT,WAAa2K,EAC1ElK,KAAM0D,KAAI,SAAC1D,EAAM2D,GAAP,OACN,cAACiG,EAAD,CAAU5J,KAAMA,EAAM2D,EAAGA,cCjBtE,SAAS2G,EAAT,GAA+B,IAAD,EAATtG,EAAS,EAATA,MAExBzF,EAAWsB,cACX0K,EAAUvG,EAAMI,OAAOC,GAE7B,EAA8BjF,mBAAS,SAAvC,mBAAO+I,EAAP,KAAgBC,EAAhB,KACA,EAAgChJ,mBAAS,IAAzC,mBAAO8H,EAAP,KAAiBmB,EAAjB,KACA,EAAkCjJ,mBAAS,IAA3C,mBAAOkJ,EAAP,KAAkBC,EAAlB,KACA,EAAsCnJ,oBAAS,GAA/C,mBAAOoJ,EAAP,KAAoBC,EAApB,KACA,EAAsCrJ,oBAAS,GAA/C,mBAAOsJ,EAAP,KAAoBC,EAApB,KACA,EAAoCvJ,mBAAS,IAA7C,mBAAOwD,EAAP,KAAmBgG,EAAnB,KACA,EAAwCxJ,mBAAS,IAAjD,mBAAOwE,EAAP,KAAqBiF,EAArB,KACA,EAAsCzJ,mBAAS,IAA/C,mBAAO+H,EAAP,KAAoB2B,GAApB,KACA,GAA8C1J,mBAAS,IAAvD,qBAAOyE,GAAP,MAAwBkF,GAAxB,MACA,GAAsC3J,mBAAS,IAA/C,qBAAOoL,GAAP,MAAoBC,GAApB,MACA,GAA4BrL,mBAAS,IAArC,qBAAO6K,GAAP,MAAelH,GAAf,MACA,GAAwB3D,mBAAS,OAAjC,qBAAO8K,GAAP,MAAaQ,GAAb,MAIQvG,GADc9C,aAAY,SAAAC,GAAK,OAAIA,EAAM4C,sBACzCC,MACFwG,GAAkBtJ,aAAY,SAAAC,GAAK,OAAIA,EAAMsJ,oBACjBC,IAAeF,GAAzCG,aAAyCH,GAA3BI,WAA2BJ,GAAfE,YAC5BjD,GAAcvG,aAAY,SAAAC,GAAK,OAAIA,EAAM8E,mBAAmBD,eAC5D0B,GAAoBxG,aAAY,SAAAC,GAAK,OAAIA,EAAMwG,2BAC7CtG,GAAqCqG,GAArCrG,QAASC,GAA4BoG,GAA5BpG,MAAOsG,GAAqBF,GAArBE,iBAClB/E,GAAsB3B,aAAY,SAAAC,GAAK,OAAIA,EAAM2B,0BACNG,IAAiBJ,GAA1DE,iBAA0DF,GAAxCG,sBAAwCH,GAAjBI,cAC3C4E,GAAY3G,aAAY,SAAAC,GAAK,OAAIA,EAAM2G,iBAAiBC,aAExDc,GAAmBpB,GAAYqB,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,EAAEjD,MAAK,GA+GjE,OAjGA/E,qBAAU,WACA4G,KACEc,EAAgBd,GAAiBnE,cACjCkF,GAAef,GAAiBZ,aAChC4B,GAAmBhB,GAAiBlE,oBAE7C,CAACkE,KAEJ5G,qBAAU,WVhBe,IAACkD,EUiBpB9F,EAASmI,KACTnI,GVlBoB8F,EUkBKkG,EVlBN,uCAAQ,WAAMhM,GAAN,eAAAC,EAAA,6DACjCD,EAAS,CAACE,KAAM,uBADiB,kBAGJC,IAAMwB,KAAK,wBAAyB,CAACmE,OAHjC,OAGrBzF,EAHqB,OAI3BL,EAAS,CAACE,KAAM,qBAAsBI,QAASD,EAASE,OAJ7B,gDAM3BP,EAAS,CAACE,KAAM,oBAAqBI,QAAS,KAAME,UANzB,yDAAR,wDUmBnBR,EAASsE,KACTtE,EAASD,OACZ,IAEH6C,qBAAU,WACJ,GAAI0J,GAAY,CACeA,GAAW1E,YAAYzC,KAAI,SAAA0D,GAC9C,IAAMpH,EAAO,CACP8D,IAAKsD,EAAKtD,IACVzE,KAAM+H,EAAK/H,KACXI,MAAO2H,EAAK3H,MACZqG,IAAKsB,EAAKtB,IACVvG,SAAU6H,EAAK7H,SACfI,YAAayH,EAAKzH,YAClBuG,IAAKkB,EAAK3H,MAAQ2H,EAAKtB,KAE7BvH,EAASsH,EAAkB7F,EAAMoH,EAAKtB,SAG5C2E,GAAeI,GAAW1E,aAC1BiC,EAAWyC,GAAW5D,aACtBoB,EAAYwC,GAAW3D,UACvBqB,EAAasC,GAAWvD,mBACxBsB,EAAciC,GAAWnI,SAAS,GAAG2G,YACrCR,EAAgBgC,GAAWnI,SAAS,GAAGkB,cACvCkF,GAAe+B,GAAWnI,SAAS,GAAGyE,aACtC4B,GAAmB8B,GAAWnI,SAAS,GAAGmB,iBAEtCgH,GAAWnI,SAAS,GAAG2G,YACrBV,GAAe,MAG9B,CAACkC,KAEJ1J,qBAAU,WACA0J,KACExE,aAAaC,QAAQ,SAAUC,KAAKC,UAAUoB,KAC9C6C,GAAe7C,OAExB,CAACA,KAgDE,sBAAK3I,UAAU,iBAAf,UACM,oBAAIA,UAAU,eAAd,iFACA,sBAAKA,UAAU,uBAAf,UACM,sBAAKA,UAAU,sBAAf,UACM,sBAAKA,UAAU,sBAAf,UACOuL,IAAeA,GAAY9G,KAAI,SAAA0D,GAAI,OAC9B,sBAAKnI,UAAU,qBAAf,UACM,sBAAKA,UAAU,oBAAf,UACM,6BAAKmI,EAAK/H,OACV,wBAAQJ,UAAU,qBAAqB2B,QAAS,kBAAMrC,EAASkI,EAAuBW,KAAtF,kBAEN,sBAAKnI,UAAU,oBAAf,UACM,8BAAImI,EAAK3H,MAAT,MAAmB2H,EAAKtB,IAAxB,MAAgCsB,EAAKlB,OACrC,gCACM,wBAAQjH,UAAU,uBAAuB2B,QAAS,kBAAMrC,EAASsH,EAAkBuB,EAAMA,EAAKtB,IAAM,KAApG,eACCsB,EAAKtB,IACN,wBAAQ7G,UAAU,wBAAwB2B,QAAS,kBAAMrC,EAASsH,EAAkBuB,EAAMA,EAAKtB,IAAM,KAArG,2BAKvB0E,GAAYnI,QAAU,GAAK,mBAAGpD,UAAU,eAAb,sFAElC,gCACM,qBAAKA,UAAU,4BAAf,SACM,yBAAQA,UAAU,+BAA+BwB,MAAO0H,EAASzH,SAAU,SAACX,GAAD,OAAOqI,EAAWrI,EAAEY,OAAOF,QAAtG,UACM,wBAAQA,MAAM,QAAd,+DACA,wBAAQA,MAAM,MAAd,yFACA,wBAAQA,MAAM,UAAd,8FAGZ,sBAAKxB,UAAU,iCAAf,UACmB,UAAZkJ,GACK,sBAAKlJ,UAAU,eAAf,UACM,uBAAOA,UAAU,qBAAqBR,KAAK,OAAO+B,YAAY,oDAAYC,MAAOyG,EAAUxG,SAAU,SAACX,GAAD,OAAOsI,EAAYtI,EAAEY,OAAOF,UACjI,0BAAUxB,UAAU,qBAAqBuB,YAAY,sEAAeC,MAAO6H,EAAW5H,SAAU,SAACX,GAAD,OAAOwI,EAAaxI,EAAEY,OAAOF,aAIvH,QAAZ0H,GACM,qBAAKlJ,UAAU,aAAf,SACM,0BAAUA,UAAU,mBAAmBuB,YAAY,sEAAeC,MAAO6H,EAAW5H,SAAU,SAACX,GAAD,OAAOwI,EAAaxI,EAAEY,OAAOF,YAK3H,YAAZ0H,GACM,gCACM,6HACA,gCACM,wBAAQvH,QAAS,WAAQ+H,GAAgBD,GAAcD,GAAe,IAAUxJ,UAAU,WAA1F,gCACA,wBAAQ2B,QA7JpE,WACM,IAAMwI,EAAgBhG,GAAaf,OAAS,IAC5CoG,GAAgBD,GAChBG,GAAe,GACfC,EAAcQ,IAyJuEnK,UAAU,aAAzC,mCAEN,sBAAKA,UAAU,cAAf,UAEYyJ,GACM,sBAAKzJ,UAAU,qBAAf,UACM,uBAAOA,UAAU,6BAA6BR,KAAK,OAAO+B,YAAY,sEAAeC,MAAOmC,EAAYlC,SAAU,SAACX,GAAD,OAAO6I,EAAc7I,EAAEY,OAAOF,UAChJ,mBAAGK,MAAM,sBAAsBF,QAxK7G,WACMrC,EAASoE,EAAuBC,OAyK8CpB,GAAU,cAACX,EAAD,IAAcY,GAAQ,cAACR,EAAD,IAC1B,sBAAKhC,UAAU,4BAAf,UACM,uBAAOA,UAAU,6BAA6BR,KAAK,OAAO+B,YAAY,oDAAYC,MAAOmD,EAAclD,SAAU,SAACX,GAAD,OAAO8I,EAAgB9I,EAAEY,OAAOF,UACjJ,uBAAOxB,UAAU,6BAA6BR,KAAK,OAAO+B,YAAY,yFAAmBC,MAAO0G,EAAazG,SAAU,SAACX,GAAD,OAAO+I,GAAe/I,EAAEY,OAAOF,UACtJ,0BAAUxB,UAAU,6BAA6BuB,YAAY,0DAAaC,MAAOoD,GAAiBnD,SAAU,SAACX,GAAD,OAAOgJ,GAAmBhJ,EAAEY,OAAOF,UAC/I,0BAAUxB,UAAU,6BAA6BuB,YAAY,sEAAeC,MAAO6H,EAAW5H,SAAU,SAACX,GAAD,OAAOwI,EAAaxI,EAAEY,OAAOF,gBAQnK+H,GACM,sBAAKvJ,UAAU,qBAAf,UACM,uBAAOA,UAAU,6BAA6BR,KAAK,OAAO+B,YAAY,sEAAeC,MAAOmC,IAC5F,uBAAO3D,UAAU,6BAA6BR,KAAK,OAAO+B,YAAY,oDAAYC,MAAOmD,EAAclD,SAAU,SAACX,GAAD,OAAO8I,EAAgB9I,EAAEY,OAAOF,UACjJ,uBAAOxB,UAAU,6BAA6BR,KAAK,OAAO+B,YAAY,yFAAmBC,MAAO0G,EAAazG,SAAU,SAACX,GAAD,OAAO+I,GAAe/I,EAAEY,OAAOF,UACtJ,0BAAUxB,UAAU,6BAA6BuB,YAAY,0DAAaC,MAAOoD,GAAiBnD,SAAU,SAACX,GAAD,OAAOgJ,GAAmBhJ,EAAEY,OAAOF,UAC/I,mBAAGK,MAAM,4BAA4BF,QA7HnH,WAEYgC,GACAgB,GACAuD,GACAtD,IAOAtF,EAASkE,EANQ,CACXG,aACAgB,eACAuD,cACAtD,sBAGFjB,EAAWP,OAAS,IAClBwG,EAAgB,IAChBC,GAAe,IACfC,GAAmB,MAGzBxI,MAAM,wMA2G4D,0BAAUtB,UAAU,6BAA6BuB,YAAY,sEAAeC,MAAO6H,EAAW5H,SAAU,SAACX,GAAD,OAAOwI,EAAaxI,EAAEY,OAAOF,sBASrL,sBAAKxB,UAAU,wBAAf,UACM,gCACM,yHACA,8BAAI+J,GAAJ,uCAEN,wBAAQ/J,UAAU,wBAAwB2B,QArH9E,WACM,GAAIgH,GAAYvF,OAAS,GAAK2F,GAAW,CACnC,IAAMpB,EAAQ,CACR9C,IAAKyG,EACLjI,KAAM0F,GAAUlE,IAChBpB,SAAU,CACJ2G,WAAYzG,EACZgB,aAAcA,EACduD,YAAaA,EACbtD,gBAAiBA,IAEvBwD,WAAY2B,GACZ7C,YAAayB,GACbX,YAAakB,EACbjB,SAAUA,EACVI,kBAAmBgB,GAEzB/J,EAASmI,KACTnI,EV3Ha,SAACqI,GAAD,8CAAW,WAAMrI,GAAN,SAAAC,EAAA,6DACpCD,EAAS,CAACE,KAAM,uBADoB,kBAGPC,IAAMwB,KAAK,wBAAyB,CAAC0G,UAH9B,cAI9BrI,EAAS,CAACE,KAAM,uBAChB0B,OAAOC,SAASC,KAAO,gBALO,gDAO9B9B,EAAS,CAACE,KAAM,oBAAqBI,QAAS,KAAME,UAPtB,yDAAX,sDU2HJiM,CAAgBpE,MAmGD,yCAIlB,sBAAK3H,UAAU,mBAAf,UACM,qBAAKA,UAAU,qCAAf,SACM,sBAAKA,UAAU,eAAf,UACM,0BAAOR,KAAK,OAAOQ,UAAU,eAAeuB,YAAY,kCAAxD,0BAA0E,iBAA1E,sBAAiGyJ,IAAjG,0BAAmH,SAAClK,GAAD,OAAOgD,GAAUhD,EAAEY,OAAOF,UAA7I,IACA,yBAAQxB,UAAU,cAAcwB,MAAOyJ,GAAMxJ,SAAU,SAACX,GAAD,OAAO2K,GAAQ3K,EAAEY,OAAOF,QAA/E,UACM,wBAAQA,MAAM,MAAd,gCACA,wBAAQA,MAAM,WAAd,gCACA,wBAAQA,MAAM,cAAd,4CACA,wBAAQA,MAAM,QAAd,wDACA,wBAAQA,MAAM,YAAd,2DAKlB,qBAAKxB,UAAU,SAAf,SACOkF,IAAU,cAAC6F,EAAD,CAAW7F,MAAOA,GAAO8F,OAAQA,GAAQC,KAAMA,gBClQ/E,SAASe,IAAY,IAAD,EACzB1M,EAAWsB,cACXwF,EAAgBhE,aAAY,SAAAC,GAAK,OAAIA,EAAM4C,sBACzC1C,EAA0B6D,EAA1B7D,QAASC,EAAiB4D,EAAjB5D,MAAO0C,EAAUkB,EAAVlB,MAExB,EAA4B/E,mBAAS,IAArC,mBAAO6K,EAAP,KAAelH,EAAf,KACA,EAAwB3D,mBAAS,OAAjC,mBAAO8K,EAAP,KAAaQ,EAAb,KAMA,OAJAvJ,qBAAU,WACN5C,EAASD,OACV,IAGC,sBAAKW,UAAU,iBAAf,UAEI,qBAAKA,UAAU,mBAAf,SACI,sBAAKA,UAAU,eAAf,UACI,0BAAOR,KAAK,OAAOQ,UAAU,eAAeuB,YAAY,kCAAxD,0BAA0E,iBAA1E,sBAAiGyJ,GAAjG,0BAAmH,SAAClK,GAAD,OAAOgD,EAAUhD,EAAEY,OAAOF,UAA7I,IACA,yBAAQxB,UAAU,cAAcwB,MAAOyJ,EAAMxJ,SAAU,SAACX,GAAD,OAAO2K,EAAQ3K,EAAEY,OAAOF,QAA/E,UACI,wBAAQA,MAAM,MAAd,gCACA,wBAAQA,MAAM,WAAd,gCACA,wBAAQA,MAAM,cAAd,4CACA,wBAAQA,MAAM,QAAd,wDACA,wBAAQA,MAAM,YAAd,2DAIZ,oBAAIxB,UAAU,eAAd,iFACA,sBAAKA,UAAU,uBAAf,UACKuC,GAAW,cAACX,EAAD,IACXY,GAAS,cAACR,EAAD,IACTkD,GAAU,cAAC6F,EAAD,CAAW7F,MAAOA,EAAO8F,OAAQA,EAAQC,KAAMA,UCjC3D,SAASgB,IACpB,MAAgC9L,mBAAS,IAAzC,mBAAOuC,EAAP,KAAiBC,EAAjB,KACA,EAAgCxC,mBAAS,IAAzC,mBAAOyC,EAAP,KAAiBC,EAAjB,KACMvD,EAAWsB,cACXsL,EAAiB9J,aAAY,SAAAC,GAAK,OAAIA,EAAM2G,oBAC1CzG,EAAmB2J,EAAnB3J,QAASC,EAAU0J,EAAV1J,MAcjB,OACI,sBAAKxC,UAAU,iBAAf,UACI,oBAAIA,UAAU,eAAd,+DACA,sBAAKA,UAAU,oBAAf,UACI,wBAAOA,UAAU,mBAAjB,qEAEI,uBAAOR,KAAK,OAAO+B,YAAY,0DAAavB,UAAU,eAAeyB,SAAU,SAACX,GAAD,OAAO6B,EAAY7B,EAAEY,OAAOF,aAE/G,wBAAOxB,UAAU,mBAAjB,yDAEI,uBAAOR,KAAK,WAAW+B,YAAY,8CAAWvB,UAAU,eAAeyB,SAAU,SAACX,GAAD,OAAO+B,EAAY/B,EAAEY,OAAOF,aAEjH,wBAAQG,QAxBpB,WACQe,GAAYE,EAKZtD,ErBqCmB,SAAC+D,GAAD,8CAAU,WAAM/D,GAAN,eAAAC,EAAA,6DACnCD,EAAS,CAAEE,KAAM,uBADkB,kBAGNC,IAAMwB,KAAK,mBAAoBoC,GAHzB,OAGvB1D,EAHuB,OAI7BL,EAAS,CAAEE,KAAM,qBAAsBI,QAASD,EAASE,OACzDwF,QAAQC,IAAI3F,EAASE,MACrBuH,aAAaC,QAAQ,cAAeC,KAAKC,UAAU5H,EAASE,OAC5DqB,OAAOC,SAASC,KAAO,IAPM,kDAS7B9B,EAAS,CAAEE,KAAM,oBAAqBI,QAAS,KAAME,UACrDuF,QAAQC,IAAI,KAAMxF,SAVW,0DAAV,sDqBrCVqM,CAJI,CACTzJ,WACAE,cAIJtB,MAAM,iKAgB6BtB,UAAU,iBAAzC,sCACCuC,GAAW,cAACX,EAAD,IACXY,GAAS,mBAAGxC,UAAU,eAAb,gLCtCX,UAA0B,kC,QCM1B,SAASoM,IACpB,IACQlF,EADmB9E,aAAY,SAAAC,GAAK,OAAIA,EAAM8E,sBAC9CD,YAGA+B,EADiB7G,aAAY,SAAAC,GAAK,OAAIA,EAAM2G,oBAC5CC,UAQR,OACI,sBAAKjJ,UAAU,mBAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,eAAC,IAAD,CAAMA,UAAU,yBAAyBC,GAAG,UAA5C,UAAsD,mBAAGD,UAAU,uBAAb,SAAqCkH,EAAY9D,SAAW,mBAAGpD,UAAU,mBAE3HiJ,EAEQ,eAACoD,EAAA,EAAD,CAAUrM,UAAU,gBAApB,UACI,cAACqM,EAAA,EAASC,OAAV,CAAiBC,QAAQ,QAAQC,GAAG,QAAQC,OAAO,KAAKC,KAAK,KAAKtH,GAAG,iBAArE,SACK6D,EAAUvG,WAGf,eAAC2J,EAAA,EAASM,KAAV,CAAe3M,UAAU,eAAzB,UACI,4BACI,cAAC,IAAD,CAAMA,UAAU,uBAAuBC,GAAG,aAA1C,uEAEJ,4BACI,cAAC,IAAD,CAAMD,UAAU,uBAAuBC,GAAG,gBAA1C,yFAEJ,4BACI,cAAC,IAAD,CAAMD,UAAU,uBAAuBC,GAAG,iBAA1C,4IAEkB,UAArBgJ,EAAUjG,QACP,4BACI,cAAC,IAAD,CAAMhD,UAAU,uBAAuBC,GAAG,SAA1C,6EAER,wBAAQD,UAAU,sBAAsB2B,QAhCxE,WACIyF,aAAaiD,WAAW,eACxBnJ,OAAOC,SAASuF,SAChBrB,QAAQC,IAAI,WA6BgB,4CAIZ,cAAC,IAAD,CAAMtF,UAAU,gCAAgCC,GAAG,SAAnD,yCAGZ,8BACI,cAAC,IAAD,CAAMA,GAAG,IAAT,SACI,qBAAK2M,IAAKC,EAAMC,IAAI,iBAAiB9M,UAAU,0BC7CpD,SAAS+M,IAClB,IAAMhE,EAAY3G,aAAY,SAAAC,GAAK,OAAIA,EAAM2G,iBAAiBC,aAExD+D,EAA2B5K,aAAY,SAAAC,GAAK,OAAIA,EAAM4K,8BACpD1K,EAAkCyK,EAAlCzK,QAASC,EAAyBwK,EAAzBxK,MAAO0K,EAAkBF,EAAlBE,cAElB5N,EAAWsB,cAqBjB,OAnBAsB,qBAAU,WACJ5C,EfsC6B,uCAAM,WAAMA,GAAN,eAAAC,EAAA,6DACzCD,EAAS,CAACE,KAAM,4BADyB,kBAGZC,IAAMC,IAAI,kCAHE,OAG7BC,EAH6B,OAInCL,EAAS,CAACE,KAAM,0BAA2BI,QAASD,EAASE,OAJ1B,gDAMnCP,EAAS,CAACE,KAAM,yBAA0BI,QAAS,KAAME,UANtB,yDAAN,uDerC7BR,EAASmI,OACb,IAEGsB,IACC7H,OAAOC,SAASC,KAAO,SACvBE,MAAM,kGAaN,sBAAKtB,UAAU,iBAAf,UACM,oBAAIA,UAAU,eAAd,uFACA,sBAAKA,UAAU,uBAAf,UACOuC,GAAW,cAACX,EAAD,IACXY,GAAS,cAACR,EAAD,IACTkL,GAEW,eAAC9I,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAxC,UACM,gCACM,+BACM,mCACA,mFACA,mFACA,2GACA,mFACA,uEACA,2GACA,oGAGZ,gCAEY0I,EAAczI,KAAI,SAACkD,EAAOjD,GAAR,OACZ,+BACM,6BAAKA,EAAI,IACT,6BAC4B,UAAtBiD,EAAMK,YAA0B,oDACJ,QAAtBL,EAAMK,YAAwB,8EAAoB,gFAE9D,6BAAKL,EAAMM,SAAWN,EAAMM,SAAW,MACvC,6BACM,gCACM,kCAAKN,EAAMlE,SAAS,GAAGkB,gBACvB,kCAAKgD,EAAMlE,SAAS,GAAGyE,eACvB,kCAAKP,EAAMlE,SAAS,GAAGmB,wBAGnC,6BAEY+C,EAAMT,YAAYzC,KAAI,SAAC0D,EAAMzD,GAAP,OAChB,gCACM,6BAAKyD,EAAK/H,OACV,sCAAO+H,EAAKtB,IAAZ,cAAqBsB,EAAK3H,MAA1B,cAAqC2H,EAAKlB,OAC1C,+BAKxB,6BAAKU,EAAMS,aACX,6BAAKT,EAAMU,oBACX,+BACOV,EAAMW,WAAa,wBAAQtI,UAAU,WAAlB,mFAAwD,wBAAQ2B,QAAS,kBA7D/J,SAAmByD,GACb,IAAMuC,EAAQ,CACR9C,IAAKO,EACLkD,YAAY,GAElBjD,QAAQC,IAAIqC,GACZrI,EAASoI,EAAgBC,IAuDsIY,CAAUZ,EAAM9C,MAAM7E,UAAU,iBAAvD,kGAC1E2H,EAAMW,YAAc,cAAC,IAAD,CAAMtI,UAAU,MAAMC,GAAE,0BAAqB0H,EAAM9C,KAAnD,SAA0D,mBAAGhD,MAAM,oBAAoBF,QAAS,kBAAMrC,EAASmI,8BCvF9L,SAAS0F,IACpB,OACI,6CCDO,SAASC,KAClB,OACM,qBAAKpN,UAAU,iBAAf,SACM,sBAAKA,UAAU,gBAAf,UACM,oBAAIA,UAAU,YAAd,kBACA,qBAAKA,UAAU,UAAU4M,IAAI,2EAA2EE,IAAI,mBAC5G,mBAAG9M,UAAU,QAAb,4BACA,cAAC,IAAD,CAAMA,UAAU,mBAAmBC,GAAG,IAAtC,0BCRT,SAASoN,KACpB,OACI,gCACI,uBAAO7N,KAAK,OAAO+B,YAAY,4DAC/B,uBAAO/B,KAAK,MAAM+B,YAAY,4DAC9B,uBAAO/B,KAAK,WAAW+B,YAAY,gDACnC,uBAAO/B,KAAK,WAAW+B,YAAY,+EACnC,uECAG,SAAS+L,KAClB,IAAMvE,EAAY3G,aAAY,SAAAC,GAAK,OAAIA,EAAM2G,iBAAiBC,aAExDsE,EAAiBnL,aAAY,SAAAC,GAAK,OAAIA,EAAMmL,qBAC1CjL,EAA8BgL,EAA9BhL,QAASC,EAAqB+K,EAArB/K,MAAOiL,EAAcF,EAAdE,UAElBnO,EAAWsB,cAqBjB,OAnBAsB,qBAAU,WnBHgB,IAACkD,EmBIrB9F,GnBJqB8F,EmBIK2D,EAAUlE,InBJhB,uCAAQ,WAAMvF,GAAN,eAAAC,EAAA,6DAClCD,EAAS,CAACE,KAAM,wBADkB,kBAGLC,IAAMwB,KAAK,4BAA6B,CAACmE,OAHpC,OAGtBzF,EAHsB,OAI5BL,EAAS,CAACE,KAAM,sBAAuBI,QAASD,EAASE,OAJ7B,gDAM5BP,EAAS,CAACE,KAAM,qBAAsBI,QAAS,KAAME,UANzB,yDAAR,wDmBKpBR,EAASmI,OACZ,IAEEsB,IACC7H,OAAOC,SAASC,KAAO,SACvBE,MAAM,kGAaN,sBAAKtB,UAAU,iBAAf,UACM,oBAAIA,UAAU,eAAd,qEACA,sBAAKA,UAAU,uBAAf,UACOuC,GAAW,cAACX,EAAD,IACXY,GAAS,cAACR,EAAD,IACTyL,GAEW,eAACrJ,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAxC,UACM,gCACM,+BACM,mCACA,mFACA,mFACA,2GACA,mFACA,uEACA,2GACA,oGAGZ,gCAEYiJ,EAAUhJ,KAAI,SAACkD,EAAOjD,GAAR,OACR,+BACM,6BAAKA,EAAI,IACT,6BAC4B,UAAtBiD,EAAMK,YAA0B,oDACJ,QAAtBL,EAAMK,YAAwB,8EAAoB,gFAE9D,6BAAKL,EAAMM,SAAWN,EAAMM,SAAW,MACvC,6BACM,gCACM,kCAAKN,EAAMlE,SAAS,GAAGkB,gBACvB,kCAAKgD,EAAMlE,SAAS,GAAGyE,eACvB,kCAAKP,EAAMlE,SAAS,GAAGmB,wBAGnC,6BAEY+C,EAAMT,YAAYzC,KAAI,SAAC0D,EAAMzD,GAAP,OAChB,gCACM,6BAAKyD,EAAK/H,OACV,sCAAO+H,EAAKtB,IAAZ,cAAqBsB,EAAK3H,MAA1B,cAAqC2H,EAAKlB,OAC1C,+BAKxB,6BAAKU,EAAMS,aACX,6BAAKT,EAAMU,oBACX,+BACOV,EAAMW,WAAa,wBAAQtI,UAAU,WAAlB,mFAAwD,wBAAQ2B,QAAS,kBA7D/J,SAAmByD,GACb,IAAMuC,EAAQ,CACR9C,IAAKO,EACLkD,YAAY,GAElBjD,QAAQC,IAAIqC,GACZrI,EAASoI,EAAgBC,IAuDsIY,CAAUZ,EAAM9C,MAAM7E,UAAU,iBAAvD,kGAC1E2H,EAAMW,YAAc,cAAC,IAAD,CAAMtI,UAAU,MAAMC,GAAE,0BAAqB0H,EAAM9C,KAAnD,SAA0D,mBAAGhD,MAAM,oBAAoBF,QAAS,kBAAMrC,EAASmI,8BC9D9L,SAASiG,KACtB,IAAM3E,EAAY3G,aAAY,SAACC,GAAD,OAAWA,EAAM2G,iBAAiBC,aAEhE,OACE,8BACE,eAAC,IAAD,CAAe0E,SAAS,IAAxB,UACE,cAACvB,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwB,KAAK,IAAIC,UAAW7B,EAAU8B,OAAK,IAC1C,cAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWnF,EAAYoF,OAAK,IAClD,cAAC,IAAD,CAAOF,KAAK,SAASC,UAAW5B,EAAW6B,OAAK,IAC/C/E,GACsB,UAArBA,EAAU/F,SACa,IAAvB+F,EAAUxF,UACR,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqK,KAAK,SAASC,UAAWpF,EAAWqF,OAAK,IAChD,cAAC,IAAD,CAAOF,KAAK,eAAeC,UAAWrF,EAAOsF,OAAK,IAClD,cAAC,IAAD,CAAOF,KAAK,eAAeC,UAAW1H,EAAO2H,OAAK,IAClD,cAAC,IAAD,CAAOF,KAAK,gBAAgBC,UAAWjG,EAAQkG,OAAK,IACpD,cAAC,IAAD,CAAOF,KAAK,mBAAmBC,UAAWhK,EAAWiK,OAAK,IAC1D,cAAC,IAAD,CACEF,KAAK,yBACLC,UAAW3N,EACX4N,OAAK,IAEP,cAAC,IAAD,CACEF,KAAK,wBACLC,UAAW/I,EACXgJ,OAAK,IAEP,cAAC,IAAD,CAAOF,KAAK,uBAAuBC,UAAW5L,EAAS6L,OAAK,IAC5D,cAAC,IAAD,CACEF,KAAK,wBACLC,UAAWnI,EACXoI,OAAK,IAEP,cAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWR,GAAYS,OAAK,IAClD,cAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWV,EAAYW,OAAK,IAClD,cAAC,IAAD,CAAOF,KAAK,aAAaC,UAAWP,GAAYQ,OAAK,IACrD,cAAC,IAAD,CAAOF,KAAK,gBAAgBC,UAAWd,EAAce,OAAK,IAC1D,cAAC,IAAD,CAAOF,KAAK,iBAAiBC,UAAWnD,EAAeoD,OAAK,IAC5D,cAAC,IAAD,CACEF,KAAK,wBACLC,UAAWtD,EACXuD,OAAK,IAEP,cAAC,IAAD,CACEF,KAAK,0BACLC,UAAWrD,EACXsD,OAAK,IAEP,cAAC,IAAD,CAAOF,KAAK,sBAAsBC,UAAWxC,EAAWyC,OAAK,IAC7D,cAAC,IAAD,CAAOD,UAAWT,GAAcU,OAAK,OAG1C/E,GACsB,UAArBA,EAAU/F,SACa,IAAvB+F,EAAUxF,UACR,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqK,KAAK,aAAaC,UAAWP,GAAYQ,OAAK,IACrD,cAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWV,EAAYW,OAAK,IAClD,cAAC,IAAD,CAAOF,KAAK,gBAAgBC,UAAWd,EAAce,OAAK,IAC1D,cAAC,IAAD,CAAOF,KAAK,iBAAiBC,UAAWnD,EAAeoD,OAAK,IAC5D,cAAC,IAAD,CACEF,KAAK,wBACLC,UAAWtD,EACXuD,OAAK,IAEP,cAAC,IAAD,CACEF,KAAK,0BACLC,UAAWrD,EACXsD,OAAK,IAEP,cAAC,IAAD,CAAOF,KAAK,sBAAsBC,UAAWxC,EAAWyC,OAAK,IAC7D,cAAC,IAAD,CAAOD,UAAWT,GAAcU,OAAK,OAG3C,cAAC,IAAD,CAAOD,UAAWT,GAAcU,OAAK,Y,sBC5FhCC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,mCCERQ,GAAgBC,2BAAgB,CAClCC,qBCVgC,WAAyB,IAAxBrM,EAAuB,uDAAf,GAAIsM,EAAW,uCACxD,OAAQA,EAAOnP,MACX,IAAK,2BACD,OAAO,cACH+C,SAAS,GACNF,GAEX,IAAK,2BACD,MAAO,CACHE,SAAS,EACTqM,SAAS,GAEjB,IAAK,0BACD,MAAO,CACHrM,SAAS,EACTC,MAAOmM,EAAO/O,SAEtB,QACI,OAAOyC,IDPf4C,mBCW8B,WAAoC,IAAnC5C,EAAkC,uDAA1B,CAAE6C,MAAO,IAAMyJ,EAAW,uCACjE,OAAQA,EAAOnP,MACX,IAAK,wBACD,OAAO,6BACA6C,GADP,IAEIE,SAAS,IAEjB,IAAK,wBACD,MAAO,CACH2C,MAAOyJ,EAAO/O,QACd2C,SAAS,GAEjB,IAAK,uBACD,MAAO,CACHC,MAAOmM,EAAO/O,QACd2C,SAAS,GAEjB,QACI,OAAOF,ID5BfiE,kBCgC6B,WAAyB,IAAxBjE,EAAuB,uDAAf,GAAIsM,EAAW,uCACrD,OAAQA,EAAOnP,MACX,IAAK,sBACD,OAAO,cACH+G,eAAe,GACZlE,GAEX,IAAK,sBACD,MAAO,CACHkE,eAAe,GAEvB,IAAK,qBACD,MAAO,CACHA,eAAe,EACf/D,MAAOmM,EAAO/O,QACd4G,QAAQ,GAEhB,QACI,OAAOnE,IDjDfwM,gBCqD2B,WAAyB,IAAxBxM,EAAuB,uDAAf,GAAIsM,EAAW,uCACnD,OAAQA,EAAOnP,MACX,IAAK,oBACD,OAAO,6BACA6C,GADP,IAEIyM,aAAa,IAErB,IAAK,oBACD,MAAO,CACHA,aAAa,GAErB,IAAK,mBACD,MAAO,CACHA,aAAa,EACbtM,MAAOmM,EAAO/O,SAEtB,QACI,OAAOyC,IDrEf8E,mBEd8B,WAA0C,IAAzC9E,EAAwC,uDAAhC,CAAE6E,YAAa,IAAMyH,EAAW,uCACrE,OAAQA,EAAOnP,MACT,IAAK,gBACC,IAAMuP,EAAe1M,EAAM6E,YAAYzB,MAAK,SAAA0C,GAAI,OAAIA,EAAKtD,MAAQ8J,EAAO/O,QAAQiF,OAEhF,OAAIkK,EACS,6BACE1M,GADT,IAEM6E,YAAa7E,EAAM6E,YAAYzC,KAAI,SAAA0D,GAAI,OAAIA,EAAKtD,MAAQ8J,EAAO/O,QAAQiF,IAAM8J,EAAO/O,QAAUuI,OAG7F,6BACE9F,GADT,IAEM6E,YAAY,GAAD,mBAAM7E,EAAM6E,aAAZ,CAAyByH,EAAO/O,YAI7D,IAAK,qBACC,MAAO,CACDsH,YAAY,YAAK7E,EAAM6E,YAAYgE,QAAO,SAAA/C,GAAI,OAAIA,EAAKtD,MAAQ8J,EAAO/O,QAAQiF,SAE1F,IAAK,eACC,OAAO,6BACExC,GADT,IAEM6E,YAAa,KAEzB,QACM,OAAO7E,IFZrB2M,eGf0B,WAAyB,IAAxB3M,EAAuB,uDAAf,GAAIsM,EAAW,uCAChD,OAAQA,EAAOnP,MACT,IAAK,mBACC,OAAO,6BACE6C,GADT,IAEME,SAAS,IAErB,IAAK,mBACC,MAAO,CACDA,SAAS,GAErB,IAAK,kBACC,MAAO,CACDA,SAAS,EACTC,MAAOmM,EAAO/O,SAE1B,QACM,OAAOyC,IHDrBC,mBGK8B,WAAoC,IAAnCD,EAAkC,uDAA1B,CAAEI,MAAO,IAAMkM,EAAW,uCAC/D,OAAQA,EAAOnP,MACT,IAAK,wBACC,OAAO,6BACE6C,GADT,IAEME,SAAS,IAErB,IAAK,wBACC,MAAO,CACDA,SAAS,EACTE,MAAOkM,EAAO/O,SAE1B,IAAK,uBACC,MAAO,CACD2C,SAAS,EACTC,MAAOmM,EAAO/O,SAE1B,QACM,OAAOyC,IHtBrBwD,gBG0B2B,WAA0C,IAAzCxD,EAAwC,uDAAhC,CAAEyD,YAAa,IAAM6I,EAAW,uCAClE,OAAQA,EAAOnP,MACT,IAAK,oBACC,MAAO,CACD+C,SAAS,GAErB,IAAK,oBACC,MAAO,CACDA,SAAS,EACTuD,YAAa6I,EAAO/O,SAEhC,IAAK,mBACC,MAAO,CACD2C,SAAS,EACTC,MAAOmM,EAAO/O,SAE1B,QACM,OAAOyC,IH1CrB4M,kBG8C6B,WAAyB,IAAxB5M,EAAuB,uDAAf,GAAIsM,EAAW,uCACnD,OAAQA,EAAOnP,MACT,IAAK,2BACC,OAAO,6BACE6C,GADT,IAEM6M,eAAe,IAE3B,IAAK,2BACC,MAAO,CACDA,eAAe,GAE3B,IAAK,0BACC,MAAO,CACDA,eAAe,EACf1M,MAAOmM,EAAO/O,SAE1B,QACM,OAAOyC,IH9DrB8M,kBGkE6B,WAAyB,IAAxB9M,EAAuB,uDAAf,GAAIsM,EAAW,uCACnD,OAAQA,EAAOnP,MACT,IAAK,sBACC,OAAO,gBACE6C,GAEf,IAAK,sBACC,MAAO,CACDuM,SAAS,GAErB,IAAK,qBACC,MAAO,CACDpM,MAAOmM,EAAO/O,SAE1B,QACM,OAAOyC,IHhFrB2G,iBGoF4B,WAA0B,IAAzB3G,EAAwB,uDAAhB,GAAKsM,EAAW,uCACnD,OAAQA,EAAOnP,MACT,IAAK,qBACC,OAAO,6BACE6C,GADT,IAEME,SAAS,IAErB,IAAK,qBACC,MAAO,CACD0G,UAAW0F,EAAO/O,QAClB2C,SAAS,GAErB,IAAK,oBACC,MAAO,CACDC,MAAOmM,EAAO/O,QACd2C,SAAS,GAErB,QACM,OAAOF,IHrGrB+M,sBIrBiC,WAAyB,IAAxB/M,EAAuB,uDAAf,GAAIsM,EAAW,uCACvD,OAAQA,EAAOnP,MACT,IAAK,2BACC,OAAO,6BACE6C,GADT,IAEME,SAAS,IAErB,IAAK,2BACC,MAAO,CACDA,SAAS,EACTqM,SAAS,GAErB,IAAK,0BACC,MAAO,CACDrM,SAAS,EACTC,MAAOmM,EAAO/O,SAE1B,QACM,OAAOyC,IJIrBwG,wBIAmC,WAAyB,IAAxBxG,EAAuB,uDAAf,GAAIsM,EAAW,uCACzD,OAAQA,EAAOnP,MACT,IAAK,8BACC,OAAO,cACD+C,SAAS,GACNF,GAEf,IAAK,8BACC,MAAO,CACDE,SAAS,EACTuG,iBAAkB6F,EAAO/O,SAErC,IAAK,6BACC,MAAO,CACD2C,SAAS,EACTC,MAAOmM,EAAO/O,SAE1B,QACM,OAAOyC,IJjBrB2B,uBIqBkC,WAAyB,IAAxB3B,EAAuB,uDAAf,GAAIsM,EAAW,uCACxD,OAAQA,EAAOnP,MACT,IAAK,4BACC,OAAO,6BACE6C,GADT,IAEM4B,kBAAkB,IAE9B,IAAK,4BACC,MAAO,CACDA,kBAAkB,EAClBE,aAAcwK,EAAO/O,SAEjC,IAAK,2BACC,MAAO,CACDqE,kBAAkB,EAClBC,sBAAuByK,EAAO/O,SAE1C,QACM,OAAOyC,IJtCrBgN,sBI0CiC,WAAyB,IAAxBhN,EAAuB,uDAAf,GAAIsM,EAAW,uCACvD,OAAQA,EAAOnP,MACT,IAAK,0BACC,OAAO,6BACE6C,GADT,IAEME,SAAS,IAErB,IAAK,0BACC,MAAO,CACDA,SAAS,EACTqM,SAAS,GAErB,IAAK,yBACC,MAAO,CACDrM,SAAS,EACTC,MAAOmM,EAAO/O,SAE1B,QACM,OAAOyC,IJ3DrBiN,oBI+D+B,WAAyB,IAAxBjN,EAAuB,uDAAf,GAAIsM,EAAW,uCACrD,OAAQA,EAAOnP,MACT,IAAK,wBACC,OAAO,6BACE6C,GADT,IAEME,SAAS,IAErB,IAAK,wBACC,MAAO,CACDA,SAAS,EACTqM,SAAS,GAErB,IAAK,uBACC,MAAO,CACDrM,SAAS,EACTC,MAAOmM,EAAO/O,SAE1B,QACM,OAAOyC,IJhFrBkN,mBK1B8B,WAAyB,IAAxBlN,EAAuB,uDAAf,GAAIsM,EAAW,uCACpD,OAAQA,EAAOnP,MACT,IAAK,wBACC,OAAO,6BACE6C,GADT,IAEMmN,cAAc,IAE1B,IAAK,wBACC,MAAO,CACDA,cAAc,EACdZ,SAAS,GAErB,IAAK,uBACC,MAAO,CACDY,cAAc,EACdhN,MAAOmM,EAAO/O,SAE1B,QACM,OAAOyC,ILSrBmL,kBKL6B,WAAyB,IAAxBnL,EAAuB,uDAAf,GAAIsM,EAAW,uCACnD,OAAQA,EAAOnP,MACT,IAAK,sBACC,OAAO,6BACE6C,GADT,IAEME,SAAS,IAErB,IAAK,sBACC,MAAO,CACDA,SAAS,EACTkL,UAAWkB,EAAO/O,SAE9B,IAAK,qBACC,MAAO,CACD2C,SAAS,EACTC,MAAOmM,EAAO/O,SAE1B,QACM,OAAOyC,ILZrBoN,iBKgB4B,WAAyB,IAAxBpN,EAAuB,uDAAf,GAAIsM,EAAW,uCAClD,OAAQA,EAAOnP,MACT,IAAK,qBACC,OAAO,6BACE6C,GADT,IAEMyM,aAAa,IAEzB,IAAK,qBACC,MAAO,CACDA,aAAa,EACbF,SAAS,GAErB,IAAK,oBACC,MAAO,CACDE,aAAa,EACbtM,MAAOmM,EAAO/O,SAE1B,QACM,OAAOyC,ILjCrBqN,iBKqC4B,WAAyB,IAAxBrN,EAAuB,uDAAf,GAAIsM,EAAW,uCAClD,OAAQA,EAAOnP,MACT,IAAK,qBACC,OAAO,6BACE6C,GADT,IAEMyM,aAAa,IAEzB,IAAK,qBACC,MAAO,CACDA,aAAa,EACbF,SAAS,GAErB,IAAK,oBACC,MAAO,CACDE,aAAa,EACbtM,MAAOmM,EAAO/O,SAE1B,QACM,OAAOyC,ILtDrBsJ,iBK0D4B,WAAyB,IAAxBtJ,EAAuB,uDAAf,GAAIsM,EAAW,uCAClD,OAAQA,EAAOnP,MACT,IAAK,qBACC,OAAO,6BACE6C,GADT,IAEMwJ,cAAc,IAE1B,IAAK,qBACC,MAAO,CACDA,cAAc,EACdD,WAAY+C,EAAO/O,SAE/B,IAAK,oBACC,MAAO,CACDiM,cAAc,EACdC,WAAY6C,EAAO/O,SAE/B,QACM,OAAOyC,IL3ErB4K,2BK+EsC,WAAyB,IAAxB5K,EAAuB,uDAAf,GAAIsM,EAAW,uCAC5D,OAAQA,EAAOnP,MACT,IAAK,0BACC,OAAO,6BACE6C,GADT,IAEME,SAAS,IAErB,IAAK,0BACC,MAAO,CACDA,SAAS,EACT2K,cAAeyB,EAAO/O,SAElC,IAAK,yBACC,MAAO,CACD2C,SAAS,EACTC,MAAOmM,EAAO/O,SAE1B,QACM,OAAOyC,ILhGrByF,oBKoG+B,WAAyB,IAAxBzF,EAAuB,uDAAf,GAAIsM,EAAW,uCACrD,OAAQA,EAAOnP,MACT,IAAK,yBACC,OAAO,6BACE6C,GADT,IAEME,SAAS,IAErB,IAAK,yBACC,MAAO,CACDA,SAAS,EACTwF,UAAW4G,EAAO/O,SAE9B,IAAK,wBACC,MAAO,CACD2C,SAAS,EACTC,MAAOmM,EAAO/O,SAE1B,QACM,OAAOyC,MLhHnBsN,GAAe,CACjBxI,mBAAoB,CAAED,YAJXE,aAAawI,QAAQ,UAAYtI,KAAKuI,MAAMzI,aAAawI,QAAQ,WAAa,IAKzF5G,iBAAkB,CAAEC,UAJJ7B,aAAawI,QAAQ,eAAiBtI,KAAKuI,MAAMzI,aAAawI,QAAQ,gBAAkB,OAOtGE,GAAkBC,+BAAoB,IAI7BC,GAFDC,uBAAYzB,GAAemB,GAAcG,GAAgBI,2BAAgBC,QMnCvFC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAACtC,GAAD,MAEF4C,SAASC,eAAe,SAG1BxC,O","file":"static/js/main.2f284b8b.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nexport const addFoodToMenuAction = (food) => async dispatch => {\r\n    dispatch({type: 'ADD_FOOD_TO_MENU_REQUEST'})\r\n    try {\r\n        const response = await axios.post('/api/foods/addfoodtomenu', {food})\r\n        dispatch({type: 'ADD_FOOD_TO_MENU_SUCCESS'})\r\n        window.location.href = '/admin/foods'\r\n    } catch (error) {\r\n        dispatch({type: 'ADD_FOOD_TO_MENU_FAILED', payload: error.message})\r\n    }\r\n}\r\n\r\nexport const getAllFoodsAction = () => async dispatch => {\r\n    dispatch({type: 'GET_ALL_FOODS_REQUEST'})\r\n    try {\r\n        const response = await axios.get('/api/foods/getallfoods')\r\n        dispatch({type: 'GET_ALL_FOODS_SUCCESS', payload: response.data})\r\n    } catch (error) {\r\n        dispatch({type: 'GET_ALL_FOODS_FAILED', payload: error.message})\r\n    }\r\n}\r\n\r\nexport const removeFoodAction = (id) => async dispatch => {\r\n    dispatch({type: 'DELETE_FOOD_REQUEST'})\r\n    try {\r\n        const response = await axios.post('/api/foods/removefood', {id})\r\n        dispatch({type: 'DELETE_FOOD_SUCCESS'})\r\n        window.location.reload()\r\n    } catch (error) {\r\n        dispatch({type: 'DELETE_FOOD_FAILED', payload: error.message})\r\n    }\r\n}\r\n\r\nexport const editFoodAction = (food) => async dispatch => {\r\n    dispatch({type: 'EDIT_FOOD_REQUEST'})\r\n    try {\r\n        const response = await axios.post('/api/foods/editfood',{food})\r\n        dispatch({type: 'EDIT_FOOD_SUCCESS'})\r\n        window.location.href = '/admin/foods/'\r\n    } catch (error) {\r\n        dispatch({type: 'EDIT_FOOD_FAILED', payload: error.message})\r\n    }\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function NavbarAdmin() {\r\n    return (\r\n        <div className=\"component-navbar\">\r\n            <div className=\"component-navbar-selections\">\r\n                    <Link className=\"nav-links\" to='/admin/users'>کاربران</Link>\r\n                    <Link className=\"nav-links\" to='/admin/foods'>غذاها</Link>\r\n                    <Link className=\"nav-links\" to='/admin/orders'>سفارشات</Link>\r\n                    <Link className=\"nav-links\" to='/admin/customers'>مشترکین</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addFoodToMenuAction } from '../reduxfiles/actions/foodAction'\r\nimport NavbarAdmin from './NavbarAdmin'\r\n\r\nexport default function AddFoodToMenu() {\r\n    const [name, setname] = useState('')\r\n    const [category, setcategory] = useState('other')\r\n    const [price, setprice] = useState('')\r\n    const [description, setdescription] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    function saveToMenu(e) {\r\n        const food = {\r\n            name,\r\n            category,\r\n            price,\r\n            description\r\n        }\r\n        e.preventDefault()\r\n        \r\n        if(name && category && price && description){\r\n            dispatch(addFoodToMenuAction(food))\r\n            setname('')\r\n            setcategory('other')\r\n            setprice('')\r\n            setdescription('')\r\n        } else {\r\n            alert('لطفا تمامی فیلدها را پر نمایید.')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"page-container\">\r\n            <NavbarAdmin />\r\n            <h4 className=\"users-header\">صفحه مدیریت/غذاها/افزودن:</h4>\r\n            <form className='add-food-form'>\r\n                <input type='text' placeholder=\"نام\" className='add-food-form-input' value={name} onChange={(e) => setname(e.target.value)} />\r\n                <select className='add-food-form-input' placeholder='دسته بندی' value={category} onChange={(e) => setcategory(e.target.value)}>\r\n                    <option value=\"other\">بدون دسته بندی</option>\r\n                    <option value='withrice'>چلو</option>\r\n                    <option value='withoutrice'>خوراک</option>\r\n                    <option value='drink'>نوشیدنی</option>\r\n                    <option value='appetizer'>پیش غذا</option>\r\n                </select>\r\n                <input type='number' placeholder=\"قیمت\" className='add-food-form-input' value={price} onChange={(e) => setprice(e.target.value)} />\r\n                <textarea placeholder='توضیحات' className='add-food-form-input' value={description} onChange={(e) => setdescription(e.target.value)}></textarea>\r\n                <button className='add-food-btn' onClick={(e) => saveToMenu(e)}>ذخیره</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <div>\r\n            <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"sr-only\"></span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\"\r\n\r\nexport const addUserAction = (user) => async dispatch => {\r\n      dispatch({ type: 'ADD_USER_REQUEST' })\r\n      try {\r\n            const response = await axios.post('/api/users/adduser', { user })\r\n            dispatch({ type: 'ADD_USER_SUCCESS' })\r\n            window.location.href = '/admin/users/'\r\n      } catch (error) {\r\n            dispatch({ type: 'ADD_USER_FAILED', payload: error.message })\r\n      }\r\n}\r\n\r\nexport const getAllUsersAction = () => async dispatch => {\r\n      dispatch({ type: 'GET_ALL_USERS_REQUEST' })\r\n      try {\r\n            const response = await axios.get('/api/users/getallusers')\r\n            dispatch({ type: 'GET_ALL_USERS_SUCCESS', payload: response.data })\r\n      } catch (error) {\r\n            dispatch({ type: 'GET_ALL_USERS_FAILED', payload: error.message })\r\n      }\r\n}\r\n\r\nexport const editUserAction = (userId) => async dispatch => {\r\n      dispatch({ type: 'EDIT_USER_REQUEST' })\r\n      try {\r\n            const response = await axios.post('/api/users/edituser', { userId })\r\n            dispatch({ type: 'EDIT_USER_SUCCESS', payload: response.data })\r\n      } catch (error) {\r\n            dispatch({ type: 'EDIT_USER_FAILED', payload: error.message })\r\n      }\r\n}\r\n\r\nexport const updateUserAction = (user) => async dispatch => {\r\n      dispatch({ type: 'UPDATE_USER_INFO_REQUEST' })\r\n      try {\r\n            const response = await axios.post('/api/users/updateuser', { user })\r\n            dispatch({ type: 'UPDATE_USER_INFO_SUCCESS' })\r\n            window.location.href = '/admin/users/'\r\n      } catch (error) {\r\n            dispatch({ type: 'UPDATE_USER_INFO_FAILED', payload: error.message })\r\n      }\r\n}\r\n\r\nexport const deleteUserAction = (id) => async dispatch => {\r\n      dispatch({ type: 'DELETE_USER_REQUEST' })\r\n      try {\r\n            const response = await axios.post('/api/users/deleteuser', { id })\r\n            dispatch({ type: 'DELETE_USER_SUCCESS' })\r\n            window.location.href = '/admin/users/'\r\n      } catch (error) {\r\n            dispatch({ type: 'DELETE_USER_FAILED', payload: error.message })\r\n      }\r\n}\r\n\r\nexport const loginUserAction = (user) => async dispatch => {\r\n      dispatch({ type: 'LOGIN_USER_REQUEST'})\r\n      try {\r\n            const response = await axios.post('/api/users/login', user)\r\n            dispatch({ type: 'LOGIN_USER_SUCCESS', payload: response.data})\r\n            console.log(response.data);\r\n            localStorage.setItem('userlogedin', JSON.stringify(response.data))\r\n            window.location.href = '/'\r\n      } catch (error) {\r\n            dispatch({ type: 'LOGIN_USER_FAILED', payload: error.message })\r\n            console.log(error.message);\r\n      }\r\n}","import React from 'react'\r\n\r\nexport default function SomeThingWentWrong() {\r\n    return (\r\n        <div>\r\n            <h2>خطایی رخ داده است!</h2>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loading from '../Loading'\r\nimport { addUserAction, getAllUsersAction } from '../reduxfiles/actions/userAction'\r\nimport SomeThingWentWrong from '../SomeThingWentWrong'\r\nimport NavbarAdmin from './NavbarAdmin'\r\n\r\nexport default function Adduser() {\r\n      const dispatch = useDispatch()\r\n\r\n      useEffect(() => {\r\n            dispatch(getAllUsersAction())\r\n      }, [])\r\n\r\n      const getUsersState = useSelector(state => state.getAllUsersReducer)\r\n      const { loading, error, users } = getUsersState\r\n\r\n      const [username, setusername] = useState('')\r\n      const [password, setpassword] = useState('')\r\n      const [cpassword, setcpassword] = useState('')\r\n      const [access, setaccess] = useState('simple')\r\n      const [phoneNum, setphoneNum] = useState('')\r\n\r\n      useEffect(() => {\r\n            if (users.length > 0) {\r\n                  setusername(users.length + 10001)\r\n            }\r\n      }, [users, loading, dispatch])\r\n\r\n      function saveUser() {\r\n            if (password === cpassword && username && password !== '' && phoneNum) {\r\n                  const user = {\r\n                        username,\r\n                        password,\r\n                        access,\r\n                        phoneNum,\r\n                        isActive: true,\r\n                  }\r\n                  dispatch(addUserAction(user))\r\n            } else {\r\n                  alert('لطفا تمامی فیلدها را با دقت تکمیل کنید.')\r\n            }\r\n      }\r\n\r\n      return (\r\n            <div className=\"page-container\">\r\n                  <NavbarAdmin />\r\n                  <h4 className=\"users-header\">صفحه مدیریت/کاربران/کاربر جدید:</h4>\r\n                  {\r\n                        loading ? <Loading /> : error ? <SomeThingWentWrong /> : (\r\n                              <div className=\"add-user-form\">\r\n                                    <label className=\"form-label\">\r\n                                          نام کاربری:\r\n                                          <input type='text' className='add-food-form-input' placeholder='نام کاربری' value={username} />\r\n                                    </label>\r\n                                    <label className=\"form-label\">\r\n                                          رمز ورود:\r\n                                          <input type='password' className='add-food-form-input' placeholder='رمز ورود' value={password} onChange={(e) => setpassword(e.target.value)} />\r\n                                    </label>\r\n                                    <label className=\"form-label\">\r\n                                          تایید رمز ورود:\r\n                                          <input type='password' className='add-food-form-input' placeholder='تایید رمز ورود' value={cpassword} onChange={(e) => setcpassword(e.target.value)} />\r\n                                    </label>\r\n                                    <label className=\"form-label\">\r\n                                          سطح دسترسی:\r\n                                          <select placeholder='دسترسی' className='add-food-form-input' value={access} onChange={(e) => setaccess(e.target.value)} >\r\n                                                <option value='admin'>مدیریت(ادمین)</option>\r\n                                                <option value='cashier'>صندوقدار</option>\r\n                                                <option value='simple'>ساده</option>\r\n                                          </select>\r\n                                    </label>\r\n                                    <label className=\"form-label\">\r\n                                          شماره تماس کاربر:\r\n                                          <input type='tel' placeholder='شماره تماس کاربر' className='add-food-form-input' value={phoneNum} onChange={(e) => setphoneNum(e.target.value)} />\r\n                                    </label>\r\n                                    <button className='add-food-btn' onClick={saveUser}>ذخیره</button>\r\n                              </div>\r\n                        )\r\n                  }\r\n            </div>\r\n      )\r\n}\r\n","import axios from \"axios\"\r\n\r\nexport const addNewCustomerAction = (customer) => async dispatch => {\r\n      dispatch({ type: 'ADD_NEW_CUSTOMER_REQUEST' })\r\n      try {\r\n            const response = await axios.post('/api/customers/addnewcustomer', { customer })\r\n            dispatch({ type: 'ADD_NEW_CUSTOMER_SUCCESS' })\r\n      } catch (error) {\r\n            dispatch({ type: 'ADD_NEW_CUSTOMER_FAILED', payload: error.message })\r\n      }\r\n}\r\n\r\nexport const findCustomerByIdAction = (customerId) => async dispatch => {\r\n      dispatch({ type: 'FIND_CUSTOMER_BY_ID_REQUEST' })\r\n      try {\r\n            const response = await axios.post('/api/customers/findbycustomerid', { customerId })\r\n            dispatch({ type: 'FIND_CUSTOMER_BY_ID_SUCCESS', payload: response.data })\r\n      } catch (error) {\r\n            dispatch({ type: 'FIND_CUSTOMER_BY_ID_FAILED', payload: error.message })\r\n      }\r\n}\r\n\r\nexport const getAllCustomersAction = () => async dispatch => {\r\n      dispatch({ type: 'GET_ALL_CUSTOMERS_REQUEST' })\r\n      try {\r\n            const response = await axios.get('/api/customers/getallcustomers')\r\n            dispatch({ type: 'GET_ALL_CUSTOMERS_SUCCESS', payload: response.data })\r\n      } catch (error) {\r\n            dispatch({ type: 'GET_ALL_CUSTOMERS_FAILED', payload: error.message })\r\n      }\r\n}\r\n\r\nexport const removeCustomerAction = (id) => async dispatch => {\r\n      dispatch({ type: 'REMOVE_CUSTOMER_REQUEST' })\r\n      try {\r\n            const response = await axios.post('/api/customers/removecustomer', { id })\r\n            dispatch({ type: 'REMOVE_CUSTOMER_SUCCESS' })\r\n            window.location.href = '/customerspage'\r\n      } catch (error) {\r\n            dispatch({ type: 'REMOVE_CUSTOMER_FAILED', payload: error.message})\r\n      }\r\n}\r\n\r\nexport const editCustomerAction = (customer) => async dispatch => {\r\n      dispatch({ type: 'EDIT_CUSTOMER_REQUEST'})\r\n      try {\r\n            const response = await axios.post('/api/customers/editcustomer', {customer})\r\n            dispatch({ type: 'EDIT_CUSTOMER_SUCCESS' })\r\n            window.location.href = '/customerspage'\r\n      } catch (error) {\r\n            dispatch({ type: 'EDIT_CUSTOMER_FAILED', payload: error.message})\r\n      }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Loading from '../Loading'\r\nimport { getAllCustomersAction } from '../reduxfiles/actions/customersAction'\r\nimport SomeThingWentWrong from '../SomeThingWentWrong'\r\nimport NavbarAdmin from './NavbarAdmin'\r\n\r\nexport default function Customers() {\r\n    const dispatch = useDispatch()\r\n    const [search, setsearch] = useState('')\r\n\r\n    useEffect(() => {\r\n          dispatch(getAllCustomersAction())\r\n    }, [])\r\n\r\n    const getAllCustomerState = useSelector(state => state.getAllCustomersReducer)\r\n    const { loadingcustomers, errorLoadingCustomers, allcustomers } = getAllCustomerState\r\n\r\n    return (\r\n        <div className=\"page-container\">\r\n            <NavbarAdmin />\r\n            <h4 className=\"users-header\">صفحه مدیریت/مشترکین:</h4>\r\n            \r\n            <div className='customerpage-seletors'>\r\n            <label className=\"customerpage-label\">\r\n                  جستجو مشترک:\r\n                  <input className='search-customer' type='text' placeholder='جستجو' onChange={(e) => setsearch(e.target.value)} />\r\n            </label>\r\n            <button className=\"btn btn-success\" onClick={() => window.location.href = '/customerspage/create'}><i class=\"bi bi-person-plus-fill h2 mx-2\"></i> ثبت مشترک جدید</button>\r\n      </div>\r\n      <div className=\"table-with\">\r\n            {loadingcustomers && <Loading />}\r\n            {errorLoadingCustomers && <SomeThingWentWrong />}\r\n            {allcustomers && allcustomers.length > 0 && (\r\n                  <Table striped bordered hover responsive>\r\n                        <thead>\r\n                              <tr>\r\n                                    <th>#</th>\r\n                                    <th>کد اشتراک</th>\r\n                                    <th>نام مشترک</th>\r\n                                    <th>آدرس مشترک</th>\r\n                                    <th>ویرایش مشترک</th>\r\n                              </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                              {\r\n                                    allcustomers.map((customer, i) => (\r\n                                          <tr>\r\n                                                <td>{i + 1}</td>\r\n                                                <td>{customer.customerId}</td>\r\n                                                <td>{customer.customerName}</td>\r\n                                                <td>{customer.customerAddress}</td>\r\n                                                <td>\r\n                                                      <Link to={`/customerspage/edit/${customer._id}`}>\r\n                                                            <i class=\"bi bi-pencil-fill\"></i>\r\n                                                      </Link>\r\n                                                </td>\r\n                                          </tr>\r\n                                    ))\r\n                              }\r\n                        </tbody>\r\n                  </Table>\r\n            )\r\n            }\r\n\r\n      </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\nimport Loading from '../Loading'\r\nimport { editFoodAction, getAllFoodsAction } from '../reduxfiles/actions/foodAction'\r\nimport SomeThingWentWrong from '../SomeThingWentWrong'\r\nimport NavbarAdmin from './NavbarAdmin'\r\n\r\nexport default function EditFood({ match }) {\r\n    const [name, setname] = useState('')\r\n    const [category, setcategory] = useState('other')\r\n    const [price, setprice] = useState('')\r\n    const [description, setdescription] = useState('')\r\n    const dispatch = useDispatch()\r\n    const foodstate = useSelector(state => state.getAllFoodsReducer)\r\n    const { loading, error, foods } = foodstate\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllFoodsAction())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const findFood = foods.find(food => food._id === match.params.id)\r\n        if (findFood) {\r\n            console.log(findFood)\r\n            setname(findFood.name)\r\n            setcategory(findFood.category)\r\n            setprice(findFood.price)\r\n            setdescription(findFood.description)\r\n        } else {\r\n            dispatch(getAllFoodsAction())\r\n        }\r\n    }, [foods, dispatch])\r\n\r\n    function saveToMenu(e) {\r\n        const food = {\r\n            _id:match.params.id,\r\n            name,\r\n            category,\r\n            price,\r\n            description\r\n        }\r\n        e.preventDefault()\r\n\r\n        if (name && category && price && description) {\r\n            console.log(food);\r\n            dispatch(editFoodAction(food))\r\n            setname('')\r\n            setcategory('other')\r\n            setprice('')\r\n            setdescription('')\r\n        } else {\r\n            alert('لطفا تمامی فیلدها را پر نمایید.')\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"page-container\">\r\n            <NavbarAdmin />\r\n            <h4 className=\"users-header\">صفحه مدیریت/غذاها/ویرایش:</h4>\r\n            {\r\n                loading ? <Loading /> : error ? <SomeThingWentWrong /> : (\r\n                    <form className='add-food-form'>\r\n                        <input type='text' placeholder=\"نام\" className='add-food-form-input' value={name} onChange={(e) => setname(e.target.value)} />\r\n                        <select className='add-food-form-input' placeholder='دسته بندی' value={category} onChange={(e) => setcategory(e.target.value)}>\r\n                            <option value=\"other\">بدون دسته بندی</option>\r\n                            <option value='withrice'>چلو</option>\r\n                            <option value='withoutrice'>خوراک</option>\r\n                            <option value='drink'>نوشیدنی</option>\r\n                            <option value='appetizer'>پیش غذا</option>\r\n                        </select>\r\n                        <input type='number' placeholder=\"قیمت\" className='add-food-form-input' value={price} onChange={(e) => setprice(e.target.value)} />\r\n                        <textarea placeholder='توضیحات' className='add-food-form-input' value={description} onChange={(e) => setdescription(e.target.value)}></textarea>\r\n                        <button className='add-food-btn' onClick={(e) => saveToMenu(e)}>ذخیره</button>\r\n                    </form>\r\n                )\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loading from '../Loading'\r\nimport { deleteUserAction, editUserAction, updateUserAction } from '../reduxfiles/actions/userAction'\r\nimport SomeThingWentWrong from '../SomeThingWentWrong'\r\nimport NavbarAdmin from './NavbarAdmin'\r\n\r\nexport default function Edituser({ match }) {\r\n      const id = match.params.id\r\n      const dispatch = useDispatch()\r\n\r\n      useEffect(() => {\r\n            dispatch(editUserAction(id))\r\n      }, [])\r\n\r\n      const editUserState = useSelector(state => state.editUserReducer)\r\n      const { loading, error, currentuser } = editUserState\r\n\r\n      const [username, setusername] = useState('')\r\n      const [password, setpassword] = useState('')\r\n      const [cpassword, setcpassword] = useState('')\r\n      const [access, setaccess] = useState('simple')\r\n      const [phoneNum, setphoneNum] = useState('')\r\n      const [isActive, setisActive] = useState('')\r\n\r\n      function saveUser() {\r\n            if (password === cpassword && username && password !== '' && phoneNum) {\r\n                  const user = {\r\n                        _id: currentuser._id,\r\n                        username,\r\n                        password,\r\n                        access,\r\n                        phoneNum,\r\n                        isActive,\r\n                  }\r\n                  dispatch(updateUserAction(user))\r\n            } else {\r\n                  alert('لطفا تمامی فیلدها را با دقت تکمیل کنید.')\r\n            }\r\n      }\r\n\r\n      function removeUser() {\r\n            dispatch(deleteUserAction(currentuser._id))\r\n      }\r\n\r\n      useEffect(() => {\r\n            if (currentuser) {\r\n                  console.log(currentuser.isActive);\r\n\r\n                  setusername(currentuser.username)\r\n                  setusername(currentuser.username)\r\n                  setpassword(currentuser.password)\r\n                  setaccess(currentuser.access)\r\n                  setphoneNum(currentuser.phoneNum)\r\n                  setisActive(currentuser.isActive)\r\n            }\r\n      }, [currentuser, loading, dispatch])\r\n\r\n      return (\r\n            <div className=\"page-container\">\r\n                  <NavbarAdmin />\r\n                  <h4 className=\"users-header\">صفحه مدیریت/کاربران/ویرایش کاربر :</h4>\r\n                  {\r\n                        loading ? <Loading /> : error ? <SomeThingWentWrong /> : (\r\n                              <div className=\"add-user-form\">\r\n                                    <label className=\"form-label\">\r\n                                          نام کاربری:\r\n                                          <input type='text' className='add-food-form-input' placeholder='نام کاربری' value={username} />\r\n                                    </label>\r\n                                    <label className=\"form-label\">\r\n                                          رمز ورود:\r\n                                          <input type='password' className='add-food-form-input' placeholder='رمز ورود' value={password} onChange={(e) => setpassword(e.target.value)} />\r\n                                    </label>\r\n                                    <label className=\"form-label\">\r\n                                          تایید رمز ورود:\r\n                                          <input type='password' className='add-food-form-input' placeholder='تایید رمز ورود' value={cpassword} onChange={(e) => setcpassword(e.target.value)} />\r\n                                    </label>\r\n                                    <label className=\"form-label\">\r\n                                          سطح دسترسی:\r\n                                          <select placeholder='دسترسی' className='add-food-form-input' value={access} onChange={(e) => setaccess(e.target.value)} >\r\n                                                <option value='admin'>مدیریت(ادمین)</option>\r\n                                                <option value='cashier'>صندوقدار</option>\r\n                                                <option value='simple'>ساده</option>\r\n                                          </select>\r\n                                    </label>\r\n                                    <label className=\"form-label\">\r\n                                          شماره تماس کاربر:\r\n                                          <input type='tel' placeholder='شماره تماس کاربر' className='add-food-form-input' value={phoneNum} onChange={(e) => setphoneNum(e.target.value)} />\r\n                                    </label>\r\n                                    <label className=\"form-label\">\r\n                                          وضعیت استخدام:\r\n                                          <input type='checkbox' checked={isActive} onChange={(e) => setisActive(!isActive)} />\r\n                                    </label>\r\n                                    <div className='edit_user_btns'>\r\n                                          <button className='edit-btn' onClick={saveUser}>ذخیره</button>\r\n                                          <button className='delete-btn' onClick={removeUser}>حذف کاربر</button>\r\n                                    </div>\r\n                              </div>\r\n                        )\r\n                  }\r\n            </div>\r\n      )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport NavbarAdmin from './NavbarAdmin'\r\nimport Table from 'react-bootstrap/Table'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { getAllFoodsAction, removeFoodAction } from '../reduxfiles/actions/foodAction'\r\nimport { useSelector } from 'react-redux'\r\nimport Loading from '../Loading'\r\nimport SomeThingWentWrong from '../SomeThingWentWrong'\r\n\r\nexport default function Foods() {\r\n    const dispatch = useDispatch()\r\n    const allfoodsstate = useSelector(state => state.getAllFoodsReducer)\r\n    const { loading, error, foods } = allfoodsstate\r\n\r\n    const removedFoodState = useSelector(state => state.removeFoodReducer)\r\n    const { loadingRemove, failed } = removedFoodState\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllFoodsAction())\r\n    }, [])\r\n\r\n    function removeFood(id) {\r\n        dispatch(removeFoodAction(id))\r\n    }\r\n\r\n    function editFood(id) {\r\n        window.location.href = `/admin/foods/edit/${id}`\r\n    }\r\n    return (\r\n        <div className=\"page-container\">\r\n            <NavbarAdmin />\r\n            <h4 className=\"users-header\">صفحه مدیریت/غذاها:</h4>\r\n            <Link className=\"add-new-food-link\" to='/admin/foods/addtomenu'>\r\n                <button className=\"mb-4 add-new-food\"><i class=\"bi h1 bi-plus plus-icon\"></i> افزودن به منو</button>\r\n            </Link>\r\n            <div className=\"table-with\">\r\n                {loadingRemove && <Loading />}\r\n                {failed && <SomeThingWentWrong />}\r\n                {\r\n                    loading ? <Loading /> : error ? <SomeThingWentWrong /> : (\r\n                        <Table striped bordered hover responsive>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>نام</th>\r\n                                    <th>دسته بندی</th>\r\n                                    <th>قیمت</th>\r\n                                    <th>توضیحات</th>\r\n                                    <th>بررسی</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    foods.map((food, i) => (\r\n                                        <tr>\r\n                                            <td>{i + 1}</td>\r\n                                            <td>{food.name}</td>\r\n                                            <td>{\r\n                                                food.category === 'withrice' ?\r\n                                                    'چلو' : food.category === 'withoutrice' ?\r\n                                                        'خوراک' : food.category === 'appetizer' ?\r\n                                                            'پیش غذا' : 'نوشیدنی'\r\n                                            }</td>\r\n                                            <td>{food.price}</td>\r\n                                            <td>{food.description}</td>\r\n                                            <td>\r\n                                                <button className='edit-btn' onClick={() => editFood(food._id)}>ویرایش</button>\r\n                                                <button className='delete-btn' onClick={() => removeFood(food._id)}>حذف</button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const addToBasketAction = (food, qty) => (dispatch, getState) => {\r\n      let basketItem = {\r\n            _id: food._id,\r\n            name: food.name,\r\n            price: food.price,\r\n            qty: Number(qty),\r\n            category: food.category,\r\n            description: food.description,\r\n            fee: food.price * qty\r\n      }\r\n      if (basketItem.qty < 1) {\r\n            dispatch({ type: 'REMOVE_FROM_BASKET', payload: food })\r\n      } else {\r\n            dispatch({ type: 'ADD_TO_BASKET', payload: basketItem })\r\n      }\r\n      const basketItems = getState().addToBasketReducer.basketItems\r\n      localStorage.setItem('basket', JSON.stringify(basketItems))\r\n}\r\n\r\nexport const removeFromBasketAction = (food) => (dispatch, getState) => {\r\n      dispatch({ type: 'REMOVE_FROM_BASKET', payload: food })\r\n      const basketItems = getState().addToBasketReducer.basketItems\r\n      localStorage.setItem('basket', JSON.stringify(basketItems))\r\n}\r\n\r\nexport const emptyBasketAction = () => (dispatch, getState) => {\r\n      dispatch({type: 'EMPTY_BASKET'})\r\n      const basketItems = getState().addToBasketReducer.basketItems\r\n      localStorage.setItem('basket', JSON.stringify(basketItems))\r\n}","import axios from \"axios\"\r\n\r\nexport const addNewOrderAction = (order) => async dispatch => {\r\n      dispatch({type: 'ADD_NEW_ORDER_REQUEST'})\r\n      try {\r\n            const response = await axios.post('/api/orders/addneworder',{order})\r\n            dispatch({type: 'ADD_NEW_ORDER_SUCCESS'})\r\n            window.location.href = '/'\r\n            localStorage.removeItem('basket')\r\n      } catch (error) {\r\n            dispatch({type: 'ADD_NEW_ORDER_FAILED', payload: error.message})\r\n      }\r\n}\r\n\r\nexport const userOrdersAction = (id) => async dispatch => {\r\n      dispatch({type: 'USER_ORDERS_REQUEST'})\r\n      try {\r\n            const response = await axios.post('/api/orders/getuserorders', {id})\r\n            dispatch({type: 'USER_ORDERS_SUCCESS', payload: response.data})\r\n      } catch (error) {\r\n            dispatch({type: 'USER_ORDERS_FAILED', payload: error.message})\r\n      }\r\n}\r\n\r\nexport const editOrderAction = (order) => async dispatch => {\r\n      dispatch({type: 'EDIT_ORDER_REQUEST'})\r\n      try {\r\n            const response = await axios.post('/api/orders/editorder', {order})\r\n            dispatch({type: 'EDIT_ORDER_SUCCESS'})\r\n            window.location.href = '/ordersending'\r\n      } catch (error) {\r\n            dispatch({type: 'EDIT_ORDER_FAILED', payload: error.message})\r\n      }\r\n}\r\n\r\nexport const sentOrderAction = (order) => async dispatch => {\r\n      dispatch({type: 'SENT_ORDER_REQUEST'})\r\n      try {\r\n            const response = await axios.post('/api/orders/sentorder', {order})\r\n            dispatch({type: 'SENT_ORDER_SUCCESS'})\r\n            window.location.reload()\r\n      } catch (error) {\r\n            dispatch({type: 'SENT_ORDER_FAILED', payload: error.message})\r\n      }\r\n}\r\n\r\nexport const findOrderAction = (id) => async dispatch => {\r\n      dispatch({type: 'FIND_ORDER_REQUEST'})\r\n      try {\r\n            const response = await axios.post('/api/orders/findorder', {id})\r\n            dispatch({type: 'FIND_ORDER_SUCCESS', payload: response.data})\r\n      } catch (error) {\r\n            dispatch({type: 'SENT_ORDER_FAILED', payload: error.message})\r\n      }\r\n}\r\n\r\nexport const getAllSendingOrdersAction = () => async dispatch => {\r\n      dispatch({type: 'GET_ALL_SENDING_REQUEST'})\r\n      try {\r\n            const response = await axios.get('/api/orders/getallsendingorder')\r\n            dispatch({type: 'GET_ALL_SENDING_SUCCESS', payload: response.data})\r\n      } catch (error) {\r\n            dispatch({type: 'GET_ALL_SENDING_FAILED', payload: error.message})\r\n      }\r\n}\r\n\r\nexport const getAllOrdersAction = () => async dispatch => {\r\n      dispatch({type: 'GET_ALL_ORDERS_REQUEST'})\r\n      try {\r\n            const response = await axios.get('/api/orders/getallorders')\r\n            dispatch({type: 'GET_ALL_ORDERS_SUCCESS', payload: response.data})\r\n      } catch (error) {\r\n            dispatch({type: 'GET_ALL_ORDERS_FAILED', payload: error.message})\r\n      }\r\n}","import React, { useEffect } from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Loading from '../Loading'\r\nimport { emptyBasketAction } from '../reduxfiles/actions/basketActions'\r\nimport { getAllOrdersAction, sentOrderAction } from '../reduxfiles/actions/ordersActions'\r\nimport SomeThingWentWrong from '../SomeThingWentWrong'\r\nimport NavbarAdmin from './NavbarAdmin'\r\n\r\nexport default function Orders() {\r\n    const getAllOrdersState = useSelector(state => state.getAllOrdersReducer)\r\n    const { loading, error, allOrders } = getAllOrdersState\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n          dispatch(getAllOrdersAction())\r\n    },[])\r\n\r\n    function ordersent(id) {\r\n          const order = {\r\n                _id: id,\r\n                isDeliverd: true,\r\n          }\r\n          console.log(order);\r\n          dispatch(sentOrderAction(order))\r\n    }\r\n    return (\r\n        <div className=\"page-container\">\r\n        <NavbarAdmin />\r\n        <h4 className=\"users-header\">صفحه مدیریت/سفارشات:</h4>\r\n                  <div className=\"homepage-menu shadow\">\r\n                        {loading && <Loading />}\r\n                        {error && <SomeThingWentWrong />}\r\n                        {allOrders && (\r\n                                    <Table striped bordered hover responsive>\r\n                                          <thead>\r\n                                                <tr>\r\n                                                      <th>#</th>\r\n                                                      <th>نوع سرویس</th>\r\n                                                      <th>شماره میز</th>\r\n                                                      <th>اطلاعات مشترک</th>\r\n                                                      <th>لیست خرید</th>\r\n                                                      <th>قیمت کل</th>\r\n                                                      <th>توضیحات سرویس</th>\r\n                                                      <th>وضعیت تحویل</th>\r\n                                                </tr>\r\n                                          </thead>\r\n                                          <tbody>\r\n                                                {\r\n                                                    allOrders.map((order, i) => (\r\n                                                            <tr>\r\n                                                                  <td>{i + 1}</td>\r\n                                                                  <td>{\r\n                                                                        order.serviceType === 'inner' ? 'داخل سالن' :\r\n                                                                              order.serviceType === 'out' ? 'بیرون بر(حضوری)' : 'بیرون بر(سرویس)'\r\n                                                                  }</td>\r\n                                                                  <td>{order.tableNum ? order.tableNum : '-'}</td>\r\n                                                                  <td>{\r\n                                                                        <div>\r\n                                                                              <p>-{order.customer[0].customerName}</p>\r\n                                                                              <p>-{order.customer[0].customerTel}</p>\r\n                                                                              <p>-{order.customer[0].customerAddress}</p>\r\n                                                                        </div>\r\n                                                                  }</td>\r\n                                                                  <td>\r\n                                                                        {\r\n                                                                              order.basketItems.map((item, i) => (\r\n                                                                                    <div>\r\n                                                                                          <h5>{item.name}</h5>\r\n                                                                                          <p>{`${item.qty} * ${item.price} = ${item.fee}`}</p>\r\n                                                                                          <hr />\r\n                                                                                    </div>\r\n                                                                              ))\r\n                                                                        }\r\n                                                                  </td>\r\n                                                                  <td>{order.totalPrice}</td>\r\n                                                                  <td>{order.orderDescriptions}</td>\r\n                                                                  <td>\r\n                                                                        {order.isDeliverd ? <button className='edit-btn' >تحویل داده شد.</button> : <button onClick={() => ordersent(order._id)} className='delete-btn m-3'>در انتظار تحویل...</button>}\r\n                                                                        {!order.isDeliverd && <Link className=\"m-4\" to={`/userorder/edit/${order._id}`}><i class=\"bi bi-pencil-fill\" onClick={() => dispatch(emptyBasketAction())}></i></Link> }\r\n                                                                  </td>\r\n                                                            </tr>\r\n                                                      ))\r\n                                                }\r\n                                          </tbody>\r\n                                    </Table>\r\n                              )\r\n                        }\r\n                  </div>\r\n            </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport NavbarAdmin from './NavbarAdmin'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAllUsersAction } from '../reduxfiles/actions/userAction'\r\nimport Loading from '../Loading'\r\nimport SomeThingWentWrong from '../SomeThingWentWrong'\r\nimport { Table } from 'react-bootstrap'\r\n\r\nexport default function Users() {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllUsersAction())\r\n    }, [])\r\n\r\n    const getUsersState = useSelector(state => state.getAllUsersReducer)\r\n    const { loading, error, users } = getUsersState\r\n\r\n    return (\r\n        <div className=\"page-container\">\r\n            <NavbarAdmin />\r\n            <h4 className=\"users-header\">صفحه مدیریت/کاربران:</h4>\r\n            <Link className=\"add-new-food-link\" to='/admin/users/adduser'>\r\n                <button className=\"mb-4 add-new-food\"><i class=\"bi h1 bi-plus plus-icon\"></i> کاربر جدید</button>\r\n            </Link>\r\n            <div className=\"table-with\">\r\n                {loading ? <Loading /> : error ? <SomeThingWentWrong /> : (\r\n                        <Table striped bordered hover responsive>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>نام کاربری</th>\r\n                                    <th>رمز ورود</th>\r\n                                    <th>سطح دسترسی(سمت)</th>\r\n                                    <th>شماره تماس کاربر</th>\r\n                                    <th>وضعیت</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    users.map((user, i) => (\r\n                                        <tr>\r\n                                            <td>{i + 1}</td>\r\n                                            <td>{user.username}</td>\r\n                                            <td>{user.password}</td>\r\n                                            <td>{user.access}</td>\r\n                                            <td>{user.phoneNum}</td>\r\n                                            <td>{user.isActive ?\r\n                                                <p>فعال</p> :\r\n                                                <p>غیر فعال</p>\r\n                                            }\r\n                                                <Link to={`/admin/users/edit/${user._id}`}>\r\n                                                    <i class=\"bi bi-pencil-fill\"></i>\r\n                                                </Link>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </Table>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport NavbarAdmin from './admin/NavbarAdmin'\r\n\r\nexport default function AdminPage() {\r\n\r\n    useEffect(() => {\r\n        window.location.href = '/admin/users'\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"page-container\">\r\n            <NavbarAdmin />\r\n            <h4 className=\"users-header\">صفحه مدیریت:</h4>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loading from './Loading'\r\nimport { addToBasketAction, removeFromBasketAction } from './reduxfiles/actions/basketActions'\r\nimport { addNewCustomerAction, findCustomerByIdAction, getAllCustomersAction } from './reduxfiles/actions/customersAction'\r\nimport { addNewOrderAction } from './reduxfiles/actions/ordersActions'\r\nimport SomeThingWentWrong from './SomeThingWentWrong'\r\n\r\nexport default function BasketPage() {\r\n    const basketstate = useSelector(state => state.addToBasketReducer.basketItems)\r\n\r\n    const findcustomerstate = useSelector(state => state.findCustomerByIdReducer)\r\n    const { loading, error, searchedCustomer } = findcustomerstate\r\n\r\n    const getAllCustomerState = useSelector(state => state.getAllCustomersReducer)\r\n    const { loadingcustomers, errorLoadingCustomers, allcustomers } = getAllCustomerState\r\n\r\n    const userloged = useSelector(state => state.loginUserReducer.userLoged)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [service, setservice] = useState('inner')\r\n    const [tableNum, settableNum] = useState('')\r\n    const [tableDesc, settableDesc] = useState('')\r\n    const [newCustomer, setnewCustomer] = useState(false)\r\n    const [oldCustomer, setoldCustomer] = useState(false)\r\n    const [findCustomer, setfindCustomer] = useState(false)\r\n\r\n    const [customerId, setcustomerId] = useState('')\r\n    const [customerName, setcustomerName] = useState('')\r\n    const [customerTel, setcustomerTel] = useState('')\r\n    const [customerAddress, setcustomerAddress] = useState('')\r\n\r\n    const totalBasketPrice = basketstate.reduce((c, x) => c + x.fee, 0)\r\n\r\n    function isOldCustomer() {\r\n        dispatch(findCustomerByIdAction(customerId))\r\n    }\r\n\r\n    function doesntHaveId() {\r\n        const newCustomerId = allcustomers.length + 3000\r\n        setnewCustomer(!newCustomer);\r\n        setoldCustomer(false);\r\n        setcustomerId(newCustomerId)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (searchedCustomer) {\r\n            setcustomerName(searchedCustomer.customerName)\r\n            setcustomerTel(searchedCustomer.customerTel)\r\n            setcustomerAddress(searchedCustomer.customerAddress)\r\n        }\r\n    }, [searchedCustomer])\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllCustomersAction())\r\n    }, [])\r\n\r\n    function addCustomer() {\r\n        if (\r\n            customerId &&\r\n            customerName &&\r\n            customerTel &&\r\n            customerAddress) {\r\n            const customer = {\r\n                customerId,\r\n                customerName,\r\n                customerTel,\r\n                customerAddress\r\n            }\r\n            dispatch(addNewCustomerAction(customer))\r\n            if (customerId.length > 0) {\r\n                setcustomerName('')\r\n                setcustomerTel('')\r\n                setcustomerAddress('')\r\n            }\r\n        } else {\r\n            alert('لطفا تمامی فیلدهای مشترک را پر نمایید.')\r\n        }\r\n    }\r\n\r\n    function addOrder() {\r\n        if(basketstate.length > 0 && userloged) {\r\n            const order = {\r\n                user: userloged._id,\r\n                customer: {\r\n                    customerid: customerId,\r\n                    customerName: customerName,\r\n                    customerTel: customerTel,\r\n                    customerAddress: customerAddress\r\n                },\r\n                totalPrice: totalBasketPrice,\r\n                basketItems: basketstate,\r\n                serviceType: service,\r\n                tableNum: tableNum,\r\n                orderDescriptions: tableDesc\r\n            }\r\n            console.log(order);\r\n            dispatch(addNewOrderAction(order))\r\n        }  else if (!userloged) {\r\n            alert('لطفا لاگین نمایید.')\r\n        } else if (basketstate.length <= 0) {\r\n            alert('شما هیچ سفارشی ثبت نکرده اید!')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"page-container\">\r\n            <h3 className=\"basket-header\">لیست سفارش</h3>\r\n            <div className=\"basket-items\">\r\n                <div className=\"basket-seleted-menu\">\r\n                    {basketstate.map(item => (\r\n                        <div className=\"basket-item shadow\">\r\n                            <div className=\"basket-item-parts\">\r\n                                <h4>{item.name}</h4>\r\n                                <button className=\"basket-item-delete\" onClick={() => dispatch(removeFromBasketAction(item))}>X</button>\r\n                            </div>\r\n                            <div className=\"basket-item-parts\">\r\n                                <p>{item.price} * {item.qty} = {item.fee}</p>\r\n                                <div>\r\n                                    <button className=\"basket-item-qty-plus\" onClick={() => dispatch(addToBasketAction(item, item.qty + 1))}>+</button>\r\n                                    {item.qty}\r\n                                    <button className=\"basket-item-qty-minus\" onClick={() => dispatch(addToBasketAction(item, item.qty - 1))}>-</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                    {basketstate.length <= 0 && <p className=\"empty-basket\">لیست خالی است.</p>}\r\n\r\n                </div>\r\n                <div>\r\n                    <div className=\"basket-service-selection\">\r\n                        <select className='basket-service-choose shadow' value={service} onChange={(e) => setservice(e.target.value)}>\r\n                            <option value='inner'>داخل سالن</option>\r\n                            <option value='out'>بیرون بر(حضوری)</option>\r\n                            <option value='service'>بیرون بر(سرویس)</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='basket-customer-details shadow'>\r\n                        {service === 'inner' && (\r\n                            <div className='basket-inner'>\r\n                                <input className='basket-inner-input' type='text' placeholder='شماره میز' value={tableNum} onChange={(e) => settableNum(e.target.value)} />\r\n                                <textarea className='basket-inner-input' placeholder='توضیحات لیست' value={tableDesc} onChange={(e) => settableDesc(e.target.value)}></textarea>\r\n                            </div>\r\n                        )}\r\n                        {\r\n                            service === 'out' && (\r\n                                <div className='basket-out'>\r\n                                    <textarea className='basket-out-input' placeholder='توضیحات لیست' value={tableDesc} onChange={(e) => settableDesc(e.target.value)}></textarea>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        {\r\n                            service === 'service' && (\r\n                                <div>\r\n                                    <p>آیا اشتراک دارند؟</p>\r\n                                    <div>\r\n                                        <button onClick={() => { setoldCustomer(!oldCustomer); setnewCustomer(false) }} className='edit-btn'>بلی</button>\r\n                                        <button onClick={doesntHaveId} className='delete-btn'>خیر</button>\r\n                                    </div>\r\n                                    <div className='basket-snap'>\r\n                                        {\r\n                                            oldCustomer && (\r\n                                                <div className='basket-oldcustomer'>\r\n                                                    <input className='basket-customer-info-input' type='text' placeholder='شماره اشتراک' value={customerId} onChange={(e) => setcustomerId(e.target.value)} />\r\n                                                    <i class=\"bi bi-search magnet\" onClick={isOldCustomer}></i>\r\n                                                    {\r\n                                                        loading ? <Loading /> : error ? <SomeThingWentWrong /> : (\r\n                                                            <div className='basket-oldcustomer-search'>\r\n                                                                <input className='basket-customer-info-input' type='text' placeholder='نام مشترک' value={customerName} onChange={(e) => setcustomerName(e.target.value)} />\r\n                                                                <input className='basket-customer-info-input' type='text' placeholder='شماره تماس مشترک' value={customerTel} onChange={(e) => setcustomerTel(e.target.value)} />\r\n                                                                <textarea className='basket-customer-info-input' placeholder='آدرس مشترک' value={customerAddress} onChange={(e) => setcustomerAddress(e.target.value)}></textarea>\r\n                                                                <textarea className='basket-customer-info-input' placeholder='توضیحات لیست' value={tableDesc} onChange={(e) => settableDesc(e.target.value)}></textarea>\r\n                                                            </div>\r\n                                                        )\r\n                                                    }\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                        {\r\n                                            newCustomer && (\r\n                                                <div className='basket-oldcustomer'>\r\n                                                    <input className='basket-customer-info-input' type='text' placeholder='شماره اشتراک' value={customerId} />\r\n                                                    <input className='basket-customer-info-input' type='text' placeholder='نام مشترک' value={customerName} onChange={(e) => setcustomerName(e.target.value)} />\r\n                                                    <input className='basket-customer-info-input' type='text' placeholder='شماره تماس مشترک' value={customerTel} onChange={(e) => setcustomerTel(e.target.value)} />\r\n                                                    <textarea className='basket-customer-info-input' placeholder='آدرس مشترک' value={customerAddress} onChange={(e) => setcustomerAddress(e.target.value)}></textarea>\r\n                                                    <i class=\"bi bi-person-plus-fill h2\" onClick={addCustomer}></i>\r\n                                                    <textarea className='basket-customer-info-input' placeholder='توضیحات لیست' value={tableDesc} onChange={(e) => settableDesc(e.target.value)}></textarea>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <div className=\"basket-cashier shadow\">\r\n                        <div>\r\n                            <h3>مبلغ قابل پرداخت:</h3>\r\n                            <p>{totalBasketPrice}تومان</p>\r\n                        </div>\r\n                        <button className=\"basket-save-order-btn\" onClick={addOrder}>ثبت</button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addNewCustomerAction, getAllCustomersAction } from '../reduxfiles/actions/customersAction'\r\n\r\nexport default function CreateCustomer() {\r\n      const getAllCustomerState = useSelector(state => state.getAllCustomersReducer)\r\n      const { loadingcustomers, errorLoadingCustomers, allcustomers } = getAllCustomerState\r\n\r\n      const dispatch = useDispatch()\r\n\r\n      useEffect(() => {\r\n            dispatch(getAllCustomersAction())\r\n      }, [])\r\n\r\n      const [customerId, setcustomerId] = useState('')\r\n      const [customerName, setcustomerName] = useState('')\r\n      const [customerTel, setcustomerTel] = useState('')\r\n      const [customerAddress, setcustomerAddress] = useState('')\r\n\r\n      useEffect(() => {\r\n            if (allcustomers) {\r\n                  setcustomerId(allcustomers.length + 3000)\r\n            }\r\n      }, [allcustomers, dispatch])\r\n\r\n      function addCustomer() {\r\n            if (\r\n                  customerId &&\r\n                  customerName &&\r\n                  customerTel &&\r\n                  customerAddress) {\r\n                  const customer = {\r\n                        customerId,\r\n                        customerName,\r\n                        customerTel,\r\n                        customerAddress\r\n                  }\r\n                  dispatch(addNewCustomerAction(customer))\r\n                  if (customerId.length > 0) {\r\n                        setcustomerName('')\r\n                        setcustomerTel('')\r\n                        setcustomerAddress('')\r\n                  }\r\n                  alert('مشترک جدید ثبت شد.')\r\n                  window.location.href = '/customerspage/'\r\n            } else {\r\n                  alert('لطفا تمامی فیلدهای مشترک را پر نمایید.')\r\n            }\r\n      }\r\n\r\n      return (\r\n            <div className=\"page-container\">\r\n                  <h4 className=\"users-header\">ثبت مشترک جدید</h4>\r\n                  <div className=\"add-user-form mt-3\">\r\n                        <label className=\"form-label\">\r\n                              شماره اشتراک:\r\n                              <input className='add-food-form-input' type='text' placeholder='شماره اشتراک' value={customerId} />\r\n                        </label>\r\n                        <label className=\"form-label\">\r\n                              نام مشترک:\r\n                              <input className='add-food-form-input' type='text' placeholder='شماره اشتراک' value={customerName} onChange={(e) => setcustomerName(e.target.value)} />\r\n                        </label>\r\n                        <label className=\"form-label\">\r\n                              شماره تماس:\r\n                              <input className='add-food-form-input' type='text' placeholder='شماره اشتراک' value={customerTel} onChange={(e) => setcustomerTel(e.target.value)} />\r\n                        </label>\r\n                        <label className=\"form-label\">\r\n                              آدرس مشترک:\r\n                              <textarea className='add-food-form-input' type='text' placeholder='آدرس مشترک' value={customerAddress} onChange={(e) => setcustomerAddress(e.target.value)}></textarea>\r\n                        </label>\r\n                        <div>\r\n                              <button className='edit-btn' onClick={addCustomer}>ذخیره</button>\r\n                        </div>\r\n                  </div>\r\n            </div>\r\n      )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { editCustomerAction, getAllCustomersAction, removeCustomerAction } from '../reduxfiles/actions/customersAction'\r\n\r\nexport default function EditCustomer({ match }) {\r\n      const getAllCustomerState = useSelector(state => state.getAllCustomersReducer)\r\n      const { loadingcustomers, errorLoadingCustomers, allcustomers } = getAllCustomerState\r\n\r\n      const dispatch = useDispatch()\r\n\r\n      useEffect(() => {\r\n            dispatch(getAllCustomersAction())\r\n      }, [])\r\n\r\n      const [customerId, setcustomerId] = useState('')\r\n      const [customerName, setcustomerName] = useState('')\r\n      const [customerTel, setcustomerTel] = useState('')\r\n      const [customerAddress, setcustomerAddress] = useState('')\r\n\r\n      useEffect(() => {\r\n            if (allcustomers) {\r\n                  const customer = allcustomers.find(customer => customer._id === match.params.id)\r\n                  setcustomerId(customer.customerId)\r\n                  setcustomerName(customer.customerName)\r\n                  setcustomerTel(customer.customerTel)\r\n                  setcustomerAddress(customer.customerAddress)\r\n            }\r\n      }, [allcustomers, dispatch])\r\n\r\n      function removeCustomer() {\r\n            dispatch(removeCustomerAction(match.params.id))\r\n      }\r\n\r\n      function editCustomer() {\r\n            if (\r\n                  customerId &&\r\n                  customerName &&\r\n                  customerTel &&\r\n                  customerAddress) {\r\n                  const customer = {\r\n                        _id: match.params.id,\r\n                        customerId,\r\n                        customerName,\r\n                        customerTel,\r\n                        customerAddress\r\n                  }\r\n                  dispatch(editCustomerAction(customer))\r\n            } else {\r\n                  alert('لطفا تمامی فیلدهای مشترک را پر نمایید.')\r\n            }\r\n      }\r\n\r\n      return (\r\n            <div className=\"page-container\">\r\n                  <h4 className=\"users-header\">ویرایش مشترک</h4>\r\n                  <div className=\"add-user-form mt-3\">\r\n                        <label className=\"form-label\">\r\n                              شماره اشتراک:\r\n                              <input className='add-food-form-input' type='text' placeholder='شماره اشتراک' value={customerId} />\r\n                        </label>\r\n                        <label className=\"form-label\">\r\n                              نام مشترک:\r\n                              <input className='add-food-form-input' type='text' placeholder='شماره اشتراک' value={customerName} onChange={(e) => setcustomerName(e.target.value)} />\r\n                        </label>\r\n                        <label className=\"form-label\">\r\n                              شماره تماس:\r\n                              <input className='add-food-form-input' type='text' placeholder='شماره اشتراک' value={customerTel} onChange={(e) => setcustomerTel(e.target.value)} />\r\n                        </label>\r\n                        <label className=\"form-label\">\r\n                              آدرس مشترک:\r\n                              <textarea className='add-food-form-input' type='text' placeholder='آدرس مشترک' value={customerAddress} onChange={(e) => setcustomerAddress(e.target.value)}></textarea>\r\n                        </label>\r\n                        <div>\r\n                              <button className='edit-btn' onClick={editCustomer}>ذخیره</button>\r\n                              <button className='delete-btn' onClick={removeCustomer}>حذف</button>\r\n                        </div>\r\n                  </div>\r\n            </div>\r\n      )\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Loading from './Loading'\r\nimport { getAllCustomersAction } from './reduxfiles/actions/customersAction'\r\nimport SomeThingWentWrong from './SomeThingWentWrong'\r\n\r\nexport default function CustomersPage() {\r\n      const dispatch = useDispatch()\r\n      const [search, setsearch] = useState('')\r\n\r\n      useEffect(() => {\r\n            dispatch(getAllCustomersAction())\r\n      }, [])\r\n\r\n      const getAllCustomerState = useSelector(state => state.getAllCustomersReducer)\r\n      const { loadingcustomers, errorLoadingCustomers, allcustomers } = getAllCustomerState\r\n\r\n      return (\r\n            <div className=\"page-container\">\r\n                  <div className='customerpage-seletors'>\r\n                        <label className=\"customerpage-label\">\r\n                              جستجو مشترک:\r\n                              <input className='search-customer' type='text' placeholder='جستجو' onChange={(e) => setsearch(e.target.value)} />\r\n                        </label>\r\n                        <button className=\"btn btn-success\" onClick={() => window.location.href = '/customerspage/create'}><i class=\"bi bi-person-plus-fill h2 mx-2\"></i> ثبت مشترک جدید</button>\r\n                  </div>\r\n                  <div className=\"table-with\">\r\n                        {loadingcustomers && <Loading />}\r\n                        {errorLoadingCustomers && <SomeThingWentWrong />}\r\n                        {allcustomers && allcustomers.length > 0 && (\r\n                              <Table striped bordered hover responsive>\r\n                                    <thead>\r\n                                          <tr>\r\n                                                <th>#</th>\r\n                                                <th>کد اشتراک</th>\r\n                                                <th>نام مشترک</th>\r\n                                                <th>آدرس مشترک</th>\r\n                                                <th>ویرایش مشترک</th>\r\n                                          </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                          {\r\n                                                allcustomers.map((customer, i) => (\r\n                                                      <tr>\r\n                                                            <td>{i + 1}</td>\r\n                                                            <td>{customer.customerId}</td>\r\n                                                            <td>{customer.customerName}</td>\r\n                                                            <td>{customer.customerAddress}</td>\r\n                                                            <td>\r\n                                                                  <Link to={`/customerspage/edit/${customer._id}`}>\r\n                                                                        <i class=\"bi bi-pencil-fill\"></i>\r\n                                                                  </Link>\r\n                                                            </td>\r\n                                                      </tr>\r\n                                                ))\r\n                                          }\r\n                                    </tbody>\r\n                              </Table>\r\n                        )\r\n                        }\r\n\r\n                  </div>\r\n            </div>\r\n      )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addToBasketAction } from '../reduxfiles/actions/basketActions'\r\n\r\nexport default function FoodList({ food, i }) {\r\n     const [qty, setqty] = useState('1')\r\n     const dispatch = useDispatch()\r\n\r\n     function addToBasket() {\r\n          dispatch(addToBasketAction(food, qty))\r\n          setqty('1')\r\n     }\r\n\r\n     return (\r\n          <tr>\r\n               <td>{i + 1}</td>\r\n               <td>{food.name}</td>\r\n               <td>{\r\n                    food.category === 'other' ? 'بدون دسته بندی' :\r\n                         food.category === 'withrice' ? 'چلو' :\r\n                              food.category === 'withoutrice' ? 'خوراک' :\r\n                                   food.category === 'drink' ? 'نوشیدنی' : 'پیش غذا'\r\n               }</td>\r\n               <td>{food.price}</td>\r\n               <td>{\r\n                    <select value={qty} onChange={(e) => setqty(e.target.value)}>\r\n                         {\r\n                              [...Array(10).keys()].map((item, i) => <option key={i}>{i + 1}</option>)\r\n                         }\r\n                    </select>\r\n               }</td>\r\n               <td>{food.price * qty}</td>\r\n               <td>\r\n                    <button className='edit-btn' onClick={addToBasket}>افزودن</button>\r\n               </td>\r\n          </tr>\r\n     )\r\n}\r\n","import React from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport FoodList from './FoodList'\r\n\r\nexport default function Foodtbody({ foods, search, catg }) {\r\n      return (\r\n            <div>\r\n                  <Table striped bordered hover responsive>\r\n                        <thead>\r\n                              <tr>\r\n                                    <th>#</th>\r\n                                    <th>نام</th>\r\n                                    <th>دسته بندی</th>\r\n                                    <th>قیمت</th>\r\n                                    <th>تعداد</th>\r\n                                    <th>مجموع قیمت</th>\r\n                                    <th>افزودن</th>\r\n                              </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                              {\r\n                                    foods.filter(food =>\r\n                                          search && catg === 'all' ?\r\n                                                food.name.toLowerCase().includes(search.toLowerCase()) :\r\n                                                catg !== 'all' ?\r\n                                                      food.name.toLowerCase().includes(search.toLowerCase()) && food.category === catg\r\n                                                      : food).map((food, i) => (\r\n                                                            <FoodList food={food} i={i} />\r\n                                                      ))\r\n                              }\r\n                        </tbody>\r\n                  </Table>\r\n            </div>\r\n      )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Foodtbody from './homepage/Foodtbody'\r\nimport Loading from './Loading'\r\nimport { addToBasketAction, emptyBasketAction, removeFromBasketAction } from './reduxfiles/actions/basketActions'\r\nimport { addNewCustomerAction, findCustomerByIdAction, getAllCustomersAction } from './reduxfiles/actions/customersAction'\r\nimport { getAllFoodsAction } from './reduxfiles/actions/foodAction'\r\nimport { addNewOrderAction, editOrderAction, findOrderAction } from './reduxfiles/actions/ordersActions'\r\nimport SomeThingWentWrong from './SomeThingWentWrong'\r\n\r\nexport default function EditOrder({ match }) {\r\n\r\n      const dispatch = useDispatch()\r\n      const orderid = match.params.id\r\n\r\n      const [service, setservice] = useState('inner')\r\n      const [tableNum, settableNum] = useState('')\r\n      const [tableDesc, settableDesc] = useState('')\r\n      const [newCustomer, setnewCustomer] = useState(false)\r\n      const [oldCustomer, setoldCustomer] = useState(false)\r\n      const [customerId, setcustomerId] = useState('')\r\n      const [customerName, setcustomerName] = useState('')\r\n      const [customerTel, setcustomerTel] = useState('')\r\n      const [customerAddress, setcustomerAddress] = useState('')\r\n      const [orderBasket, setorderBasket] = useState('')\r\n      const [search, setsearch] = useState('')\r\n      const [catg, setcatg] = useState('all')\r\n\r\n\r\n      const allfoodsstate = useSelector(state => state.getAllFoodsReducer)\r\n      const { foods } = allfoodsstate\r\n      const orderfoundstate = useSelector(state => state.findOrderReducer)\r\n      const { orderloading, ordererror, orderfound } = orderfoundstate\r\n      const basketstate = useSelector(state => state.addToBasketReducer.basketItems)\r\n      const findcustomerstate = useSelector(state => state.findCustomerByIdReducer)\r\n      const { loading, error, searchedCustomer } = findcustomerstate\r\n      const getAllCustomerState = useSelector(state => state.getAllCustomersReducer)\r\n      const { loadingcustomers, errorLoadingCustomers, allcustomers } = getAllCustomerState\r\n      const userloged = useSelector(state => state.loginUserReducer.userLoged)\r\n\r\n      const totalBasketPrice = basketstate.reduce((c, x) => c + x.fee, 0)\r\n\r\n      function isOldCustomer() {\r\n            dispatch(findCustomerByIdAction(customerId))\r\n      }\r\n\r\n      function doesntHaveId() {\r\n            const newCustomerId = allcustomers.length + 3000\r\n            setnewCustomer(!newCustomer);\r\n            setoldCustomer(false);\r\n            setcustomerId(newCustomerId)\r\n      }\r\n\r\n      //useEffect\r\n      useEffect(() => {\r\n            if (searchedCustomer) {\r\n                  setcustomerName(searchedCustomer.customerName)\r\n                  setcustomerTel(searchedCustomer.customerTel)\r\n                  setcustomerAddress(searchedCustomer.customerAddress)\r\n            }\r\n      }, [searchedCustomer])\r\n\r\n      useEffect(() => {\r\n            dispatch(emptyBasketAction())\r\n            dispatch(findOrderAction(orderid))\r\n            dispatch(getAllCustomersAction())\r\n            dispatch(getAllFoodsAction())\r\n      }, [])\r\n\r\n      useEffect(() => {\r\n            if (orderfound) {\r\n                  const orderfoundBasket = orderfound.basketItems.map(item => {\r\n                        const food = {\r\n                              _id: item._id,\r\n                              name: item.name,\r\n                              price: item.price,\r\n                              qty: item.qty,\r\n                              category: item.category,\r\n                              description: item.description,\r\n                              fee: item.price * item.qty\r\n                        }\r\n                        dispatch(addToBasketAction(food, item.qty))\r\n                  })\r\n                  // localStorage.setItem('basket', JSON.stringify(orderfound.basketItems))\r\n                  setorderBasket(orderfound.basketItems)\r\n                  setservice(orderfound.serviceType)\r\n                  settableNum(orderfound.tableNum)\r\n                  settableDesc(orderfound.orderDescriptions)\r\n                  setcustomerId(orderfound.customer[0].customerid)\r\n                  setcustomerName(orderfound.customer[0].customerName)\r\n                  setcustomerTel(orderfound.customer[0].customerTel)\r\n                  setcustomerAddress(orderfound.customer[0].customerAddress)\r\n\r\n                  if (orderfound.customer[0].customerid) {\r\n                        setoldCustomer(true)\r\n                  }\r\n            }\r\n      }, [orderfound])\r\n\r\n      useEffect(() => {\r\n            if (orderfound) {\r\n                  localStorage.setItem('basket', JSON.stringify(basketstate))\r\n                  setorderBasket(basketstate)\r\n            }\r\n      }, [basketstate])\r\n\r\n      function addCustomer() {\r\n            if (\r\n                  customerId &&\r\n                  customerName &&\r\n                  customerTel &&\r\n                  customerAddress) {\r\n                  const customer = {\r\n                        customerId,\r\n                        customerName,\r\n                        customerTel,\r\n                        customerAddress\r\n                  }\r\n                  dispatch(addNewCustomerAction(customer))\r\n                  if (customerId.length > 0) {\r\n                        setcustomerName('')\r\n                        setcustomerTel('')\r\n                        setcustomerAddress('')\r\n                  }\r\n            } else {\r\n                  alert('لطفا تمامی فیلدهای مشترک را پر نمایید.')\r\n            }\r\n      }\r\n\r\n      function updateOrder() {\r\n            if (basketstate.length > 0 && userloged) {\r\n                  const order = {\r\n                        _id: orderid,\r\n                        user: userloged._id,\r\n                        customer: {\r\n                              customerid: customerId,\r\n                              customerName: customerName,\r\n                              customerTel: customerTel,\r\n                              customerAddress: customerAddress\r\n                        },\r\n                        totalPrice: totalBasketPrice,\r\n                        basketItems: basketstate,\r\n                        serviceType: service,\r\n                        tableNum: tableNum,\r\n                        orderDescriptions: tableDesc\r\n                  }\r\n                  dispatch(emptyBasketAction())\r\n                  dispatch(editOrderAction(order))\r\n            }\r\n      }\r\n\r\n      return (\r\n            <div className=\"page-container\">\r\n                  <h4 className=\"users-header\">ویرایش سفارش</h4>\r\n                  <div className='order-edit-container'>\r\n                        <div className='order-edit-customer'>\r\n                              <div className=\"basket-seleted-menu\">\r\n                                    {orderBasket && orderBasket.map(item => (\r\n                                          <div className=\"basket-item shadow\">\r\n                                                <div className=\"basket-item-parts\">\r\n                                                      <h4>{item.name}</h4>\r\n                                                      <button className=\"basket-item-delete\" onClick={() => dispatch(removeFromBasketAction(item))}>X</button>\r\n                                                </div>\r\n                                                <div className=\"basket-item-parts\">\r\n                                                      <p>{item.price} * {item.qty} = {item.fee}</p>\r\n                                                      <div>\r\n                                                            <button className=\"basket-item-qty-plus\" onClick={() => dispatch(addToBasketAction(item, item.qty + 1))}>+</button>\r\n                                                            {item.qty}\r\n                                                            <button className=\"basket-item-qty-minus\" onClick={() => dispatch(addToBasketAction(item, item.qty - 1))}>-</button>\r\n                                                      </div>\r\n                                                </div>\r\n                                          </div>\r\n                                    ))}\r\n                                    {orderBasket.length <= 0 && <p className=\"empty-basket\">لیست خالی است.</p>}\r\n                              </div>\r\n                              <div>\r\n                                    <div className=\"basket-service-selection \">\r\n                                          <select className='basket-service-choose shadow' value={service} onChange={(e) => setservice(e.target.value)}>\r\n                                                <option value='inner'>داخل سالن</option>\r\n                                                <option value='out'>بیرون بر(حضوری)</option>\r\n                                                <option value='service'>بیرون بر(سرویس)</option>\r\n                                          </select>\r\n                                    </div>\r\n                                    <div className='basket-customer-details shadow'>\r\n                                          {service === 'inner' && (\r\n                                                <div className='basket-inner'>\r\n                                                      <input className='basket-inner-input' type='text' placeholder='شماره میز' value={tableNum} onChange={(e) => settableNum(e.target.value)} />\r\n                                                      <textarea className='basket-inner-input' placeholder='توضیحات لیست' value={tableDesc} onChange={(e) => settableDesc(e.target.value)}></textarea>\r\n                                                </div>\r\n                                          )}\r\n                                          {\r\n                                                service === 'out' && (\r\n                                                      <div className='basket-out'>\r\n                                                            <textarea className='basket-out-input' placeholder='توضیحات لیست' value={tableDesc} onChange={(e) => settableDesc(e.target.value)}></textarea>\r\n                                                      </div>\r\n                                                )\r\n                                          }\r\n                                          {\r\n                                                service === 'service' && (\r\n                                                      <div>\r\n                                                            <p>آیا اشتراک دارند؟</p>\r\n                                                            <div>\r\n                                                                  <button onClick={() => { setoldCustomer(!oldCustomer); setnewCustomer(false) }} className='edit-btn'>بلی</button>\r\n                                                                  <button onClick={doesntHaveId} className='delete-btn'>خیر</button>\r\n                                                            </div>\r\n                                                            <div className='basket-snap'>\r\n                                                                  {\r\n                                                                        oldCustomer && (\r\n                                                                              <div className='basket-oldcustomer'>\r\n                                                                                    <input className='basket-customer-info-input' type='text' placeholder='شماره اشتراک' value={customerId} onChange={(e) => setcustomerId(e.target.value)} />\r\n                                                                                    <i class=\"bi bi-search magnet\" onClick={isOldCustomer}></i>\r\n                                                                                    {\r\n                                                                                          loading ? <Loading /> : error ? <SomeThingWentWrong /> : (\r\n                                                                                                <div className='basket-oldcustomer-search'>\r\n                                                                                                      <input className='basket-customer-info-input' type='text' placeholder='نام مشترک' value={customerName} onChange={(e) => setcustomerName(e.target.value)} />\r\n                                                                                                      <input className='basket-customer-info-input' type='text' placeholder='شماره تماس مشترک' value={customerTel} onChange={(e) => setcustomerTel(e.target.value)} />\r\n                                                                                                      <textarea className='basket-customer-info-input' placeholder='آدرس مشترک' value={customerAddress} onChange={(e) => setcustomerAddress(e.target.value)}></textarea>\r\n                                                                                                      <textarea className='basket-customer-info-input' placeholder='توضیحات لیست' value={tableDesc} onChange={(e) => settableDesc(e.target.value)}></textarea>\r\n                                                                                                </div>\r\n                                                                                          )\r\n                                                                                    }\r\n                                                                              </div>\r\n                                                                        )\r\n                                                                  }\r\n                                                                  {\r\n                                                                        newCustomer && (\r\n                                                                              <div className='basket-oldcustomer'>\r\n                                                                                    <input className='basket-customer-info-input' type='text' placeholder='شماره اشتراک' value={customerId} />\r\n                                                                                    <input className='basket-customer-info-input' type='text' placeholder='نام مشترک' value={customerName} onChange={(e) => setcustomerName(e.target.value)} />\r\n                                                                                    <input className='basket-customer-info-input' type='text' placeholder='شماره تماس مشترک' value={customerTel} onChange={(e) => setcustomerTel(e.target.value)} />\r\n                                                                                    <textarea className='basket-customer-info-input' placeholder='آدرس مشترک' value={customerAddress} onChange={(e) => setcustomerAddress(e.target.value)}></textarea>\r\n                                                                                    <i class=\"bi bi-person-plus-fill h2\" onClick={addCustomer}></i>\r\n                                                                                    <textarea className='basket-customer-info-input' placeholder='توضیحات لیست' value={tableDesc} onChange={(e) => settableDesc(e.target.value)}></textarea>\r\n                                                                              </div>\r\n                                                                        )\r\n                                                                  }\r\n                                                            </div>\r\n                                                      </div>\r\n                                                )\r\n                                          }\r\n                                    </div>\r\n                                    <div className=\"basket-cashier shadow\">\r\n                                          <div>\r\n                                                <h3>مبلغ قابل پرداخت:</h3>\r\n                                                <p>{totalBasketPrice}تومان</p>\r\n                                          </div>\r\n                                          <button className=\"basket-save-order-btn\" onClick={updateOrder}>ثبت</button>\r\n                                    </div>\r\n                              </div>\r\n                        </div>\r\n                        <div className=\"order-edit-table\">\r\n                              <div className=\"edit-order-component-navbar shadow\">\r\n                                    <div className=\"filter-parts\">\r\n                                          <input type=\"text\" className=\"search-input\" placeholder=\"جستجو\" className=\"filter-search\" value={search} onChange={(e) => setsearch(e.target.value)} />\r\n                                          <select className=\"filter-catg\" value={catg} onChange={(e) => setcatg(e.target.value)}>\r\n                                                <option value=\"all\">همه</option>\r\n                                                <option value=\"withrice\">چلو</option>\r\n                                                <option value=\"withoutrice\">خوراک</option>\r\n                                                <option value=\"drink\">نوشیدنی</option>\r\n                                                <option value=\"appetizer\">پیش غذا</option>\r\n                                          </select>\r\n                                    </div>\r\n                              </div>\r\n\r\n                              <div className='shadow'>\r\n                                    {foods && (<Foodtbody foods={foods} search={search} catg={catg} />)}\r\n                              </div>\r\n                        </div>\r\n                  </div>\r\n            </div>\r\n      )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Foodtbody from './homepage/Foodtbody'\r\nimport Loading from './Loading'\r\nimport { getAllFoodsAction } from './reduxfiles/actions/foodAction'\r\nimport SomeThingWentWrong from './SomeThingWentWrong'\r\n\r\nexport default function Homepage() {\r\n    const dispatch = useDispatch()\r\n    const allfoodsstate = useSelector(state => state.getAllFoodsReducer)\r\n    const { loading, error, foods } = allfoodsstate\r\n\r\n    const [search, setsearch] = useState('')\r\n    const [catg, setcatg] = useState('all')\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllFoodsAction())\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"page-container\">\r\n\r\n            <div className=\"component-navbar\">\r\n                <div className=\"filter-parts\">\r\n                    <input type=\"text\" className=\"search-input\" placeholder=\"جستجو\" className=\"filter-search\" value={search} onChange={(e) => setsearch(e.target.value)} />\r\n                    <select className=\"filter-catg\" value={catg} onChange={(e) => setcatg(e.target.value)}>\r\n                        <option value=\"all\">همه</option>\r\n                        <option value=\"withrice\">چلو</option>\r\n                        <option value=\"withoutrice\">خوراک</option>\r\n                        <option value=\"drink\">نوشیدنی</option>\r\n                        <option value=\"appetizer\">پیش غذا</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <h4 className=\"users-header\">منوی رستوران</h4>\r\n            <div className=\"homepage-menu shadow\">\r\n                {loading && <Loading />}\r\n                {error && <SomeThingWentWrong />}\r\n                {foods && (<Foodtbody foods={foods} search={search} catg={catg} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loading from './Loading';\r\nimport { loginUserAction } from './reduxfiles/actions/userAction';\r\n\r\nexport default function LoginPage() {\r\n    const [username, setusername] = useState('')\r\n    const [password, setpassword] = useState('')\r\n    const dispatch = useDispatch()\r\n    const loginUserState = useSelector(state => state.loginUserReducer)\r\n    const { loading, error } = loginUserState\r\n\r\n    function goingToLogin() {\r\n        if (username && password) {\r\n            const user = {\r\n                username,\r\n                password\r\n            }\r\n            dispatch(loginUserAction(user))\r\n        } else {\r\n            alert('لطفا تمامی فیلدها را پر نمایید.')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"page-container\">\r\n            <h3 className=\"login_header\">صفحه ورود</h3>\r\n            <div className='login-form shadow'>\r\n                <label className=\"login-label-form\">\r\n                    نام کاربری:\r\n                    <input type='text' placeholder='نام کاربری' className='login-inputs' onChange={(e) => setusername(e.target.value)} />\r\n                </label>\r\n                <label className=\"login-label-form\">\r\n                    رمز ورود:\r\n                    <input type='password' placeholder='رمز ورود' className='login-inputs' onChange={(e) => setpassword(e.target.value)} />\r\n                </label>\r\n                <button onClick={goingToLogin} className='login-btn mb-3'>ورود</button>\r\n                {loading && <Loading />}\r\n                {error && <p className=\"empty-basket\">اطلاعات وارد شده صحیح نمی باشد.</p>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo1.22ccd92a.jpg\";","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport logo from '../images/logo1.jpg'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nexport default function Navbar() {\r\n    const currentBasketItems = useSelector(state => state.addToBasketReducer)\r\n    const { basketItems } = currentBasketItems\r\n\r\n    const currentUserState = useSelector(state => state.loginUserReducer)\r\n    const { userLoged } = currentUserState\r\n\r\n    function logout() {\r\n        localStorage.removeItem('userlogedin')\r\n        window.location.reload()\r\n        console.log('logout');\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar-container\">\r\n            <div className='navbar-user-details'>\r\n                <Link className=\"navbar-link basketIcon\" to='/basket'><p className='navbar-basket-length'>{basketItems.length}</p><i className=\"bi bi-cart3\"></i></Link>\r\n                {\r\n                    userLoged ?\r\n                        (\r\n                            <Dropdown className='dropdown mt-2'>\r\n                                <Dropdown.Toggle variant=\"white\" bg=\"white\" expand=\"lg\" size=\"lg\" id=\"dropdown-basic\">\r\n                                    {userLoged.username}\r\n                                </Dropdown.Toggle>\r\n\r\n                                <Dropdown.Menu className='dropdown p-3'>\r\n                                    <p>\r\n                                        <Link className=\"navbar-dropdown-link\" to=\"/userorder\">سفارشات من</Link>\r\n                                    </p>\r\n                                    <p>\r\n                                        <Link className=\"navbar-dropdown-link\" to=\"/ordersending\">سفارشات منتظر</Link>\r\n                                    </p>\r\n                                    <p>\r\n                                        <Link className=\"navbar-dropdown-link\" to=\"/customerspage\">امور مشترکین(ثبت، جستجو)</Link>\r\n                                    </p>\r\n                                    {userLoged.access === 'admin' &&\r\n                                        <p>\r\n                                            <Link className=\"navbar-dropdown-link\" to=\"/admin\">صفحه مدیریت</Link>\r\n                                        </p>}\r\n                                    <button className='navbar-dropdown-btn' onClick={logout}>خروج</button>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        ) :\r\n                        <Link className=\"navbar-link navbar-login mt-2\" to='/login'>ورود</Link>\r\n                }\r\n            </div>\r\n            <div>\r\n                <Link to='/'>\r\n                    <img src={logo} alt=\"resturant-logo\" className='resturant-logo' />\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Loading from './Loading'\r\nimport { emptyBasketAction } from './reduxfiles/actions/basketActions'\r\nimport { getAllSendingOrdersAction, sentOrderAction } from './reduxfiles/actions/ordersActions'\r\nimport SomeThingWentWrong from './SomeThingWentWrong'\r\n\r\nexport default function OrderSending() {\r\n      const userloged = useSelector(state => state.loginUserReducer.userLoged)\r\n\r\n      const getAllSendingOrdersState = useSelector(state => state.getAllSendingOrdersReducer)\r\n      const { loading, error, sendingOrders } = getAllSendingOrdersState\r\n\r\n      const dispatch = useDispatch()\r\n\r\n      useEffect(() => {\r\n            dispatch(getAllSendingOrdersAction())\r\n            dispatch(emptyBasketAction())\r\n      },[])\r\n\r\n      if (!userloged) {\r\n            window.location.href = '/login'\r\n            alert('لطفا لاگین نمایید.')\r\n      }\r\n\r\n      function ordersent(id) {\r\n            const order = {\r\n                  _id: id,\r\n                  isDeliverd: true,\r\n            }\r\n            console.log(order);\r\n            dispatch(sentOrderAction(order))\r\n      }\r\n\r\n      return (\r\n            <div className=\"page-container\">\r\n                  <h4 className=\"users-header\">سفارشات منتظر</h4>\r\n                  <div className=\"homepage-menu shadow\">\r\n                        {loading && <Loading />}\r\n                        {error && <SomeThingWentWrong />}\r\n                        {sendingOrders &&\r\n                              (\r\n                                    <Table striped bordered hover responsive>\r\n                                          <thead>\r\n                                                <tr>\r\n                                                      <th>#</th>\r\n                                                      <th>نوع سرویس</th>\r\n                                                      <th>شماره میز</th>\r\n                                                      <th>اطلاعات مشترک</th>\r\n                                                      <th>لیست خرید</th>\r\n                                                      <th>قیمت کل</th>\r\n                                                      <th>توضیحات سرویس</th>\r\n                                                      <th>وضعیت تحویل</th>\r\n                                                </tr>\r\n                                          </thead>\r\n                                          <tbody>\r\n                                                {\r\n                                                      sendingOrders.map((order, i) => (\r\n                                                            <tr>\r\n                                                                  <td>{i + 1}</td>\r\n                                                                  <td>{\r\n                                                                        order.serviceType === 'inner' ? 'داخل سالن' :\r\n                                                                              order.serviceType === 'out' ? 'بیرون بر(حضوری)' : 'بیرون بر(سرویس)'\r\n                                                                  }</td>\r\n                                                                  <td>{order.tableNum ? order.tableNum : '-'}</td>\r\n                                                                  <td>{\r\n                                                                        <div>\r\n                                                                              <p>-{order.customer[0].customerName}</p>\r\n                                                                              <p>-{order.customer[0].customerTel}</p>\r\n                                                                              <p>-{order.customer[0].customerAddress}</p>\r\n                                                                        </div>\r\n                                                                  }</td>\r\n                                                                  <td>\r\n                                                                        {\r\n                                                                              order.basketItems.map((item, i) => (\r\n                                                                                    <div>\r\n                                                                                          <h5>{item.name}</h5>\r\n                                                                                          <p>{`${item.qty} * ${item.price} = ${item.fee}`}</p>\r\n                                                                                          <hr />\r\n                                                                                    </div>\r\n                                                                              ))\r\n                                                                        }\r\n                                                                  </td>\r\n                                                                  <td>{order.totalPrice}</td>\r\n                                                                  <td>{order.orderDescriptions}</td>\r\n                                                                  <td>\r\n                                                                        {order.isDeliverd ? <button className='edit-btn' >تحویل داده شد.</button> : <button onClick={() => ordersent(order._id)} className='delete-btn m-3'>در انتظار تحویل...</button>}\r\n                                                                        {!order.isDeliverd && <Link className=\"m-4\" to={`/userorder/edit/${order._id}`}><i class=\"bi bi-pencil-fill\" onClick={() => dispatch(emptyBasketAction())}></i></Link> }\r\n                                                                  </td>\r\n                                                            </tr>\r\n                                                      ))\r\n                                                }\r\n                                          </tbody>\r\n                                    </Table>\r\n                              )\r\n                        }\r\n                  </div>\r\n            </div>\r\n      )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function OrdersPage() {\r\n    return (\r\n        <div>\r\n            order page\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function PageNotFound() {\r\n      return (\r\n            <div className=\"page-container\">\r\n                  <div className='container-404'>\r\n                        <h1 className='title-404'>404!</h1>\r\n                        <img className='gif-404' src=\"https://cdn.dribbble.com/users/285475/screenshots/2083086/dribbble_1.gif\" alt='page-not-found' />\r\n                        <p className='p-404'>Page not found</p>\r\n                        <Link className='link go-home-404' to='/'>Go Home</Link>\r\n                  </div>\r\n            </div>\r\n      )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function SignupPage() {\r\n    return (\r\n        <div>\r\n            <input type='text' placeholder='نام کاربری' />\r\n            <input type='tel' placeholder='شماره تماس' />\r\n            <input type='password' placeholder='رمز ورود'/>\r\n            <input type='password' placeholder='تایید رمز ورود' />\r\n            <button>ذخیره</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from './Loading';\r\nimport { emptyBasketAction } from './reduxfiles/actions/basketActions';\r\nimport { sentOrderAction, userOrdersAction } from './reduxfiles/actions/ordersActions';\r\nimport SomeThingWentWrong from './SomeThingWentWrong';\r\n\r\nexport default function Userorders() {\r\n      const userloged = useSelector(state => state.loginUserReducer.userLoged)\r\n\r\n      const userorderstate = useSelector(state => state.userOrdersReducer)\r\n      const { loading, error, userorder } = userorderstate\r\n\r\n      const dispatch = useDispatch()\r\n\r\n      useEffect(() => {\r\n            dispatch(userOrdersAction(userloged._id))\r\n            dispatch(emptyBasketAction())\r\n      }, [])\r\n\r\n      if (!userloged) {\r\n            window.location.href = '/login'\r\n            alert('لطفا لاگین نمایید.')\r\n      }\r\n\r\n      function ordersent(id) {\r\n            const order = {\r\n                  _id: id,\r\n                  isDeliverd: true,\r\n            }\r\n            console.log(order);\r\n            dispatch(sentOrderAction(order))\r\n      }\r\n\r\n      return (\r\n            <div className=\"page-container\">\r\n                  <h4 className=\"users-header\">سفارشات من</h4>\r\n                  <div className=\"homepage-menu shadow\">\r\n                        {loading && <Loading />}\r\n                        {error && <SomeThingWentWrong />}\r\n                        {userorder &&\r\n                              (\r\n                                    <Table striped bordered hover responsive>\r\n                                          <thead>\r\n                                                <tr>\r\n                                                      <th>#</th>\r\n                                                      <th>نوع سرویس</th>\r\n                                                      <th>شماره میز</th>\r\n                                                      <th>اطلاعات مشترک</th>\r\n                                                      <th>لیست خرید</th>\r\n                                                      <th>قیمت کل</th>\r\n                                                      <th>توضیحات سرویس</th>\r\n                                                      <th>وضعیت تحویل</th>\r\n                                                </tr>\r\n                                          </thead>\r\n                                          <tbody>\r\n                                                {\r\n                                                      userorder.map((order, i) => (\r\n                                                            <tr>\r\n                                                                  <td>{i + 1}</td>\r\n                                                                  <td>{\r\n                                                                        order.serviceType === 'inner' ? 'داخل سالن' :\r\n                                                                              order.serviceType === 'out' ? 'بیرون بر(حضوری)' : 'بیرون بر(سرویس)'\r\n                                                                  }</td>\r\n                                                                  <td>{order.tableNum ? order.tableNum : '-'}</td>\r\n                                                                  <td>{\r\n                                                                        <div>\r\n                                                                              <p>-{order.customer[0].customerName}</p>\r\n                                                                              <p>-{order.customer[0].customerTel}</p>\r\n                                                                              <p>-{order.customer[0].customerAddress}</p>\r\n                                                                        </div>\r\n                                                                  }</td>\r\n                                                                  <td>\r\n                                                                        {\r\n                                                                              order.basketItems.map((item, i) => (\r\n                                                                                    <div>\r\n                                                                                          <h5>{item.name}</h5>\r\n                                                                                          <p>{`${item.qty} * ${item.price} = ${item.fee}`}</p>\r\n                                                                                          <hr />\r\n                                                                                    </div>\r\n                                                                              ))\r\n                                                                        }\r\n                                                                  </td>\r\n                                                                  <td>{order.totalPrice}</td>\r\n                                                                  <td>{order.orderDescriptions}</td>\r\n                                                                  <td>\r\n                                                                        {order.isDeliverd ? <button className='edit-btn' >تحویل داده شد.</button> : <button onClick={() => ordersent(order._id)} className='delete-btn m-3'>در انتظار تحویل...</button>}\r\n                                                                        {!order.isDeliverd && <Link className=\"m-4\" to={`/userorder/edit/${order._id}`}><i class=\"bi bi-pencil-fill\" onClick={() => dispatch(emptyBasketAction())}></i></Link> }\r\n                                                                  </td>\r\n                                                            </tr>\r\n                                                      ))\r\n                                                }\r\n                                          </tbody>\r\n                                    </Table>\r\n                              )\r\n                        }\r\n                  </div>\r\n            </div>\r\n      )\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport AddFoodToMenu from \"./components/admin/AddFoodToMenu\";\r\nimport Adduser from \"./components/admin/Adduser\";\r\nimport Customers from \"./components/admin/Customers\";\r\nimport EditFood from \"./components/admin/EditFood\";\r\nimport Edituser from \"./components/admin/Edituser\";\r\nimport Foods from \"./components/admin/Foods\";\r\nimport Orders from \"./components/admin/Orders\";\r\nimport Users from \"./components/admin/Users\";\r\nimport AdminPage from \"./components/AdminPage\";\r\nimport BasketPage from \"./components/BasketPage\";\r\nimport CreateCustomer from \"./components/customer/CreateCustomer\";\r\nimport EditCustomer from \"./components/customer/EditCustomer\";\r\nimport CustomersPage from \"./components/CustomersPage\";\r\nimport EditOrder from \"./components/EditOrder\";\r\nimport Homepage from \"./components/Homepage\";\r\nimport LoginPage from \"./components/LoginPage\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport OrderSending from \"./components/OrderSending\";\r\nimport OrdersPage from \"./components/OrdersPage\";\r\nimport PageNotFound from \"./components/PageNotFound\";\r\nimport SignupPage from \"./components/SignupPage\";\r\nimport Userorders from \"./components/Userorders\";\r\n\r\nexport default function App() {\r\n  const userloged = useSelector((state) => state.loginUserReducer.userLoged);\r\n\r\n  return (\r\n    <div>\r\n      <BrowserRouter basename=\"/\">\r\n        <Navbar />\r\n        <Switch>\r\n          <Route path=\"/\" component={Homepage} exact />\r\n          <Route path=\"/basket\" component={BasketPage} exact />\r\n          <Route path=\"/login\" component={LoginPage} exact />\r\n          {userloged &&\r\n            userloged.access === \"admin\" &&\r\n            userloged.isActive === true && (\r\n              <Switch>\r\n                <Route path=\"/admin\" component={AdminPage} exact />\r\n                <Route path=\"/admin/users\" component={Users} exact />\r\n                <Route path=\"/admin/foods\" component={Foods} exact />\r\n                <Route path=\"/admin/orders\" component={Orders} exact />\r\n                <Route path=\"/admin/customers\" component={Customers} exact />\r\n                <Route\r\n                  path=\"/admin/foods/addtomenu\"\r\n                  component={AddFoodToMenu}\r\n                  exact\r\n                />\r\n                <Route\r\n                  path=\"/admin/foods/edit/:id\"\r\n                  component={EditFood}\r\n                  exact\r\n                />\r\n                <Route path=\"/admin/users/adduser\" component={Adduser} exact />\r\n                <Route\r\n                  path=\"/admin/users/edit/:id\"\r\n                  component={Edituser}\r\n                  exact\r\n                />\r\n                <Route path=\"/signup\" component={SignupPage} exact />\r\n                <Route path=\"/orders\" component={OrdersPage} exact />\r\n                <Route path=\"/userorder\" component={Userorders} exact />\r\n                <Route path=\"/ordersending\" component={OrderSending} exact />\r\n                <Route path=\"/customerspage\" component={CustomersPage} exact />\r\n                <Route\r\n                  path=\"/customerspage/create\"\r\n                  component={CreateCustomer}\r\n                  exact\r\n                />\r\n                <Route\r\n                  path=\"/customerspage/edit/:id\"\r\n                  component={EditCustomer}\r\n                  exact\r\n                />\r\n                <Route path=\"/userorder/edit/:id\" component={EditOrder} exact />\r\n                <Route component={PageNotFound} exact />\r\n              </Switch>\r\n            )}\r\n          {userloged &&\r\n            userloged.access !== \"admin\" &&\r\n            userloged.isActive === true && (\r\n              <Switch>\r\n                <Route path=\"/userorder\" component={Userorders} exact />\r\n                <Route path=\"/orders\" component={OrdersPage} exact />\r\n                <Route path=\"/ordersending\" component={OrderSending} exact />\r\n                <Route path=\"/customerspage\" component={CustomersPage} exact />\r\n                <Route\r\n                  path=\"/customerspage/create\"\r\n                  component={CreateCustomer}\r\n                  exact\r\n                />\r\n                <Route\r\n                  path=\"/customerspage/edit/:id\"\r\n                  component={EditCustomer}\r\n                  exact\r\n                />\r\n                <Route path=\"/userorder/edit/:id\" component={EditOrder} exact />\r\n                <Route component={PageNotFound} exact />\r\n              </Switch>\r\n            )}\r\n          <Route component={PageNotFound} exact />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers, createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport { addToBasketReducer } from './reducers/basketReducer'\r\nimport { addNewCustomerReducer, editCustomerReducer, findCustomerByIdReducer, getAllCustomersReducer, removeCustomerReducer } from './reducers/customersReducer'\r\nimport { addFoodToMenuReducer, editFoodReducer, getAllFoodsReducer, removeFoodReducer } from './reducers/foodReducers'\r\nimport { addNewOrderReducer, editOrderReducer, findOrderReducer, getAllOrdersReducer, getAllSendingOrdersReducer, sentOrderReducer, userOrdersReducer } from './reducers/ordersReducers'\r\nimport { addUserReducer, deleteUserReducer, editUserReducer, getAllUsersReducer, loginUserReducer, updateUserReducer } from './reducers/usersReducer'\r\n\r\nconst finalReducers = combineReducers({\r\n    addFoodToMenuReducer: addFoodToMenuReducer,\r\n    getAllFoodsReducer: getAllFoodsReducer,\r\n    removeFoodReducer: removeFoodReducer,\r\n    editFoodReducer: editFoodReducer,\r\n    addToBasketReducer: addToBasketReducer,\r\n    addUserReducer: addUserReducer,\r\n    getAllUsersReducer: getAllUsersReducer,\r\n    editUserReducer: editUserReducer,\r\n    updateUserReducer: updateUserReducer,\r\n    deleteUserReducer: deleteUserReducer,\r\n    loginUserReducer: loginUserReducer,\r\n    addNewCustomerReducer: addNewCustomerReducer,\r\n    findCustomerByIdReducer: findCustomerByIdReducer,\r\n    getAllCustomersReducer: getAllCustomersReducer,\r\n    removeCustomerReducer: removeCustomerReducer,\r\n    editCustomerReducer: editCustomerReducer,\r\n    addNewOrderReducer: addNewOrderReducer,\r\n    userOrdersReducer: userOrdersReducer,\r\n    editOrderReducer: editOrderReducer,\r\n    sentOrderReducer: sentOrderReducer,\r\n    findOrderReducer: findOrderReducer,\r\n    getAllSendingOrdersReducer: getAllSendingOrdersReducer,\r\n    getAllOrdersReducer: getAllOrdersReducer\r\n})\r\n\r\nconst basket = localStorage.getItem('basket') ? JSON.parse(localStorage.getItem('basket')) : []\r\nconst userlogedin = localStorage.getItem('userlogedin') ? JSON.parse(localStorage.getItem('userlogedin')) : null\r\n\r\nconst initialState = {\r\n    addToBasketReducer: { basketItems: basket },\r\n    loginUserReducer: { userLoged: userlogedin }\r\n}\r\n\r\nconst composeEnhancer = composeWithDevTools({})\r\n\r\nconst store = createStore(finalReducers, initialState, composeEnhancer(applyMiddleware(thunk)))\r\n\r\nexport default store","export const addFoodToMenuReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_FOOD_TO_MENU_REQUEST':\r\n            return {\r\n                loading: true,\r\n                ...state\r\n            }\r\n        case 'ADD_FOOD_TO_MENU_SUCCESS':\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            }\r\n        case 'ADD_FOOD_TO_MENU_FAILED':\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const getAllFoodsReducer = (state = { foods: [] }, action) => {\r\n    switch (action.type) {\r\n        case 'GET_ALL_FOODS_REQUEST':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case 'GET_ALL_FOODS_SUCCESS':\r\n            return {\r\n                foods: action.payload,\r\n                loading: false,\r\n            }\r\n        case 'GET_ALL_FOODS_FAILED':\r\n            return {\r\n                error: action.payload,\r\n                loading: false,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const removeFoodReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_FOOD_REQUEST':\r\n            return {\r\n                loadingRemove: true,\r\n                ...state\r\n            }\r\n        case 'DELETE_FOOD_SUCCESS':\r\n            return {\r\n                loadingRemove: false,\r\n            }\r\n        case 'DELETE_FOOD_FAILED':\r\n            return {\r\n                loadingRemove: false,\r\n                error: action.payload,\r\n                failed: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const editFoodReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'EDIT_FOOD_REQUEST':\r\n            return {\r\n                ...state,\r\n                loadingEdit: true,\r\n            }\r\n        case 'EDIT_FOOD_SUCCESS':\r\n            return {\r\n                loadingEdit: false,\r\n            }\r\n        case 'EDIT_FOOD_FAILED':\r\n            return {\r\n                loadingEdit: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","export const addToBasketReducer = (state = { basketItems: [] }, action) => {\r\n      switch (action.type) {\r\n            case 'ADD_TO_BASKET':\r\n                  const alreadyAdded = state.basketItems.find(item => item._id === action.payload._id)\r\n\r\n                  if (alreadyAdded) {\r\n                        return {\r\n                              ...state,\r\n                              basketItems: state.basketItems.map(item => item._id === action.payload._id ? action.payload : item)\r\n                        }\r\n                  } else {\r\n                        return {\r\n                              ...state,\r\n                              basketItems: [...state.basketItems, action.payload]\r\n                        }\r\n                  }\r\n\r\n            case 'REMOVE_FROM_BASKET':\r\n                  return {\r\n                        basketItems: [...state.basketItems.filter(item => item._id !== action.payload._id)]\r\n                  }\r\n            case 'EMPTY_BASKET':\r\n                  return {\r\n                        ...state,\r\n                        basketItems: []\r\n                  }\r\n            default:\r\n                  return state\r\n      }\r\n}\r\n","export const addUserReducer = (state = {}, action) => {\r\n      switch (action.type) {\r\n            case 'ADD_USER_REQUEST':\r\n                  return {\r\n                        ...state,\r\n                        loading: true,\r\n                  }\r\n            case 'ADD_USER_SUCCESS':\r\n                  return {\r\n                        loading: false,\r\n                  }\r\n            case 'ADD_USER_FAILED':\r\n                  return {\r\n                        loading: false,\r\n                        error: action.payload,\r\n                  }\r\n            default:\r\n                  return state\r\n      }\r\n}\r\n\r\nexport const getAllUsersReducer = (state = { users: [] }, action) => {\r\n      switch (action.type) {\r\n            case 'GET_ALL_USERS_REQUEST':\r\n                  return {\r\n                        ...state,\r\n                        loading: true,\r\n                  }\r\n            case 'GET_ALL_USERS_SUCCESS':\r\n                  return {\r\n                        loading: false,\r\n                        users: action.payload\r\n                  }\r\n            case 'GET_ALL_USERS_FAILED':\r\n                  return {\r\n                        loading: false,\r\n                        error: action.payload\r\n                  }\r\n            default:\r\n                  return state\r\n      }\r\n}\r\n\r\nexport const editUserReducer = (state = { currentuser: [] }, action) => {\r\n      switch (action.type) {\r\n            case 'EDIT_USER_REQUEST':\r\n                  return {\r\n                        loading: true,\r\n                  }\r\n            case 'EDIT_USER_SUCCESS':\r\n                  return {\r\n                        loading: false,\r\n                        currentuser: action.payload\r\n                  }\r\n            case 'EDIT_USER_FAILED':\r\n                  return {\r\n                        loading: false,\r\n                        error: action.payload\r\n                  }\r\n            default:\r\n                  return state\r\n      }\r\n}\r\n\r\nexport const updateUserReducer = (state = {}, action) => {\r\n      switch (action.type) {\r\n            case 'UPDATE_USER_INFO_REQUEST':\r\n                  return {\r\n                        ...state,\r\n                        loadingUpdate: true,\r\n                  }\r\n            case 'UPDATE_USER_INFO_SUCCESS':\r\n                  return {\r\n                        loadingUpdate: false,\r\n                  }\r\n            case 'UPDATE_USER_INFO_FAILED':\r\n                  return {\r\n                        loadingUpdate: false,\r\n                        error: action.payload\r\n                  }\r\n            default:\r\n                  return state\r\n      }\r\n}\r\n\r\nexport const deleteUserReducer = (state = {}, action) => {\r\n      switch (action.type) {\r\n            case 'DELETE_USER_REQUEST':\r\n                  return {\r\n                        ...state,\r\n                  }\r\n            case 'DELETE_USER_SUCCESS':\r\n                  return {\r\n                        success: true,\r\n                  }\r\n            case 'DELETE_USER_FAILED':\r\n                  return {\r\n                        error: action.payload\r\n                  }\r\n            default:\r\n                  return state\r\n      }\r\n}\r\n\r\nexport const loginUserReducer = (state = { }, action) => {\r\n      switch (action.type) {\r\n            case 'LOGIN_USER_REQUEST':\r\n                  return {\r\n                        ...state,\r\n                        loading: true,\r\n                  }\r\n            case 'LOGIN_USER_SUCCESS':\r\n                  return {\r\n                        userLoged: action.payload,\r\n                        loading: false,\r\n                  }\r\n            case 'LOGIN_USER_FAILED':\r\n                  return {\r\n                        error: action.payload,\r\n                        loading: false,\r\n                  }\r\n            default:\r\n                  return state\r\n      }\r\n}","export const addNewCustomerReducer = (state = {}, action) => {\r\n      switch (action.type) {\r\n            case 'ADD_NEW_CUSTOMER_REQUEST':\r\n                  return {\r\n                        ...state,\r\n                        loading: true,\r\n                  }\r\n            case 'ADD_NEW_CUSTOMER_SUCCESS':\r\n                  return {\r\n                        loading: false,\r\n                        success: true,\r\n                  }\r\n            case 'ADD_NEW_CUSTOMER_FAILED':\r\n                  return {\r\n                        loading: false,\r\n                        error: action.payload,\r\n                  }\r\n            default:\r\n                  return state\r\n      }\r\n}\r\n\r\nexport const findCustomerByIdReducer = (state = {}, action) => {\r\n      switch (action.type) {\r\n            case 'FIND_CUSTOMER_BY_ID_REQUEST':\r\n                  return {\r\n                        loading: true,\r\n                        ...state,\r\n                  }\r\n            case 'FIND_CUSTOMER_BY_ID_SUCCESS':\r\n                  return {\r\n                        loading: false,\r\n                        searchedCustomer: action.payload\r\n                  }\r\n            case 'FIND_CUSTOMER_BY_ID_FAILED':\r\n                  return {\r\n                        loading: false,\r\n                        error: action.payload\r\n                  }\r\n            default:\r\n                  return state\r\n      }\r\n}\r\n\r\nexport const getAllCustomersReducer = (state = {}, action) => {\r\n      switch (action.type) {\r\n            case 'GET_ALL_CUSTOMERS_REQUEST':\r\n                  return {\r\n                        ...state,\r\n                        loadingcustomers: true,\r\n                  }\r\n            case 'GET_ALL_CUSTOMERS_SUCCESS':\r\n                  return {\r\n                        loadingcustomers: false,\r\n                        allcustomers: action.payload\r\n                  }\r\n            case 'GET_ALL_CUSTOMERS_FAILED':\r\n                  return {\r\n                        loadingcustomers: false,\r\n                        errorLoadingCustomers: action.payload\r\n                  }\r\n            default:\r\n                  return state\r\n      }\r\n}\r\n\r\nexport const removeCustomerReducer = (state = {}, action) => {\r\n      switch (action.type) {\r\n            case 'REMOVE_CUSTOMER_REQUEST':\r\n                  return {\r\n                        ...state,\r\n                        loading: true,\r\n                  }\r\n            case 'REMOVE_CUSTOMER_SUCCESS':\r\n                  return {\r\n                        loading: false,\r\n                        success: true,\r\n                  }\r\n            case 'REMOVE_CUSTOMER_FAILED':\r\n                  return {\r\n                        loading: false,\r\n                        error: action.payload,\r\n                  }\r\n            default:\r\n                  return state\r\n      }\r\n}\r\n\r\nexport const editCustomerReducer = (state = {}, action) => {\r\n      switch (action.type) {\r\n            case 'EDIT_CUSTOMER_REQUEST':\r\n                  return {\r\n                        ...state,\r\n                        loading: true,\r\n                  }\r\n            case 'EDIT_CUSTOMER_SUCCESS':\r\n                  return {\r\n                        loading: false,\r\n                        success: true,\r\n                  }\r\n            case 'EDIT_CUSTOMER_FAILED':\r\n                  return {\r\n                        loading: false,\r\n                        error: action.payload,\r\n                  }\r\n            default:\r\n                  return state\r\n      }\r\n}","export const addNewOrderReducer = (state = {}, action) => {\r\n      switch (action.type) {\r\n            case 'ADD_NEW_ORDER_REQUEST':\r\n                  return {\r\n                        ...state,\r\n                        orderLoading: true,\r\n                  }\r\n            case 'ADD_NEW_ORDER_SUCCESS':\r\n                  return {\r\n                        orderLoading: false,\r\n                        success: true,\r\n                  }\r\n            case 'ADD_NEW_ORDER_FAILED':\r\n                  return {\r\n                        orderLoading: false,\r\n                        error: action.payload\r\n                  }\r\n            default:\r\n                  return state\r\n      }\r\n}\r\n\r\nexport const userOrdersReducer = (state = {}, action) => {\r\n      switch (action.type) {\r\n            case 'USER_ORDERS_REQUEST':\r\n                  return {\r\n                        ...state,\r\n                        loading: true\r\n                  }\r\n            case 'USER_ORDERS_SUCCESS':\r\n                  return {\r\n                        loading: false,\r\n                        userorder: action.payload\r\n                  }\r\n            case 'USER_ORDERS_FAILED':\r\n                  return {\r\n                        loading: false,\r\n                        error: action.payload\r\n                  }\r\n            default:\r\n                  return state\r\n      }\r\n}\r\n\r\nexport const editOrderReducer = (state = {}, action) => {\r\n      switch (action.type) {\r\n            case 'EDIT_ORDER_REQUEST':\r\n                  return {\r\n                        ...state,\r\n                        loadingEdit: true,\r\n                  }\r\n            case 'EDIT_ORDER_SUCCESS':\r\n                  return {\r\n                        loadingEdit: false,\r\n                        success: true,\r\n                  }\r\n            case 'EDIT_ORDER_FAILED':\r\n                  return {\r\n                        loadingEdit: false,\r\n                        error: action.payload\r\n                  }\r\n            default:\r\n                  return state\r\n      }\r\n}\r\n\r\nexport const sentOrderReducer = (state = {}, action) => {\r\n      switch (action.type) {\r\n            case 'SENT_ORDER_REQUEST':\r\n                  return {\r\n                        ...state,\r\n                        loadingEdit: true,\r\n                  }\r\n            case 'SENT_ORDER_SUCCESS':\r\n                  return {\r\n                        loadingEdit: false,\r\n                        success: true,\r\n                  }\r\n            case 'SENT_ORDER_FAILED':\r\n                  return {\r\n                        loadingEdit: false,\r\n                        error: action.payload\r\n                  }\r\n            default:\r\n                  return state\r\n      }\r\n}\r\n\r\nexport const findOrderReducer = (state = {}, action) => {\r\n      switch (action.type) {\r\n            case 'FIND_ORDER_REQUEST':\r\n                  return {\r\n                        ...state,\r\n                        orderloading: true,\r\n                  }\r\n            case 'FIND_ORDER_SUCCESS':\r\n                  return {\r\n                        orderloading: false,\r\n                        orderfound: action.payload\r\n                  }\r\n            case 'SENT_ORDER_FAILED':\r\n                  return {\r\n                        orderloading: false,\r\n                        ordererror: action.payload\r\n                  }\r\n            default:\r\n                  return state\r\n      }\r\n}\r\n\r\nexport const getAllSendingOrdersReducer = (state = {}, action) => {\r\n      switch (action.type) {\r\n            case 'GET_ALL_SENDING_REQUEST':\r\n                  return {\r\n                        ...state,\r\n                        loading: true\r\n                  }\r\n            case 'GET_ALL_SENDING_SUCCESS':\r\n                  return {\r\n                        loading: false,\r\n                        sendingOrders: action.payload\r\n                  }\r\n            case 'GET_ALL_SENDING_FAILED':\r\n                  return {\r\n                        loading: false,\r\n                        error: action.payload\r\n                  }\r\n            default:\r\n                  return state\r\n      }\r\n}\r\n\r\nexport const getAllOrdersReducer = (state = {}, action) => {\r\n      switch (action.type) {\r\n            case 'GET_ALL_ORDERS_REQUEST':\r\n                  return {\r\n                        ...state,\r\n                        loading: true\r\n                  }\r\n            case 'GET_ALL_ORDERS_SUCCESS':\r\n                  return {\r\n                        loading: false,\r\n                        allOrders: action.payload\r\n                  }\r\n            case 'GET_ALL_ORDERS_FAILED':\r\n                  return {\r\n                        loading: false,\r\n                        error: action.payload\r\n                  }\r\n            default:\r\n                  return state\r\n      }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './components/reduxfiles/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}